{
  "uid" : "71511f655310a2b5",
  "name" : "test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT#test_wpa2_only_eap_5g_NAT",
  "historyId" : "710dc9f93680d4eedc1d2589c5c094fa",
  "time" : {
    "start" : 1626747772189,
    "stop" : 1626747972619,
    "duration" : 200430
  },
  "description" : "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        ",
  "descriptionHtml" : "<pre><code>         EAP Passpoint BRIDGE Mode\n         pytest -m &quot;interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg&quot;\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f5ee03e7580>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1212.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f5ef2c59f40>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12499, 12500, 12501, 12502], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:265: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f5ef2c59f40>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12499, 12500, 12501, 12502], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:344: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626742428756,
      "stop" : 1626742428756,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626749674218,
      "stop" : 1626749736303,
      "duration" : 62085
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f61206bf23feb1",
      "name" : "RF Profile Created : wifi5",
      "source" : "f61206bf23feb1.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "30b6687289fe8a0a",
      "name" : "SSID Profile Created",
      "source" : "30b6687289fe8a0a.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "9eb3607b185cf0c6",
      "name" : "SSID Profile Created",
      "source" : "9eb3607b185cf0c6.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "831d1085a0e77dd3",
      "name" : "SSID Profile Created",
      "source" : "831d1085a0e77dd3.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "52471fe4a9b8477d",
      "name" : "SSID Profile Created",
      "source" : "52471fe4a9b8477d.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "92452edabebdf24c",
      "name" : "Equipment AP Profile Created",
      "source" : "92452edabebdf24c.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "c4ad153bebc5772d",
      "name" : "APNOS LIbrary: ",
      "source" : "c4ad153bebc5772d.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "75b91748ba51a612",
      "name" : "openwrt_ctl Setup",
      "source" : "75b91748ba51a612.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "2dedc736f97514ee",
      "name" : "vif config Output Msg: ",
      "source" : "2dedc736f97514ee.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "a5caa667ef5023f0",
      "name" : "vif config Err Msg: ",
      "source" : "a5caa667ef5023f0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fbef6986dfe3f434",
      "name" : "get_vif_config_ssids ",
      "source" : "fbef6986dfe3f434.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "63559bcb2da2c393",
      "name" : "vif config Output Msg: ",
      "source" : "63559bcb2da2c393.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "30650ec693e3314c",
      "name" : "vif config Err Msg: ",
      "source" : "30650ec693e3314c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ccd6ae4835cec70f",
      "name" : "get_vif_config_ssids ",
      "source" : "ccd6ae4835cec70f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ffed5ecdb1520729",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "ffed5ecdb1520729.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "539052ea9950b52d",
      "name" : "APNOS LIbrary: ",
      "source" : "539052ea9950b52d.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "19189fc5f7fb98c0",
      "name" : "openwrt_ctl Setup",
      "source" : "19189fc5f7fb98c0.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "df1f4d79c6614366",
      "name" : "vif state Output Msg: ",
      "source" : "df1f4d79c6614366.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "86446ecf903dcb58",
      "name" : "vif state Err Msg: ",
      "source" : "86446ecf903dcb58.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "80e437826163c0ec",
      "name" : "get_vif_state_ssids ",
      "source" : "80e437826163c0ec.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "2cc6cef033f41d42",
      "name" : "vif config Output Msg: ",
      "source" : "2cc6cef033f41d42.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "7acb831bd9d039f6",
      "name" : "vif config Err Msg: ",
      "source" : "7acb831bd9d039f6.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bc17469c8bf7fe43",
      "name" : "get_vif_config_ssids ",
      "source" : "bc17469c8bf7fe43.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ea9e1fb5fd437d",
      "name" : "vif state Output Msg: ",
      "source" : "ea9e1fb5fd437d.attach",
      "type" : "text/plain",
      "size" : 5802
    }, {
      "uid" : "d70efb407efaf620",
      "name" : "vif state Err Msg: ",
      "source" : "d70efb407efaf620.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8482fa78a9353be4",
      "name" : "get_vif_state_ssids ",
      "source" : "8482fa78a9353be4.attach",
      "type" : "text/plain",
      "size" : 46
    }, {
      "uid" : "9f304ffc51069969",
      "name" : "vif config Output Msg: ",
      "source" : "9f304ffc51069969.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "d154fe94ecc7b163",
      "name" : "vif config Err Msg: ",
      "source" : "d154fe94ecc7b163.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "32d7dd9f3eb66363",
      "name" : "get_vif_config_ssids ",
      "source" : "32d7dd9f3eb66363.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7f712d409decd30b",
      "name" : "vif state Output Msg: ",
      "source" : "7f712d409decd30b.attach",
      "type" : "text/plain",
      "size" : 7395
    }, {
      "uid" : "86fdcb3ba27cdf2d",
      "name" : "vif state Err Msg: ",
      "source" : "86fdcb3ba27cdf2d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "832f3a8788493e01",
      "name" : "get_vif_state_ssids ",
      "source" : "832f3a8788493e01.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b30492ffea679de7",
      "name" : "vif config Output Msg: ",
      "source" : "b30492ffea679de7.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "707fd582f793f304",
      "name" : "vif config Err Msg: ",
      "source" : "707fd582f793f304.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ade2987fd0663278",
      "name" : "get_vif_config_ssids ",
      "source" : "ade2987fd0663278.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "48b94f75f91ee301",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "48b94f75f91ee301.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626747745964,
      "stop" : 1626747772188,
      "duration" : 26224
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626742426815,
      "stop" : 1626742426815,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8f47738898de897e",
      "name" : "Testbed Selected : ",
      "source" : "8f47738898de897e.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626745862851,
      "stop" : 1626745884234,
      "duration" : 21383
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2a9cffb43a7df8f1",
      "name" : "RF Profile Created : wifi5",
      "source" : "2a9cffb43a7df8f1.attach",
      "type" : "text/plain",
      "size" : 12259
    }, {
      "uid" : "298ff1ccf02d3534",
      "name" : "Radius Profile Created",
      "source" : "298ff1ccf02d3534.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "39bd53e2a344ea47",
      "name" : "SSID Profile Created",
      "source" : "39bd53e2a344ea47.attach",
      "type" : "text/plain",
      "size" : 2820
    }, {
      "uid" : "6e81f688b89c051b",
      "name" : "SSID Profile Created",
      "source" : "6e81f688b89c051b.attach",
      "type" : "text/plain",
      "size" : 2836
    }, {
      "uid" : "c5d438c4fc1a7568",
      "name" : "SSID Profile Created",
      "source" : "c5d438c4fc1a7568.attach",
      "type" : "text/plain",
      "size" : 2832
    }, {
      "uid" : "1c95da58748c5f77",
      "name" : "SSID Profile Created",
      "source" : "1c95da58748c5f77.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "cf725762086c7725",
      "name" : "SSID Profile Created",
      "source" : "cf725762086c7725.attach",
      "type" : "text/plain",
      "size" : 2846
    }, {
      "uid" : "a15ff0948f0230bc",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "a15ff0948f0230bc.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "8e90a20612a5cf54",
      "name" : "Passpoint Operator Profile Created",
      "source" : "8e90a20612a5cf54.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "4f8b825eac8ef4a0",
      "name" : "Passpoint Venue Profile Created",
      "source" : "4f8b825eac8ef4a0.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "4e739296b2343ea2",
      "name" : "Passpoint Profile Created",
      "source" : "4e739296b2343ea2.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "7d34b99565fa72c9",
      "name" : "Updating SSID profile",
      "source" : "7d34b99565fa72c9.attach",
      "type" : "text/plain",
      "size" : 149
    }, {
      "uid" : "817684fbf7e9a95",
      "name" : "Updating SSID profile",
      "source" : "817684fbf7e9a95.attach",
      "type" : "text/plain",
      "size" : 145
    }, {
      "uid" : "819387196c7f0c4f",
      "name" : "Updating SSID profile",
      "source" : "819387196c7f0c4f.attach",
      "type" : "text/plain",
      "size" : 159
    }, {
      "uid" : "91b0c513421cd1e3",
      "name" : "Updating SSID profile",
      "source" : "91b0c513421cd1e3.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "a08bd8ae52c6bfce",
      "name" : "Equipment AP Profile Created",
      "source" : "a08bd8ae52c6bfce.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626742428674,
      "stop" : 1626742428755,
      "duration" : 81
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626743691094,
      "stop" : 1626743691094,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dd29ee3bf569cad",
      "name" : "Passpoint Provider Info: ",
      "source" : "dd29ee3bf569cad.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626742428756,
      "stop" : 1626742428757,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "334e57ac6e95bcce",
      "name" : "Test Cases Requires: ",
      "source" : "334e57ac6e95bcce.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626742426816,
      "stop" : 1626742428322,
      "duration" : 1506
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e50ddf5e3a67f06a",
      "name" : "added openwrtctl.py to :",
      "source" : "e50ddf5e3a67f06a.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "a7544f79058c0fed",
      "name" : "APNOS LIbrary: ",
      "source" : "a7544f79058c0fed.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "1f9fae499a2c4c6a",
      "name" : "openwrt_ctl Setup",
      "source" : "1f9fae499a2c4c6a.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626743691095,
      "stop" : 1626743691096,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4c17b8233f3d2307",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "4c17b8233f3d2307.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626743691094,
      "stop" : 1626743691095,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5813a1363d21f9d5",
      "name" : "Passpoint operator Info: ",
      "source" : "5813a1363d21f9d5.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626743691095,
      "stop" : 1626743691095,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "50b17f6bd468358a",
      "name" : "Passpoint venue Info: ",
      "source" : "50b17f6bd468358a.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626743691095,
      "stop" : 1626743691095,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8a08c68cfc2fb950",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "8a08c68cfc2fb950.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626747745963,
      "stop" : 1626747745964,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626742428323,
      "stop" : 1626742428673,
      "duration" : 350
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "aad971c88d287b41",
      "name" : "Controller Instantiated: ",
      "source" : "aad971c88d287b41.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626743691093,
      "stop" : 1626743691093,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9b12bc2983acf7bf",
      "name" : "Passpoint profile Info: ",
      "source" : "9b12bc2983acf7bf.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626742428673,
      "stop" : 1626742428673,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fb656b2f8b615305",
      "name" : "VLAN Created: ",
      "source" : "fb656b2f8b615305.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626747487938,
      "stop" : 1626747745963,
      "duration" : 258025
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ad80b07cb17602c7",
      "name" : "Equipment AP Profile Updated",
      "source" : "ad80b07cb17602c7.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "5c6ecb8e68ba8e14",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "5c6ecb8e68ba8e14.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "cdfb351bd6747899",
      "name" : "APNOS LIbrary: ",
      "source" : "cdfb351bd6747899.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "403f804474933293",
      "name" : "openwrt_ctl Setup",
      "source" : "403f804474933293.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "f9fc61d1ef408f6e",
      "name" : "vif config Output Msg: ",
      "source" : "f9fc61d1ef408f6e.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "ad46152a3dec1f9",
      "name" : "vif config Err Msg: ",
      "source" : "ad46152a3dec1f9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "12ddf94052e8304b",
      "name" : "get_vif_config_ssids ",
      "source" : "12ddf94052e8304b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "82cff9982b5ce12f",
      "name" : "vif state Output Msg: ",
      "source" : "82cff9982b5ce12f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a1b674fac415386e",
      "name" : "vif state Err Msg: ",
      "source" : "a1b674fac415386e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "61f63a1223a07427",
      "name" : "get_vif_state_ssids ",
      "source" : "61f63a1223a07427.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "56487b3a2fde6f77",
      "name" : "vif config Output Msg: ",
      "source" : "56487b3a2fde6f77.attach",
      "type" : "text/plain",
      "size" : 7796
    }, {
      "uid" : "9f2ddbff939b40fc",
      "name" : "vif config Err Msg: ",
      "source" : "9f2ddbff939b40fc.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ce47788f2e81c292",
      "name" : "get_vif_config_ssids ",
      "source" : "ce47788f2e81c292.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "de2bdd389df612f",
      "name" : "vif state Output Msg: ",
      "source" : "de2bdd389df612f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "fe828eb496f38b93",
      "name" : "vif state Err Msg: ",
      "source" : "fe828eb496f38b93.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "feaba3ba9e27f0de",
      "name" : "get_vif_state_ssids ",
      "source" : "feaba3ba9e27f0de.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "1c4947851cbec310",
      "name" : "vif config Output Msg: ",
      "source" : "1c4947851cbec310.attach",
      "type" : "text/plain",
      "size" : 7796
    }, {
      "uid" : "7400b0175cb450ec",
      "name" : "vif config Err Msg: ",
      "source" : "7400b0175cb450ec.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4941263032fe45d6",
      "name" : "get_vif_config_ssids ",
      "source" : "4941263032fe45d6.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "900c75ed7a15bb84",
      "name" : "vif state Output Msg: ",
      "source" : "900c75ed7a15bb84.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "6f47aec5ef2d76b4",
      "name" : "vif state Err Msg: ",
      "source" : "6f47aec5ef2d76b4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "51d53e0cff90cc2b",
      "name" : "get_vif_state_ssids ",
      "source" : "51d53e0cff90cc2b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "adff5b726cddca8d",
      "name" : "vif config Output Msg: ",
      "source" : "adff5b726cddca8d.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "93be2c13385e2ad9",
      "name" : "vif config Err Msg: ",
      "source" : "93be2c13385e2ad9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8158ef410349767f",
      "name" : "get_vif_config_ssids ",
      "source" : "8158ef410349767f.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "4d515bbb4ec557b4",
      "name" : "vif state Output Msg: ",
      "source" : "4d515bbb4ec557b4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a27e5a6cd2873d50",
      "name" : "vif state Err Msg: ",
      "source" : "a27e5a6cd2873d50.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6bc4a01bca4233ad",
      "name" : "get_vif_state_ssids ",
      "source" : "6bc4a01bca4233ad.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "5f49ea6777bdb6a9",
      "name" : "vif config Output Msg: ",
      "source" : "5f49ea6777bdb6a9.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "dec3eb92328614ff",
      "name" : "vif config Err Msg: ",
      "source" : "dec3eb92328614ff.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "349b30f6936011ea",
      "name" : "get_vif_config_ssids ",
      "source" : "349b30f6936011ea.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "c07c25f0e634746",
      "name" : "vif state Output Msg: ",
      "source" : "c07c25f0e634746.attach",
      "type" : "text/plain",
      "size" : 4350
    }, {
      "uid" : "951d62d9cc967a31",
      "name" : "vif state Err Msg: ",
      "source" : "951d62d9cc967a31.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "98d6aa128852cfea",
      "name" : "get_vif_state_ssids ",
      "source" : "98d6aa128852cfea.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "d7abb804c5dc8c30",
      "name" : "vifC status on AP :: ",
      "source" : "d7abb804c5dc8c30.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "4caebb11971b61eb",
      "name" : "vifS status on AP :: ",
      "source" : "4caebb11971b61eb.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626742428756,
      "stop" : 1626742428756,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626742426816,
      "stop" : 1626742426816,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626742426815,
      "stop" : 1626742426815,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1b6dc156e95b6f77",
      "name" : "Testbed Selected: ",
      "source" : "1b6dc156e95b6f77.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f5ee03e7580>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1212.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f5ef2c59f40>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12499, 12500, 12501, 12502], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:265: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f5ef2c59f40>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12499, 12500, 12501, 12502], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"a8c817a5-3a34-4915-858d-25c6370dc624\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5ee03877f0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:344: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f4571c008543db4b",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "f4571c008543db4b.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "48b9c8968c521ab2",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "48b9c8968c521ab2.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "4f6403244a8596a",
      "name" : "log",
      "source" : "4f6403244a8596a.txt",
      "type" : "text/plain",
      "size" : 1451
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626751548214,
      "stop" : 1626751548214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626750237005,
      "stop" : 1626750237005,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626750237005,
      "stop" : 1626750261715,
      "duration" : 24710
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eb4fc9169463ee79",
      "name" : "Tear Down in Profiles ",
      "source" : "eb4fc9169463ee79.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626747972763,
      "stop" : 1626747972763,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626747972763,
      "stop" : 1626748008828,
      "duration" : 36065
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626751548242,
      "stop" : 1626751548242,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626748008830,
      "stop" : 1626748008831,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626748008831,
      "stop" : 1626748034383,
      "duration" : 25552
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b1d0c7a81e563509",
      "name" : "Tear Down in Profiles ",
      "source" : "b1d0c7a81e563509.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626751548218,
      "stop" : 1626751548218,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626751548252,
      "stop" : 1626751548252,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626751548212,
      "stop" : 1626751548212,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626751548227,
      "stop" : 1626751548227,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626751548248,
      "stop" : 1626751548248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626751548251,
      "stop" : 1626751548251,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626751548250,
      "stop" : 1626751548250,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626751548249,
      "stop" : 1626751548249,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626748008828,
      "stop" : 1626748008829,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626751548224,
      "stop" : 1626751548224,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626751548224,
      "stop" : 1626751548224,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "acd385614ded949b",
      "name" : "Controller Teardown: ",
      "source" : "acd385614ded949b.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626751548253,
      "stop" : 1626751548253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626751548220,
      "stop" : 1626751548220,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626748008829,
      "stop" : 1626748008829,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626751548216,
      "stop" : 1626751548216,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626751548230,
      "stop" : 1626751548230,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626751548236,
      "stop" : 1626751548237,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "NAT MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "nat"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_NatMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingNAT"
  }, {
    "name" : "host",
    "value" : "interop-ci-66-ios-gd9lc"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 18,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 19
      },
      "items" : [ {
        "uid" : "fe6fd373a7a9688c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626665294299,
          "stop" : 1626665375555,
          "duration" : 81256
        }
      }, {
        "uid" : "e56f695a68c4e354",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626578879776,
          "stop" : 1626578960299,
          "duration" : 80523
        }
      }, {
        "uid" : "f21e6bd66d67505d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626490483257,
          "stop" : 1626490561852,
          "duration" : 78595
        }
      }, {
        "uid" : "15dceebf396da4c6",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626406278520,
          "stop" : 1626406357899,
          "duration" : 79379
        }
      }, {
        "uid" : "265cfcdf2666c114",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308731962,
          "stop" : 1626308731962,
          "duration" : 0
        }
      }, {
        "uid" : "28495cf0d48f6e91",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625799720372,
          "stop" : 1625799720373,
          "duration" : 1
        }
      }, {
        "uid" : "e45e96839b7c9f05",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625742030942,
          "stop" : 1625742030943,
          "duration" : 1
        }
      }, {
        "uid" : "500be9adf160d7ce",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625627351085,
          "stop" : 1625627351086,
          "duration" : 1
        }
      }, {
        "uid" : "615b95616e80cbbe",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625541058350,
          "stop" : 1625541058351,
          "duration" : 1
        }
      }, {
        "uid" : "3010cad58874d503",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625454059798,
          "stop" : 1625454059799,
          "duration" : 1
        }
      }, {
        "uid" : "a5a4e4aba6b2821a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625368097139,
          "stop" : 1625368097139,
          "duration" : 0
        }
      }, {
        "uid" : "98c69935af680667",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625281653141,
          "stop" : 1625281653142,
          "duration" : 1
        }
      }, {
        "uid" : "ddeb888a200edfd5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625195473294,
          "stop" : 1625195473294,
          "duration" : 0
        }
      }, {
        "uid" : "cec4914210cdc086",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625105316426,
          "stop" : 1625105316426,
          "duration" : 0
        }
      }, {
        "uid" : "9e4d266557d01dc3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625022925301,
          "stop" : 1625022925301,
          "duration" : 0
        }
      }, {
        "uid" : "a0a87d80eedfb8f0",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624988765891,
          "stop" : 1624988765892,
          "duration" : 1
        }
      }, {
        "uid" : "eecb5dce0e1babc5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624970275097,
          "stop" : 1624970275097,
          "duration" : 0
        }
      }, {
        "uid" : "bddfe20f136f025a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624958636225,
          "stop" : 1624958636225,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "openRoaming", "nat", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "fiveg", "ios" ]
  },
  "source" : "71511f655310a2b5.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}", "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}]}}" ]
}
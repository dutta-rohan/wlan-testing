{
  "uid" : "3ffbbf805af9112a",
  "name" : "test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge#test_OpenRoaming_2g_WPA2_EAP_BRIDGE",
  "historyId" : "f10713e83fde7dc0a8c85549caec105c",
  "time" : {
    "start" : 1627612082275,
    "stop" : 1627612276742,
    "duration" : 194467
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fcf2057b820>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor2271.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fcf23b69640>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [19275, 19276, 19277, 19278], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:266: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fcf23b69640>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [19275, 19276, 19277, 19278], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_configuration",
    "time" : {
      "start" : 1627610687863,
      "stop" : 1627610687863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ce2b1569c04f5a7",
      "name" : "Testbed Selected: ",
      "source" : "2ce2b1569c04f5a7.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1627611810651,
      "stop" : 1627611810652,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7df48b6c46c8bdca",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "7df48b6c46c8bdca.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1627611810651,
      "stop" : 1627611810651,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "26aae19d2e02cd81",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "26aae19d2e02cd81.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1627612055909,
      "stop" : 1627612082274,
      "duration" : 26365
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1627610689478,
      "stop" : 1627610689479,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b58c75298198ebb0",
      "name" : "VLAN Created: ",
      "source" : "b58c75298198ebb0.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1627612055901,
      "stop" : 1627612055908,
      "duration" : 7
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1627610689360,
      "stop" : 1627610689478,
      "duration" : 118
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "57d4dfd492041b48",
      "name" : "Controller Instantiated: ",
      "source" : "57d4dfd492041b48.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1627610689540,
      "stop" : 1627610689540,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1627610687864,
      "stop" : 1627610689360,
      "duration" : 1496
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b869899806024a55",
      "name" : "added openwrtctl.py to :",
      "source" : "b869899806024a55.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "552571d506cfa537",
      "name" : "APNOS LIbrary: ",
      "source" : "552571d506cfa537.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "f7311df42afef010",
      "name" : "openwrt_ctl Setup",
      "source" : "f7311df42afef010.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1627610689539,
      "stop" : 1627610689539,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1627611810651,
      "stop" : 1627611810651,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e6b8e36eb060eab4",
      "name" : "Passpoint venue Info: ",
      "source" : "e6b8e36eb060eab4.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1627610689540,
      "stop" : 1627610689542,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b67155e504b34665",
      "name" : "Test Cases Requires: ",
      "source" : "b67155e504b34665.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1627611810650,
      "stop" : 1627611810651,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fa2d7a634eba0648",
      "name" : "Passpoint operator Info: ",
      "source" : "fa2d7a634eba0648.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1627610687863,
      "stop" : 1627610687864,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627616031326,
      "stop" : 1627616128795,
      "duration" : 97469
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a163cf575e1a64d0",
      "name" : "RF Profile Created : wifi5",
      "source" : "a163cf575e1a64d0.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "aa24857dd7926b43",
      "name" : "SSID Profile Created",
      "source" : "aa24857dd7926b43.attach",
      "type" : "text/plain",
      "size" : 2795
    }, {
      "uid" : "83c46a8f19f3a14c",
      "name" : "SSID Profile Created",
      "source" : "83c46a8f19f3a14c.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "453fa725de8f4004",
      "name" : "SSID Profile Created",
      "source" : "453fa725de8f4004.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "ca1311b45a51cd64",
      "name" : "SSID Profile Created",
      "source" : "ca1311b45a51cd64.attach",
      "type" : "text/plain",
      "size" : 2829
    }, {
      "uid" : "e8d5dbde161f0a0c",
      "name" : "Equipment AP Profile Created",
      "source" : "e8d5dbde161f0a0c.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "9a9e8765667fc56d",
      "name" : "APNOS LIbrary: ",
      "source" : "9a9e8765667fc56d.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "8bdf15f7a3a712f5",
      "name" : "openwrt_ctl Setup",
      "source" : "8bdf15f7a3a712f5.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "f806036ff3e77ed0",
      "name" : "vif config Output Msg: ",
      "source" : "f806036ff3e77ed0.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "dba2be26a744275f",
      "name" : "vif config Err Msg: ",
      "source" : "dba2be26a744275f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3fb1b0fd7532efe5",
      "name" : "get_vif_config_ssids ",
      "source" : "3fb1b0fd7532efe5.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "7b006a5c9785f27e",
      "name" : "vif config Output Msg: ",
      "source" : "7b006a5c9785f27e.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "f6d1ee50b18a4676",
      "name" : "vif config Err Msg: ",
      "source" : "f6d1ee50b18a4676.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "594a72ca1149e0ce",
      "name" : "get_vif_config_ssids ",
      "source" : "594a72ca1149e0ce.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "6ac3ade3a6621727",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "6ac3ade3a6621727.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "d6d178d7b327350f",
      "name" : "APNOS LIbrary: ",
      "source" : "d6d178d7b327350f.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "615362856aaf64f9",
      "name" : "openwrt_ctl Setup",
      "source" : "615362856aaf64f9.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "5cf7a67beea6a691",
      "name" : "vif state Output Msg: ",
      "source" : "5cf7a67beea6a691.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "3a36a60e6093154e",
      "name" : "vif state Err Msg: ",
      "source" : "3a36a60e6093154e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c93a4a99c297b5fb",
      "name" : "get_vif_state_ssids ",
      "source" : "c93a4a99c297b5fb.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "a8762e9b2c9d2489",
      "name" : "vif config Output Msg: ",
      "source" : "a8762e9b2c9d2489.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "3255cdb38456a0b3",
      "name" : "vif config Err Msg: ",
      "source" : "3255cdb38456a0b3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b8b0d0bb8c48cce9",
      "name" : "get_vif_config_ssids ",
      "source" : "b8b0d0bb8c48cce9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "3484b43f980933a4",
      "name" : "vif state Output Msg: ",
      "source" : "3484b43f980933a4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "4812a1a9d3699fdf",
      "name" : "vif state Err Msg: ",
      "source" : "4812a1a9d3699fdf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7271b55eb786fad1",
      "name" : "get_vif_state_ssids ",
      "source" : "7271b55eb786fad1.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "cd5cc6ddc09cce21",
      "name" : "vif config Output Msg: ",
      "source" : "cd5cc6ddc09cce21.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "9fe77efef0e85c3",
      "name" : "vif config Err Msg: ",
      "source" : "9fe77efef0e85c3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "43c943698ee8d896",
      "name" : "get_vif_config_ssids ",
      "source" : "43c943698ee8d896.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ca708172c2d2e67d",
      "name" : "vif state Output Msg: ",
      "source" : "ca708172c2d2e67d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b1b9dd92c0f3736f",
      "name" : "vif state Err Msg: ",
      "source" : "b1b9dd92c0f3736f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c130b87c24c6d260",
      "name" : "get_vif_state_ssids ",
      "source" : "c130b87c24c6d260.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "984f00204ad2279",
      "name" : "vif config Output Msg: ",
      "source" : "984f00204ad2279.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "5fce96a33e8c3ab5",
      "name" : "vif config Err Msg: ",
      "source" : "5fce96a33e8c3ab5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4ce7cf028539d4c5",
      "name" : "get_vif_config_ssids ",
      "source" : "4ce7cf028539d4c5.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e181422fc163151d",
      "name" : "vif state Output Msg: ",
      "source" : "e181422fc163151d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c476ff0e2176ba67",
      "name" : "vif state Err Msg: ",
      "source" : "c476ff0e2176ba67.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c06e0d447c86e610",
      "name" : "get_vif_state_ssids ",
      "source" : "c06e0d447c86e610.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d58b8edc546de536",
      "name" : "vif config Output Msg: ",
      "source" : "d58b8edc546de536.attach",
      "type" : "text/plain",
      "size" : 7670
    }, {
      "uid" : "5e7c81bc6e0b9b2b",
      "name" : "vif config Err Msg: ",
      "source" : "5e7c81bc6e0b9b2b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "314f2245e0b92ade",
      "name" : "get_vif_config_ssids ",
      "source" : "314f2245e0b92ade.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "2a3f2d94d211b85a",
      "name" : "vif state Output Msg: ",
      "source" : "2a3f2d94d211b85a.attach",
      "type" : "text/plain",
      "size" : 5623
    }, {
      "uid" : "bb1f11c900b6a1",
      "name" : "vif state Err Msg: ",
      "source" : "bb1f11c900b6a1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bd469b9b17905f6",
      "name" : "get_vif_state_ssids ",
      "source" : "bd469b9b17905f6.attach",
      "type" : "text/plain",
      "size" : 47
    }, {
      "uid" : "6a9d5da2ba1eb2e9",
      "name" : "vif config Output Msg: ",
      "source" : "6a9d5da2ba1eb2e9.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "2b0b686edf59ae94",
      "name" : "vif config Err Msg: ",
      "source" : "2b0b686edf59ae94.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a636a042314d1e8",
      "name" : "get_vif_config_ssids ",
      "source" : "a636a042314d1e8.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "adead6c739d7dde",
      "name" : "vif state Output Msg: ",
      "source" : "adead6c739d7dde.attach",
      "type" : "text/plain",
      "size" : 7622
    }, {
      "uid" : "e33abef68c041369",
      "name" : "vif state Err Msg: ",
      "source" : "e33abef68c041369.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ad0af96874aedad5",
      "name" : "get_vif_state_ssids ",
      "source" : "ad0af96874aedad5.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f3f40806b7bdc4d0",
      "name" : "vif config Output Msg: ",
      "source" : "f3f40806b7bdc4d0.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "351e0299697babdd",
      "name" : "vif config Err Msg: ",
      "source" : "351e0299697babdd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1b09144ff099fc01",
      "name" : "get_vif_config_ssids ",
      "source" : "1b09144ff099fc01.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "1bedeb0a2db25665",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "1bedeb0a2db25665.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 54,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1627611810650,
      "stop" : 1627611810650,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8949b01cef6397b0",
      "name" : "Passpoint Provider Info: ",
      "source" : "8949b01cef6397b0.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627611810652,
      "stop" : 1627611826193,
      "duration" : 15541
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8dee7c0ad5a82050",
      "name" : "RF Profile Created : wifi5",
      "source" : "8dee7c0ad5a82050.attach",
      "type" : "text/plain",
      "size" : 12274
    }, {
      "uid" : "63c45fb258295b4",
      "name" : "Radius Profile Created",
      "source" : "63c45fb258295b4.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "8a18f2ff4b43074e",
      "name" : "SSID Profile Created",
      "source" : "8a18f2ff4b43074e.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "979e37f933f1629b",
      "name" : "SSID Profile Created",
      "source" : "979e37f933f1629b.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "93707a98a7c403bb",
      "name" : "SSID Profile Created",
      "source" : "93707a98a7c403bb.attach",
      "type" : "text/plain",
      "size" : 2834
    }, {
      "uid" : "9c6e97a1ec8940e4",
      "name" : "SSID Profile Created",
      "source" : "9c6e97a1ec8940e4.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "ca5e035902d6d707",
      "name" : "SSID Profile Created",
      "source" : "ca5e035902d6d707.attach",
      "type" : "text/plain",
      "size" : 2848
    }, {
      "uid" : "d23e0fa1cd1e0d26",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "d23e0fa1cd1e0d26.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "3e30cbf8c1978f93",
      "name" : "Passpoint Operator Profile Created",
      "source" : "3e30cbf8c1978f93.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "4a096bdb14e9f92b",
      "name" : "Passpoint Venue Profile Created",
      "source" : "4a096bdb14e9f92b.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "ed65ff02717002c7",
      "name" : "Passpoint Profile Created",
      "source" : "ed65ff02717002c7.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "df9b69cae4eefa15",
      "name" : "Updating SSID profile",
      "source" : "df9b69cae4eefa15.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "47d1457a7e7b3ee4",
      "name" : "Updating SSID profile",
      "source" : "47d1457a7e7b3ee4.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "e88730398d09708a",
      "name" : "Updating SSID profile",
      "source" : "e88730398d09708a.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "b0f21cba4e18b016",
      "name" : "Updating SSID profile",
      "source" : "b0f21cba4e18b016.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "a212d5457be11265",
      "name" : "Equipment AP Profile Created",
      "source" : "a212d5457be11265.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1627610689479,
      "stop" : 1627610689539,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1627610687862,
      "stop" : 1627610687862,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "de3c63eee1b37f2e",
      "name" : "Testbed Selected : ",
      "source" : "de3c63eee1b37f2e.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1627611810649,
      "stop" : 1627611810649,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ceb3388c37cd8cd5",
      "name" : "Passpoint profile Info: ",
      "source" : "ceb3388c37cd8cd5.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1627611826194,
      "stop" : 1627612055901,
      "duration" : 229707
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ebe6d3f1cfa001d6",
      "name" : "Equipment AP Profile Updated",
      "source" : "ebe6d3f1cfa001d6.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "924032eec6736f2c",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "924032eec6736f2c.attach",
      "type" : "text/plain",
      "size" : 126
    }, {
      "uid" : "2a5e3ca1992b19cf",
      "name" : "APNOS LIbrary: ",
      "source" : "2a5e3ca1992b19cf.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "a8ed2bd655fa1cfc",
      "name" : "openwrt_ctl Setup",
      "source" : "a8ed2bd655fa1cfc.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "5030e0346a2a8820",
      "name" : "vif config Output Msg: ",
      "source" : "5030e0346a2a8820.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "47871468fda4aa93",
      "name" : "vif config Err Msg: ",
      "source" : "47871468fda4aa93.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4f4094d150c44fac",
      "name" : "get_vif_config_ssids ",
      "source" : "4f4094d150c44fac.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "30cd6a632f1370d6",
      "name" : "vif state Output Msg: ",
      "source" : "30cd6a632f1370d6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "6e2aae20b5a32fdf",
      "name" : "vif state Err Msg: ",
      "source" : "6e2aae20b5a32fdf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "38bb1512043d1b4d",
      "name" : "get_vif_state_ssids ",
      "source" : "38bb1512043d1b4d.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "6548d905c6057bad",
      "name" : "vif config Output Msg: ",
      "source" : "6548d905c6057bad.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "90f221e4ca87f4cb",
      "name" : "vif config Err Msg: ",
      "source" : "90f221e4ca87f4cb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e067804e1a741dd5",
      "name" : "get_vif_config_ssids ",
      "source" : "e067804e1a741dd5.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "fa0332a8f51b53a3",
      "name" : "vif state Output Msg: ",
      "source" : "fa0332a8f51b53a3.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ac5a4267fadac8eb",
      "name" : "vif state Err Msg: ",
      "source" : "ac5a4267fadac8eb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cfdb8704e8b7675e",
      "name" : "get_vif_state_ssids ",
      "source" : "cfdb8704e8b7675e.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "80f04e43d194cd22",
      "name" : "vif config Output Msg: ",
      "source" : "80f04e43d194cd22.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "d02e60ca69a56197",
      "name" : "vif config Err Msg: ",
      "source" : "d02e60ca69a56197.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d4905a06d17cd6d4",
      "name" : "get_vif_config_ssids ",
      "source" : "d4905a06d17cd6d4.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "d858154084ec012e",
      "name" : "vif state Output Msg: ",
      "source" : "d858154084ec012e.attach",
      "type" : "text/plain",
      "size" : 4535
    }, {
      "uid" : "c00d9752f65c2172",
      "name" : "vif state Err Msg: ",
      "source" : "c00d9752f65c2172.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e57e23321342463b",
      "name" : "get_vif_state_ssids ",
      "source" : "e57e23321342463b.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "50d67268fe7bff46",
      "name" : "vifC status on AP :: ",
      "source" : "50d67268fe7bff46.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "8dc7865bbae29295",
      "name" : "vifS status on AP :: ",
      "source" : "8dc7865bbae29295.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 24,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fcf2057b820>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor2271.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fcf23b69640>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [19275, 19276, 19277, 19278], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:266: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fcf23b69640>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [19275, 19276, 19277, 19278], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"4c5198f5-4699-4967-acb9-c822578fa2a1\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fcf2057bcd0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4f2a41f811bb8a83",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "4f2a41f811bb8a83.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "69eba87d70dca829",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "69eba87d70dca829.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "e2d0656240b6ef38",
      "name" : "log",
      "source" : "e2d0656240b6ef38.txt",
      "type" : "text/plain",
      "size" : 923
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1627617661898,
      "stop" : 1627617661898,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1627617661914,
      "stop" : 1627617661914,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1627617661915,
      "stop" : 1627617661915,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1627612276892,
      "stop" : 1627612276892,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1627612276892,
      "stop" : 1627612312967,
      "duration" : 36075
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1627617661879,
      "stop" : 1627617661879,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1627612312968,
      "stop" : 1627612312968,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1627617661882,
      "stop" : 1627617661882,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1627617661882,
      "stop" : 1627617661883,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "96a6dcbc7ba3ab33",
      "name" : "Controller Teardown: ",
      "source" : "96a6dcbc7ba3ab33.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1627617661872,
      "stop" : 1627617661872,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1627617661886,
      "stop" : 1627617661886,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1627617661874,
      "stop" : 1627617661874,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1627617661916,
      "stop" : 1627617661916,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1627617661869,
      "stop" : 1627617661869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1627617661918,
      "stop" : 1627617661918,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1627617661891,
      "stop" : 1627617661891,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627616589265,
      "stop" : 1627616589265,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627616589265,
      "stop" : 1627616613871,
      "duration" : 24606
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f7a3df64452ee1dc",
      "name" : "Tear Down in Profiles ",
      "source" : "f7a3df64452ee1dc.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1627617661919,
      "stop" : 1627617661919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627613243599,
      "stop" : 1627613243599,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627613243599,
      "stop" : 1627613268938,
      "duration" : 25339
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "94b66ea170f916e1",
      "name" : "Tear Down in Profiles ",
      "source" : "94b66ea170f916e1.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1627617661877,
      "stop" : 1627617661877,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1627617661905,
      "stop" : 1627617661905,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1627617661921,
      "stop" : 1627617661921,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1627612312968,
      "stop" : 1627612312968,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridge"
  }, {
    "name" : "host",
    "value" : "interop-ci-100-ios-sh9gw"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 25,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 27
      },
      "items" : [ {
        "uid" : "55b968ef1ad76834",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627437731586,
          "stop" : 1627437731586,
          "duration" : 0
        }
      }, {
        "uid" : "aa917f4f31e5ec54",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627354108442,
          "stop" : 1627354108443,
          "duration" : 1
        }
      }, {
        "uid" : "3b90c181b232035f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627265188358,
          "stop" : 1627265396676,
          "duration" : 208318
        }
      }, {
        "uid" : "b9fb888bd520f41",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627179810568,
          "stop" : 1627179889572,
          "duration" : 79004
        }
      }, {
        "uid" : "7388060e80f71f93",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627082055765,
          "stop" : 1627082136479,
          "duration" : 80714
        }
      }, {
        "uid" : "4d930caf186922d7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627008166925,
          "stop" : 1627008248167,
          "duration" : 81242
        }
      }, {
        "uid" : "ec49e1129dfcf5c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1626835323629,
          "stop" : 1626835521369,
          "duration" : 197740
        }
      }, {
        "uid" : "bc0dacd00c8e3739",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1626743985819,
          "stop" : 1626744182187,
          "duration" : 196368
        }
      }, {
        "uid" : "d0e148ef62259978",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626662294583,
          "stop" : 1626662376007,
          "duration" : 81424
        }
      }, {
        "uid" : "9f59dd1153112951",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626575943572,
          "stop" : 1626576023260,
          "duration" : 79688
        }
      }, {
        "uid" : "2811e89d8b71c33c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626487565431,
          "stop" : 1626487647540,
          "duration" : 82109
        }
      }, {
        "uid" : "97fa048a4953bfbd",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626403341018,
          "stop" : 1626403420184,
          "duration" : 79166
        }
      }, {
        "uid" : "8c1fedb1a6fc6ae4",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308731278,
          "stop" : 1626308731278,
          "duration" : 0
        }
      }, {
        "uid" : "90735e340fb0306d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625797251775,
          "stop" : 1625797251776,
          "duration" : 1
        }
      }, {
        "uid" : "a3a765c52b0bc255",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625739354938,
          "stop" : 1625739578230,
          "duration" : 223292
        }
      }, {
        "uid" : "796810b868bc8feb",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625624549842,
          "stop" : 1625624835815,
          "duration" : 285973
        }
      }, {
        "uid" : "bca332f09fca91d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625538455304,
          "stop" : 1625538455304,
          "duration" : 0
        }
      }, {
        "uid" : "be04b48d2c605de0",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625451385384,
          "stop" : 1625451607167,
          "duration" : 221783
        }
      }, {
        "uid" : "532e1367b60bdb4",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625365296404,
          "stop" : 1625365576776,
          "duration" : 280372
        }
      }, {
        "uid" : "5b4b807fd4dde110",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625278829711,
          "stop" : 1625279113959,
          "duration" : 284248
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_eap", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "ios", "twog" ]
  },
  "source" : "3ffbbf805af9112a.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}
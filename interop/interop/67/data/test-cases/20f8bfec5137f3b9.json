{
  "uid" : "20f8bfec5137f3b9",
  "name" : "test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN#test_wpa2_only_eap_5g_VLAN",
  "historyId" : "269e31b86b8ba0e5fabe797e1ab15431",
  "time" : {
    "start" : 1626840956039,
    "stop" : 1626840999743,
    "duration" : 43704
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fee645fec70>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n>               elementWifName = driver.find_element_by_xpath(WifiXpath)\n\n../libs/perfecto_libs/iOS_lib.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>\nxpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element_by_xpath(self, xpath):\n        \"\"\"\n        Finds an element by xpath.\n    \n        :Args:\n         - xpath - The xpath locator of the element to find.\n    \n        :Returns:\n         - WebElement - the element if it was found\n    \n        :Raises:\n         - NoSuchElementException - if the element wasn't found\n    \n        :Usage:\n            element = driver.find_element_by_xpath('//div/td[1]')\n        \"\"\"\n>       return self.find_element(by=By.XPATH, value=xpath)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>\nby = 'xpath'\nvalue = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element(self, by: str = By.ID, value: Union[str, Dict] = None) -> MobileWebElement:\n        \"\"\"'Private' method used by the find_element_by_* methods.\n    \n        Override for Appium\n    \n        Usage:\n            Use the corresponding find_element_by_* instead of this.\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # TODO: If we need, we should enable below converter for Web context\n        # if self.w3c:\n        #     if by == By.ID:\n        #         by = By.CSS_SELECTOR\n        #         value = '[id=\"%s\"]' % value\n        #     elif by == By.TAG_NAME:\n        #         by = By.CSS_SELECTOR\n        #     elif by == By.CLASS_NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = \".%s\" % value\n        #     elif by == By.NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/webdriver.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>\ndriver_command = 'findElement'\nparams = {'sessionId': 'ec8bb051-67ad-4357-af03-229ff2ef0a00', 'using': 'xpath', 'value': \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7fee645fef10>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"4a5efc3c-6524-4a08-92d9-114612d1da7a\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n            else:\n>               raise wde\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7fee645fef10>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"4a5efc3c-6524-4a08-92d9-114612d1da7a\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7fee645fef10>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"4a5efc3c-6524-4a08-92d9-114612d1da7a\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nE       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nE       Driver info: io.appium.java_client.ios.IOSDriver\nE       Capabilities {accessToken: eyJhbGciOiJSUzI1NiIsInR5cCI..., assert_javascript_enabled: true, authenticationTenant: operator, autoAcceptAlerts: true, browserName: , bundleId: com.apple.mobilesafari, cloud: tip.perfectomobile.com, databaseEnabled: false, deviceName: 00008101-00180D660801401E, deviceSessionId: rajp@perfectomobile.com_Rem..., entityType: remote_web_driver, executionId: rajp@perfectomobile.com_Rem..., executionTenantId: tip-perfectomobile-com, host: tip.perfectomobile.com, javascriptEnabled: true, liveStreamEnabled: false, locationContextEnabled: false, model: iPhone-12, networkConnectionEnabled: false, password: , platform: MAC, platformName: ios, platformVersion: 14.1, reportPdfUrl: https://tip.app.perfectomob..., scriptName: RemoteWebDriver, securityToken: , serverConnector: , serverHost: X.X.X.X:11601, simpleIsVisibleCheck: true, stopUrl: https://tip.perfectomobile...., takesScreenshot: true, testGridReportUrl: https://tip.app.perfectomob..., udid: 00008101-00180D660801401E, useAppiumForHybrid: false, useAppiumForWeb: false, user: , webStorageEnabled: false, xcuitestFindOptimizations: true}\nE       Session ID: 9629b14b-afc7-4106-b3ce-47422bd86fff\nE       *** Element info: {Using=xpath, value=//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']}\nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1381.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7fee6424dd90>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12827, 12828, 12829, 12830], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fee645fec70>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fee645fec70>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n>               assert reportFlag\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:108: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626833742410,
      "stop" : 1626833742410,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "49864ba4cf9dbd02",
      "name" : "Testbed Selected: ",
      "source" : "49864ba4cf9dbd02.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626840931103,
      "stop" : 1626840956038,
      "duration" : 24935
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626835029169,
      "stop" : 1626835029170,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "48691284c2e21787",
      "name" : "Passpoint Provider Info: ",
      "source" : "48691284c2e21787.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626835029169,
      "stop" : 1626835029169,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "925bac9691ad344e",
      "name" : "Passpoint profile Info: ",
      "source" : "925bac9691ad344e.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626833742409,
      "stop" : 1626833742410,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "36e44026d622a976",
      "name" : "Testbed Selected : ",
      "source" : "36e44026d622a976.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626835029170,
      "stop" : 1626835029170,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "33b5cda1ab20a24f",
      "name" : "Passpoint venue Info: ",
      "source" : "33b5cda1ab20a24f.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626833744116,
      "stop" : 1626833744116,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f557fbd209930680",
      "name" : "VLAN Created: ",
      "source" : "f557fbd209930680.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626841063243,
      "stop" : 1626841125111,
      "duration" : 61868
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b9a58d5ae8e06e81",
      "name" : "RF Profile Created : wifi5",
      "source" : "b9a58d5ae8e06e81.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "98c760798c2d259b",
      "name" : "SSID Profile Created",
      "source" : "98c760798c2d259b.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "2c5e41a6120b78b4",
      "name" : "SSID Profile Created",
      "source" : "2c5e41a6120b78b4.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "5257f55ecee52adc",
      "name" : "SSID Profile Created",
      "source" : "5257f55ecee52adc.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "c29d325149a37383",
      "name" : "SSID Profile Created",
      "source" : "c29d325149a37383.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "9d87aa1d1c73a12d",
      "name" : "Equipment AP Profile Created",
      "source" : "9d87aa1d1c73a12d.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "461f99be760b6954",
      "name" : "APNOS LIbrary: ",
      "source" : "461f99be760b6954.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "986c1728258d6122",
      "name" : "openwrt_ctl Setup",
      "source" : "986c1728258d6122.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "c87639f0e4f987b3",
      "name" : "vif config Output Msg: ",
      "source" : "c87639f0e4f987b3.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "f9a1ad71c1c9dea5",
      "name" : "vif config Err Msg: ",
      "source" : "f9a1ad71c1c9dea5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "86f9a9a7a6ca2851",
      "name" : "get_vif_config_ssids ",
      "source" : "86f9a9a7a6ca2851.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "53b030eb510fa8dc",
      "name" : "vif config Output Msg: ",
      "source" : "53b030eb510fa8dc.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "3879b446ca3b9ce3",
      "name" : "vif config Err Msg: ",
      "source" : "3879b446ca3b9ce3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f4117a2c99017fbe",
      "name" : "get_vif_config_ssids ",
      "source" : "f4117a2c99017fbe.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b472b6d5b5b2d3a7",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "b472b6d5b5b2d3a7.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "fdc405393e629fb1",
      "name" : "APNOS LIbrary: ",
      "source" : "fdc405393e629fb1.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "53a5e50765b2f4c0",
      "name" : "openwrt_ctl Setup",
      "source" : "53a5e50765b2f4c0.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "4e82b00577e1e6e9",
      "name" : "vif state Output Msg: ",
      "source" : "4e82b00577e1e6e9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "2d9794769156ee41",
      "name" : "vif state Err Msg: ",
      "source" : "2d9794769156ee41.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7ed620440f29bf69",
      "name" : "get_vif_state_ssids ",
      "source" : "7ed620440f29bf69.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "51f6cce51958101b",
      "name" : "vif config Output Msg: ",
      "source" : "51f6cce51958101b.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "2fcc234084b5d80b",
      "name" : "vif config Err Msg: ",
      "source" : "2fcc234084b5d80b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cc23937978c1f372",
      "name" : "get_vif_config_ssids ",
      "source" : "cc23937978c1f372.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5e03f2511c617679",
      "name" : "vif state Output Msg: ",
      "source" : "5e03f2511c617679.attach",
      "type" : "text/plain",
      "size" : 5804
    }, {
      "uid" : "12ab98f766d01fab",
      "name" : "vif state Err Msg: ",
      "source" : "12ab98f766d01fab.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4dd4687c512d79af",
      "name" : "get_vif_state_ssids ",
      "source" : "4dd4687c512d79af.attach",
      "type" : "text/plain",
      "size" : 46
    }, {
      "uid" : "e40e3ef4df5dbb95",
      "name" : "vif config Output Msg: ",
      "source" : "e40e3ef4df5dbb95.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "9410392f3ab8adf8",
      "name" : "vif config Err Msg: ",
      "source" : "9410392f3ab8adf8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8ee4fb11a8a364e3",
      "name" : "get_vif_config_ssids ",
      "source" : "8ee4fb11a8a364e3.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "48f34fab9a49373c",
      "name" : "vif state Output Msg: ",
      "source" : "48f34fab9a49373c.attach",
      "type" : "text/plain",
      "size" : 7394
    }, {
      "uid" : "3aba6dd025e7b1df",
      "name" : "vif state Err Msg: ",
      "source" : "3aba6dd025e7b1df.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "753c3e0eeef083da",
      "name" : "get_vif_state_ssids ",
      "source" : "753c3e0eeef083da.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "cc1282628b99d809",
      "name" : "vif config Output Msg: ",
      "source" : "cc1282628b99d809.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "c46e918a35ce3bac",
      "name" : "vif config Err Msg: ",
      "source" : "c46e918a35ce3bac.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c4e632c382bc0901",
      "name" : "get_vif_config_ssids ",
      "source" : "c4e632c382bc0901.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ad548b75e8600a70",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "ad548b75e8600a70.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626833744116,
      "stop" : 1626833744227,
      "duration" : 111
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626833744228,
      "stop" : 1626833744229,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "77eab6d160553a31",
      "name" : "Test Cases Requires: ",
      "source" : "77eab6d160553a31.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626840931103,
      "stop" : 1626840931103,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626840649637,
      "stop" : 1626840931103,
      "duration" : 281466
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cff371e75cd4f301",
      "name" : "Equipment AP Profile Updated",
      "source" : "cff371e75cd4f301.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "a48781be2a5e626d",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "a48781be2a5e626d.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "2d1b65fba94ccf88",
      "name" : "APNOS LIbrary: ",
      "source" : "2d1b65fba94ccf88.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "acd94145a11f9e4b",
      "name" : "openwrt_ctl Setup",
      "source" : "acd94145a11f9e4b.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "7d740544c646c04e",
      "name" : "vif config Output Msg: ",
      "source" : "7d740544c646c04e.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "469f7a5d8d8f961d",
      "name" : "vif config Err Msg: ",
      "source" : "469f7a5d8d8f961d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2aa825e35d08e9cf",
      "name" : "get_vif_config_ssids ",
      "source" : "2aa825e35d08e9cf.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "baa96617c21db0b",
      "name" : "vif state Output Msg: ",
      "source" : "baa96617c21db0b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a7c93c439376ff4b",
      "name" : "vif state Err Msg: ",
      "source" : "a7c93c439376ff4b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2d6c83f6ecabce29",
      "name" : "get_vif_state_ssids ",
      "source" : "2d6c83f6ecabce29.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "dc4e40451ef30971",
      "name" : "vif config Output Msg: ",
      "source" : "dc4e40451ef30971.attach",
      "type" : "text/plain",
      "size" : 7804
    }, {
      "uid" : "e569c716517ae094",
      "name" : "vif config Err Msg: ",
      "source" : "e569c716517ae094.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2fedd581213a2a22",
      "name" : "get_vif_config_ssids ",
      "source" : "2fedd581213a2a22.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "1eb7fbffc7057c16",
      "name" : "vif state Output Msg: ",
      "source" : "1eb7fbffc7057c16.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "4f672a65d6125ffb",
      "name" : "vif state Err Msg: ",
      "source" : "4f672a65d6125ffb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f5382fe90d1aeac8",
      "name" : "get_vif_state_ssids ",
      "source" : "f5382fe90d1aeac8.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "bee43ea0f3115720",
      "name" : "vif config Output Msg: ",
      "source" : "bee43ea0f3115720.attach",
      "type" : "text/plain",
      "size" : 7804
    }, {
      "uid" : "49470b4915548ce5",
      "name" : "vif config Err Msg: ",
      "source" : "49470b4915548ce5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "41f4f0def12b5dd",
      "name" : "get_vif_config_ssids ",
      "source" : "41f4f0def12b5dd.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "9a64576e5318d6a6",
      "name" : "vif state Output Msg: ",
      "source" : "9a64576e5318d6a6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "aa130836e56392df",
      "name" : "vif state Err Msg: ",
      "source" : "aa130836e56392df.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5d717c7b0219086b",
      "name" : "get_vif_state_ssids ",
      "source" : "5d717c7b0219086b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "9d9eb7a4331e6a9",
      "name" : "vif config Output Msg: ",
      "source" : "9d9eb7a4331e6a9.attach",
      "type" : "text/plain",
      "size" : 7804
    }, {
      "uid" : "ad10bce01f8f2bc8",
      "name" : "vif config Err Msg: ",
      "source" : "ad10bce01f8f2bc8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1353a86c1b7724bd",
      "name" : "get_vif_config_ssids ",
      "source" : "1353a86c1b7724bd.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "ebe50629cf042f6e",
      "name" : "vif state Output Msg: ",
      "source" : "ebe50629cf042f6e.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5d12452bbd761a46",
      "name" : "vif state Err Msg: ",
      "source" : "5d12452bbd761a46.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1d53ae4de59583a7",
      "name" : "get_vif_state_ssids ",
      "source" : "1d53ae4de59583a7.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "f87972a831ac73b2",
      "name" : "vif config Output Msg: ",
      "source" : "f87972a831ac73b2.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "eabd039e7664a472",
      "name" : "vif config Err Msg: ",
      "source" : "eabd039e7664a472.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bc2a0382074b28cf",
      "name" : "get_vif_config_ssids ",
      "source" : "bc2a0382074b28cf.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "8860a566ae4484aa",
      "name" : "vif state Output Msg: ",
      "source" : "8860a566ae4484aa.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "fd3148411b8d503b",
      "name" : "vif state Err Msg: ",
      "source" : "fd3148411b8d503b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e2de070374eb3174",
      "name" : "get_vif_state_ssids ",
      "source" : "e2de070374eb3174.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "a2b8709cced5e80e",
      "name" : "vif config Output Msg: ",
      "source" : "a2b8709cced5e80e.attach",
      "type" : "text/plain",
      "size" : 4094
    }, {
      "uid" : "5d8da6a9c19ac2e3",
      "name" : "vif config Err Msg: ",
      "source" : "5d8da6a9c19ac2e3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2014e4f5cdcc5fb2",
      "name" : "get_vif_config_ssids ",
      "source" : "2014e4f5cdcc5fb2.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "913cd4521b2d5efe",
      "name" : "vif state Output Msg: ",
      "source" : "913cd4521b2d5efe.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c3ec69a3e42e80d2",
      "name" : "vif state Err Msg: ",
      "source" : "c3ec69a3e42e80d2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "50162e3c8eb0764",
      "name" : "get_vif_state_ssids ",
      "source" : "50162e3c8eb0764.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ef3448c42d44b36e",
      "name" : "vif config Output Msg: ",
      "source" : "ef3448c42d44b36e.attach",
      "type" : "text/plain",
      "size" : 4094
    }, {
      "uid" : "c6a2a214a1c3386d",
      "name" : "vif config Err Msg: ",
      "source" : "c6a2a214a1c3386d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "51ac46ea9b9987b0",
      "name" : "get_vif_config_ssids ",
      "source" : "51ac46ea9b9987b0.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "822b18eb6418f46e",
      "name" : "vif state Output Msg: ",
      "source" : "822b18eb6418f46e.attach",
      "type" : "text/plain",
      "size" : 4353
    }, {
      "uid" : "aa9a4fac4147e8",
      "name" : "vif state Err Msg: ",
      "source" : "aa9a4fac4147e8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c93a4e8c8f668bb1",
      "name" : "get_vif_state_ssids ",
      "source" : "c93a4e8c8f668bb1.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "3a64ec4554cfd9a6",
      "name" : "vifC status on AP :: ",
      "source" : "3a64ec4554cfd9a6.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "ecc85cd7ba2d8ab6",
      "name" : "vifS status on AP :: ",
      "source" : "ecc85cd7ba2d8ab6.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 48,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626833744228,
      "stop" : 1626833744228,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626833743988,
      "stop" : 1626833744115,
      "duration" : 127
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6c75a66f83d8392b",
      "name" : "Controller Instantiated: ",
      "source" : "6c75a66f83d8392b.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626835029170,
      "stop" : 1626835029170,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "84f19593e4a393f1",
      "name" : "Passpoint operator Info: ",
      "source" : "84f19593e4a393f1.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626835029170,
      "stop" : 1626835029171,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ef533b0e792f1b2",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "2ef533b0e792f1b2.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626833742410,
      "stop" : 1626833742410,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626839434213,
      "stop" : 1626839455470,
      "duration" : 21257
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "31199a6a88fca55f",
      "name" : "RF Profile Created : wifi5",
      "source" : "31199a6a88fca55f.attach",
      "type" : "text/plain",
      "size" : 12264
    }, {
      "uid" : "90abd48451062af0",
      "name" : "Radius Profile Created",
      "source" : "90abd48451062af0.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "b6b2b044c9449b92",
      "name" : "SSID Profile Created",
      "source" : "b6b2b044c9449b92.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "b870a7ef20610f56",
      "name" : "SSID Profile Created",
      "source" : "b870a7ef20610f56.attach",
      "type" : "text/plain",
      "size" : 2842
    }, {
      "uid" : "1536108dda2cb51a",
      "name" : "SSID Profile Created",
      "source" : "1536108dda2cb51a.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "56957cc9fe4b2338",
      "name" : "SSID Profile Created",
      "source" : "56957cc9fe4b2338.attach",
      "type" : "text/plain",
      "size" : 2856
    }, {
      "uid" : "bffcd0bac28b04e5",
      "name" : "SSID Profile Created",
      "source" : "bffcd0bac28b04e5.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "1494c4133b492e6a",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "1494c4133b492e6a.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "514b6ebb37f578cd",
      "name" : "Passpoint Operator Profile Created",
      "source" : "514b6ebb37f578cd.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "b0331982afef8e16",
      "name" : "Passpoint Venue Profile Created",
      "source" : "b0331982afef8e16.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "b1075aefe089eec5",
      "name" : "Passpoint Profile Created",
      "source" : "b1075aefe089eec5.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "3b2ccab200640963",
      "name" : "Updating SSID profile",
      "source" : "3b2ccab200640963.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "b3738474ebb261db",
      "name" : "Updating SSID profile",
      "source" : "b3738474ebb261db.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "1b7fda77249385cb",
      "name" : "Updating SSID profile",
      "source" : "1b7fda77249385cb.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "51795d58baaaa404",
      "name" : "Updating SSID profile",
      "source" : "51795d58baaaa404.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "56ff28d11ed6112f",
      "name" : "Equipment AP Profile Created",
      "source" : "56ff28d11ed6112f.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626833742410,
      "stop" : 1626833743988,
      "duration" : 1578
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8444f40e896b503b",
      "name" : "added openwrtctl.py to :",
      "source" : "8444f40e896b503b.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "7d935443d786fa09",
      "name" : "APNOS LIbrary: ",
      "source" : "7d935443d786fa09.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "8f9f92d6e6352bc3",
      "name" : "openwrt_ctl Setup",
      "source" : "8f9f92d6e6352bc3.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626835029171,
      "stop" : 1626835029171,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "89b12bf745384e7e",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "89b12bf745384e7e.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626833744228,
      "stop" : 1626833744228,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fee645fec70>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n>               elementWifName = driver.find_element_by_xpath(WifiXpath)\n\n../libs/perfecto_libs/iOS_lib.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>\nxpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element_by_xpath(self, xpath):\n        \"\"\"\n        Finds an element by xpath.\n    \n        :Args:\n         - xpath - The xpath locator of the element to find.\n    \n        :Returns:\n         - WebElement - the element if it was found\n    \n        :Raises:\n         - NoSuchElementException - if the element wasn't found\n    \n        :Usage:\n            element = driver.find_element_by_xpath('//div/td[1]')\n        \"\"\"\n>       return self.find_element(by=By.XPATH, value=xpath)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>\nby = 'xpath'\nvalue = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element(self, by: str = By.ID, value: Union[str, Dict] = None) -> MobileWebElement:\n        \"\"\"'Private' method used by the find_element_by_* methods.\n    \n        Override for Appium\n    \n        Usage:\n            Use the corresponding find_element_by_* instead of this.\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # TODO: If we need, we should enable below converter for Web context\n        # if self.w3c:\n        #     if by == By.ID:\n        #         by = By.CSS_SELECTOR\n        #         value = '[id=\"%s\"]' % value\n        #     elif by == By.TAG_NAME:\n        #         by = By.CSS_SELECTOR\n        #     elif by == By.CLASS_NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = \".%s\" % value\n        #     elif by == By.NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/webdriver.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>\ndriver_command = 'findElement'\nparams = {'sessionId': 'ec8bb051-67ad-4357-af03-229ff2ef0a00', 'using': 'xpath', 'value': \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7fee645fef10>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"4a5efc3c-6524-4a08-92d9-114612d1da7a\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n            else:\n>               raise wde\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7fee645fef10>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"4a5efc3c-6524-4a08-92d9-114612d1da7a\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7fee645fef10>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"4a5efc3c-6524-4a08-92d9-114612d1da7a\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nE       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nE       Driver info: io.appium.java_client.ios.IOSDriver\nE       Capabilities {accessToken: eyJhbGciOiJSUzI1NiIsInR5cCI..., assert_javascript_enabled: true, authenticationTenant: operator, autoAcceptAlerts: true, browserName: , bundleId: com.apple.mobilesafari, cloud: tip.perfectomobile.com, databaseEnabled: false, deviceName: 00008101-00180D660801401E, deviceSessionId: rajp@perfectomobile.com_Rem..., entityType: remote_web_driver, executionId: rajp@perfectomobile.com_Rem..., executionTenantId: tip-perfectomobile-com, host: tip.perfectomobile.com, javascriptEnabled: true, liveStreamEnabled: false, locationContextEnabled: false, model: iPhone-12, networkConnectionEnabled: false, password: , platform: MAC, platformName: ios, platformVersion: 14.1, reportPdfUrl: https://tip.app.perfectomob..., scriptName: RemoteWebDriver, securityToken: , serverConnector: , serverHost: X.X.X.X:11601, simpleIsVisibleCheck: true, stopUrl: https://tip.perfectomobile...., takesScreenshot: true, testGridReportUrl: https://tip.app.perfectomob..., udid: 00008101-00180D660801401E, useAppiumForHybrid: false, useAppiumForWeb: false, user: , webStorageEnabled: false, xcuitestFindOptimizations: true}\nE       Session ID: 9629b14b-afc7-4106-b3ce-47422bd86fff\nE       *** Element info: {Using=xpath, value=//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']}\nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1381.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7fee6424dd90>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12827, 12828, 12829, 12830], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fee645fec70>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"ec8bb051-67ad-4357-af03-229ff2ef0a00\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fee645fec70>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n>               assert reportFlag\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:108: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5843d328b6599f25",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "5843d328b6599f25.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "a8126673a48c1fa0",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "a8126673a48c1fa0.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "55142e8b1de6254f",
      "name" : "log",
      "source" : "55142e8b1de6254f.txt",
      "type" : "text/plain",
      "size" : 1979
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626843064657,
      "stop" : 1626843064657,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626840999833,
      "stop" : 1626840999833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626840999833,
      "stop" : 1626841037942,
      "duration" : 38109
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626843064683,
      "stop" : 1626843064683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626843064685,
      "stop" : 1626843064685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626843064666,
      "stop" : 1626843064666,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626843064680,
      "stop" : 1626843064680,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626843064618,
      "stop" : 1626843064618,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626841625775,
      "stop" : 1626841625775,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626841625775,
      "stop" : 1626841650162,
      "duration" : 24387
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e483e6f88183e63c",
      "name" : "Tear Down in Profiles ",
      "source" : "e483e6f88183e63c.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626843064616,
      "stop" : 1626843064616,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626843064609,
      "stop" : 1626843064609,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626841037943,
      "stop" : 1626841037943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626841037944,
      "stop" : 1626841037944,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626843064613,
      "stop" : 1626843064614,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626843064621,
      "stop" : 1626843064621,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626843064621,
      "stop" : 1626843064622,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1be78d96725693ca",
      "name" : "Controller Teardown: ",
      "source" : "1be78d96725693ca.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626843064681,
      "stop" : 1626843064681,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626843064678,
      "stop" : 1626843064679,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626843064631,
      "stop" : 1626843064631,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626841037945,
      "stop" : 1626841037945,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626841037945,
      "stop" : 1626841063238,
      "duration" : 25293
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1740cf6d2d71e7af",
      "name" : "Tear Down in Profiles ",
      "source" : "1740cf6d2d71e7af.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626843064625,
      "stop" : 1626843064625,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626843064677,
      "stop" : 1626843064677,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626843064612,
      "stop" : 1626843064612,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_vlan_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeVLAN"
  }, {
    "name" : "host",
    "value" : "interop-ci-67-ios-l5cwm"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 19,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 20
      },
      "items" : [ {
        "uid" : "16fde4e14fa0db5d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626749566090,
          "stop" : 1626749609936,
          "duration" : 43846
        }
      }, {
        "uid" : "8d56d450150d6393",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626666974724,
          "stop" : 1626667056456,
          "duration" : 81732
        }
      }, {
        "uid" : "9dc8404adde364ac",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626580611719,
          "stop" : 1626580690093,
          "duration" : 78374
        }
      }, {
        "uid" : "1b421b8a5875a705",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626492193087,
          "stop" : 1626492272330,
          "duration" : 79243
        }
      }, {
        "uid" : "5ea7fb1ed518b72b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626407967966,
          "stop" : 1626408048759,
          "duration" : 80793
        }
      }, {
        "uid" : "dfb6e8c6b3651f44",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308732297,
          "stop" : 1626308732297,
          "duration" : 0
        }
      }, {
        "uid" : "2ef72281d5915bec",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625801182600,
          "stop" : 1625801182600,
          "duration" : 0
        }
      }, {
        "uid" : "4a7d1bf30570ba2b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625743494132,
          "stop" : 1625743494133,
          "duration" : 1
        }
      }, {
        "uid" : "bbb26229af4b2d12",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625628812804,
          "stop" : 1625628812804,
          "duration" : 0
        }
      }, {
        "uid" : "b38149ded5fd49a6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625542521310,
          "stop" : 1625542521311,
          "duration" : 1
        }
      }, {
        "uid" : "9395567fc9be761",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625455517044,
          "stop" : 1625455517044,
          "duration" : 0
        }
      }, {
        "uid" : "63d56c449186570",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625369560228,
          "stop" : 1625369560228,
          "duration" : 0
        }
      }, {
        "uid" : "330009c1564a2d5d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625283137529,
          "stop" : 1625283137530,
          "duration" : 1
        }
      }, {
        "uid" : "8c47da6429d9dc76",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625196946166,
          "stop" : 1625196946166,
          "duration" : 0
        }
      }, {
        "uid" : "795d05609aca6424",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625106683545,
          "stop" : 1625106683546,
          "duration" : 1
        }
      }, {
        "uid" : "6c79a90b443130ca",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625024401481,
          "stop" : 1625024401481,
          "duration" : 0
        }
      }, {
        "uid" : "ca7ecc0349239426",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624990251601,
          "stop" : 1624990251602,
          "duration" : 1
        }
      }, {
        "uid" : "12b3c650818dca84",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624971744324,
          "stop" : 1624971744324,
          "duration" : 0
        }
      }, {
        "uid" : "5399ce04ccc01408",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624960097290,
          "stop" : 1624960097291,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_only_eap", "vlan", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "fiveg", "ios" ]
  },
  "source" : "20f8bfec5137f3b9.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}", "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}" ]
}
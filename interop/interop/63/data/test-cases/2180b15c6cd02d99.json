{
  "uid" : "2180b15c6cd02d99",
  "name" : "test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN#test_wpa2_only_eap_2g_VLAN",
  "historyId" : "cb61208cf35ff96a76a651c2f2e60a9a",
  "time" : {
    "start" : 1626491781336,
    "stop" : 1626491863917,
    "duration" : 82581
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63ac2c80a0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f63ac34db50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor928.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f63b40fbe50>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11797, 11798, 11799, 11800], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63ac2c80a0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n      #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63ac2c80a0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626486177791,
      "stop" : 1626486177791,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626487270388,
      "stop" : 1626487270388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ebcf572ce9d8c396",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "ebcf572ce9d8c396.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626486177791,
      "stop" : 1626486177791,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626487270386,
      "stop" : 1626487270386,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "15e34e677af0b095",
      "name" : "Passpoint profile Info: ",
      "source" : "15e34e677af0b095.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626486177792,
      "stop" : 1626486177792,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6d02c39a35a96847",
      "name" : "Test Cases Requires: ",
      "source" : "6d02c39a35a96847.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626487270388,
      "stop" : 1626487270388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "69481d8a0328ed85",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "69481d8a0328ed85.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626491751137,
      "stop" : 1626491751137,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626487270387,
      "stop" : 1626487270387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "acf0cc6c139047ac",
      "name" : "Passpoint operator Info: ",
      "source" : "acf0cc6c139047ac.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626486177685,
      "stop" : 1626486177686,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "545977aee8714acd",
      "name" : "VLAN Created: ",
      "source" : "545977aee8714acd.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626492338854,
      "stop" : 1626492387655,
      "duration" : 48801
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ac4ced6cf86500bf",
      "name" : "RF Profile Created : wifi5",
      "source" : "ac4ced6cf86500bf.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "b0ff01d2c7154042",
      "name" : "SSID Profile Created",
      "source" : "b0ff01d2c7154042.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "32d923e584dea51",
      "name" : "SSID Profile Created",
      "source" : "32d923e584dea51.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "60470041df0b46cd",
      "name" : "SSID Profile Created",
      "source" : "60470041df0b46cd.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "52884fc934b4d835",
      "name" : "SSID Profile Created",
      "source" : "52884fc934b4d835.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "70c7e7745df1c7b1",
      "name" : "Equipment AP Profile Created",
      "source" : "70c7e7745df1c7b1.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "4c9c408901874a0f",
      "name" : "APNOS LIbrary: ",
      "source" : "4c9c408901874a0f.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "34faa906dab63631",
      "name" : "openwrt_ctl Setup",
      "source" : "34faa906dab63631.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "9a2402fdff15d577",
      "name" : "vif config Output Msg: ",
      "source" : "9a2402fdff15d577.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "e09ec850ba798f19",
      "name" : "vif config Err Msg: ",
      "source" : "e09ec850ba798f19.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e4f771dda99bfbbd",
      "name" : "get_vif_config_ssids ",
      "source" : "e4f771dda99bfbbd.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "bfadb17a8632cb0b",
      "name" : "vif config Output Msg: ",
      "source" : "bfadb17a8632cb0b.attach",
      "type" : "text/plain",
      "size" : 7843
    }, {
      "uid" : "d5b10e291dcbe031",
      "name" : "vif config Err Msg: ",
      "source" : "d5b10e291dcbe031.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5121c72bcb66fa28",
      "name" : "get_vif_config_ssids ",
      "source" : "5121c72bcb66fa28.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "59692b5f1b309b9b",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "59692b5f1b309b9b.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "46d105ee6301a7a7",
      "name" : "APNOS LIbrary: ",
      "source" : "46d105ee6301a7a7.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "d969102af1c660e5",
      "name" : "openwrt_ctl Setup",
      "source" : "d969102af1c660e5.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "73be6d1827c13cf1",
      "name" : "vif state Output Msg: ",
      "source" : "73be6d1827c13cf1.attach",
      "type" : "text/plain",
      "size" : 3856
    }, {
      "uid" : "363066634d9b8cea",
      "name" : "vif state Err Msg: ",
      "source" : "363066634d9b8cea.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "55ed93b87e2b983c",
      "name" : "get_vif_state_ssids ",
      "source" : "55ed93b87e2b983c.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "cd339ea11725da06",
      "name" : "vif config Output Msg: ",
      "source" : "cd339ea11725da06.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "c080fbaa25ef1abd",
      "name" : "vif config Err Msg: ",
      "source" : "c080fbaa25ef1abd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7998dd9ef7169756",
      "name" : "get_vif_config_ssids ",
      "source" : "7998dd9ef7169756.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5ff489a8c684861e",
      "name" : "vif state Output Msg: ",
      "source" : "5ff489a8c684861e.attach",
      "type" : "text/plain",
      "size" : 7395
    }, {
      "uid" : "d8af9b66f1937997",
      "name" : "vif state Err Msg: ",
      "source" : "d8af9b66f1937997.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e074c0c5ad3608a9",
      "name" : "get_vif_state_ssids ",
      "source" : "e074c0c5ad3608a9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "8c8fc7ebb036c584",
      "name" : "vif config Output Msg: ",
      "source" : "8c8fc7ebb036c584.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "a5f0308f69349b07",
      "name" : "vif config Err Msg: ",
      "source" : "a5f0308f69349b07.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "af24852aa579dba4",
      "name" : "get_vif_config_ssids ",
      "source" : "af24852aa579dba4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "2b230e1e5eca1faf",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "2b230e1e5eca1faf.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 30,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626491751137,
      "stop" : 1626491781335,
      "duration" : 30198
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626491444495,
      "stop" : 1626491751136,
      "duration" : 306641
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c31b412d73606a47",
      "name" : "Equipment AP Profile Updated",
      "source" : "c31b412d73606a47.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "463eed4fa01cfe22",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "463eed4fa01cfe22.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "a3e5505b085dc65b",
      "name" : "APNOS LIbrary: ",
      "source" : "a3e5505b085dc65b.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "e9d73616af31cc81",
      "name" : "openwrt_ctl Setup",
      "source" : "e9d73616af31cc81.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "c9cd02d22678d274",
      "name" : "vif config Output Msg: ",
      "source" : "c9cd02d22678d274.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "ea5829647b9cd3da",
      "name" : "vif config Err Msg: ",
      "source" : "ea5829647b9cd3da.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "be95f78af953e538",
      "name" : "get_vif_config_ssids ",
      "source" : "be95f78af953e538.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "5044e731c2870715",
      "name" : "vif state Output Msg: ",
      "source" : "5044e731c2870715.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c885459236b90548",
      "name" : "vif state Err Msg: ",
      "source" : "c885459236b90548.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "30b9e53fcdacfe91",
      "name" : "get_vif_state_ssids ",
      "source" : "30b9e53fcdacfe91.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "84f691074eb85832",
      "name" : "vif config Output Msg: ",
      "source" : "84f691074eb85832.attach",
      "type" : "text/plain",
      "size" : 7806
    }, {
      "uid" : "7af58d6610fc6f6a",
      "name" : "vif config Err Msg: ",
      "source" : "7af58d6610fc6f6a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d3460f1609d6159",
      "name" : "get_vif_config_ssids ",
      "source" : "d3460f1609d6159.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "ae765dfc8f52a607",
      "name" : "vif state Output Msg: ",
      "source" : "ae765dfc8f52a607.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b607d7c9b2f4b364",
      "name" : "vif state Err Msg: ",
      "source" : "b607d7c9b2f4b364.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1703374f52484ee3",
      "name" : "get_vif_state_ssids ",
      "source" : "1703374f52484ee3.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "9c1d64d4215015e1",
      "name" : "vif config Output Msg: ",
      "source" : "9c1d64d4215015e1.attach",
      "type" : "text/plain",
      "size" : 7806
    }, {
      "uid" : "e1fb3a26f199fc3e",
      "name" : "vif config Err Msg: ",
      "source" : "e1fb3a26f199fc3e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e934db10441ae44b",
      "name" : "get_vif_config_ssids ",
      "source" : "e934db10441ae44b.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "2e06de908de134fe",
      "name" : "vif state Output Msg: ",
      "source" : "2e06de908de134fe.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c69a40ffc0ccfc7e",
      "name" : "vif state Err Msg: ",
      "source" : "c69a40ffc0ccfc7e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b8c8de8069a03131",
      "name" : "get_vif_state_ssids ",
      "source" : "b8c8de8069a03131.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "184ccc1bceb59a91",
      "name" : "vif config Output Msg: ",
      "source" : "184ccc1bceb59a91.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "442b6907bef6d83c",
      "name" : "vif config Err Msg: ",
      "source" : "442b6907bef6d83c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8f7a682ed410d5c1",
      "name" : "get_vif_config_ssids ",
      "source" : "8f7a682ed410d5c1.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "929b68f189821033",
      "name" : "vif state Output Msg: ",
      "source" : "929b68f189821033.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ad3e5950b63a77d8",
      "name" : "vif state Err Msg: ",
      "source" : "ad3e5950b63a77d8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a22c14018005d090",
      "name" : "get_vif_state_ssids ",
      "source" : "a22c14018005d090.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "adc077b590b317b1",
      "name" : "vif config Output Msg: ",
      "source" : "adc077b590b317b1.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "b4e2f6dfcaeef6ba",
      "name" : "vif config Err Msg: ",
      "source" : "b4e2f6dfcaeef6ba.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ea890d8777942bdb",
      "name" : "get_vif_config_ssids ",
      "source" : "ea890d8777942bdb.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "1bc7501e55de0539",
      "name" : "vif state Output Msg: ",
      "source" : "1bc7501e55de0539.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ef1438a8a3fe17e2",
      "name" : "vif state Err Msg: ",
      "source" : "ef1438a8a3fe17e2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c5494aa9be9c14b1",
      "name" : "get_vif_state_ssids ",
      "source" : "c5494aa9be9c14b1.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "c2d5c0e9b429289f",
      "name" : "vif config Output Msg: ",
      "source" : "c2d5c0e9b429289f.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "299909103a3b72a1",
      "name" : "vif config Err Msg: ",
      "source" : "299909103a3b72a1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "51de83c8e7d2cae0",
      "name" : "get_vif_config_ssids ",
      "source" : "51de83c8e7d2cae0.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "e0ee60a3a0109cea",
      "name" : "vif state Output Msg: ",
      "source" : "e0ee60a3a0109cea.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e47ebbea3fcdb5a2",
      "name" : "vif state Err Msg: ",
      "source" : "e47ebbea3fcdb5a2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "31128c5c4cd6b904",
      "name" : "get_vif_state_ssids ",
      "source" : "31128c5c4cd6b904.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "1a7b073603066849",
      "name" : "vif config Output Msg: ",
      "source" : "1a7b073603066849.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "3e33d820644f6e99",
      "name" : "vif config Err Msg: ",
      "source" : "3e33d820644f6e99.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6a86cc1754c939c6",
      "name" : "get_vif_config_ssids ",
      "source" : "6a86cc1754c939c6.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "3169648af2639185",
      "name" : "vif state Output Msg: ",
      "source" : "3169648af2639185.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7242825b9720f02a",
      "name" : "vif state Err Msg: ",
      "source" : "7242825b9720f02a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a123dd517982d942",
      "name" : "get_vif_state_ssids ",
      "source" : "a123dd517982d942.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "f50c2cdf5c29f37c",
      "name" : "vif config Output Msg: ",
      "source" : "f50c2cdf5c29f37c.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "204d45acb325fd55",
      "name" : "vif config Err Msg: ",
      "source" : "204d45acb325fd55.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7dc605e7f523f7cd",
      "name" : "get_vif_config_ssids ",
      "source" : "7dc605e7f523f7cd.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "93200dbfd1fea82d",
      "name" : "vif state Output Msg: ",
      "source" : "93200dbfd1fea82d.attach",
      "type" : "text/plain",
      "size" : 2533
    }, {
      "uid" : "d7a75f12378d2f9c",
      "name" : "vif state Err Msg: ",
      "source" : "d7a75f12378d2f9c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "455ed635961bf3dd",
      "name" : "get_vif_state_ssids ",
      "source" : "455ed635961bf3dd.attach",
      "type" : "text/plain",
      "size" : 35
    }, {
      "uid" : "112485bcc522f569",
      "name" : "vif config Output Msg: ",
      "source" : "112485bcc522f569.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "467a7d130b548a10",
      "name" : "vif config Err Msg: ",
      "source" : "467a7d130b548a10.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4b0fde4a7d68f032",
      "name" : "get_vif_config_ssids ",
      "source" : "4b0fde4a7d68f032.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "c0aec66a8ea8de5c",
      "name" : "vif state Output Msg: ",
      "source" : "c0aec66a8ea8de5c.attach",
      "type" : "text/plain",
      "size" : 4352
    }, {
      "uid" : "6726c32707d018c1",
      "name" : "vif state Err Msg: ",
      "source" : "6726c32707d018c1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "994129395a813aba",
      "name" : "get_vif_state_ssids ",
      "source" : "994129395a813aba.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "ab380364fdf80b4c",
      "name" : "vifC status on AP :: ",
      "source" : "ab380364fdf80b4c.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "ac3c4cd13eb3dbce",
      "name" : "vifS status on AP :: ",
      "source" : "ac3c4cd13eb3dbce.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 60,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626486177686,
      "stop" : 1626486177791,
      "duration" : 105
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626490626253,
      "stop" : 1626490648206,
      "duration" : 21953
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8f692fba4c1dc701",
      "name" : "RF Profile Created : wifi5",
      "source" : "8f692fba4c1dc701.attach",
      "type" : "text/plain",
      "size" : 12264
    }, {
      "uid" : "ff583dc8995f9f2d",
      "name" : "Radius Profile Created",
      "source" : "ff583dc8995f9f2d.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "a21c8da17f96fbf2",
      "name" : "SSID Profile Created",
      "source" : "a21c8da17f96fbf2.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "e87165d87ff14095",
      "name" : "SSID Profile Created",
      "source" : "e87165d87ff14095.attach",
      "type" : "text/plain",
      "size" : 2842
    }, {
      "uid" : "8102d47bb7a5b1f0",
      "name" : "SSID Profile Created",
      "source" : "8102d47bb7a5b1f0.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "6bbb7a7e85cbf434",
      "name" : "SSID Profile Created",
      "source" : "6bbb7a7e85cbf434.attach",
      "type" : "text/plain",
      "size" : 2856
    }, {
      "uid" : "748f98018fea5080",
      "name" : "SSID Profile Created",
      "source" : "748f98018fea5080.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "13898191abd7fe66",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "13898191abd7fe66.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "153b61b98d09219b",
      "name" : "Passpoint Operator Profile Created",
      "source" : "153b61b98d09219b.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "c68cb29c5cec82cd",
      "name" : "Passpoint Venue Profile Created",
      "source" : "c68cb29c5cec82cd.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "971b62be34d7af39",
      "name" : "Passpoint Profile Created",
      "source" : "971b62be34d7af39.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "c27e585e3abe1d82",
      "name" : "Updating SSID profile",
      "source" : "c27e585e3abe1d82.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "222d6bb0deb585e6",
      "name" : "Updating SSID profile",
      "source" : "222d6bb0deb585e6.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "c43846ac7ff0d185",
      "name" : "Updating SSID profile",
      "source" : "c43846ac7ff0d185.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "252405b72acafa26",
      "name" : "Updating SSID profile",
      "source" : "252405b72acafa26.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "db3f2a2e1f8fa27d",
      "name" : "Equipment AP Profile Created",
      "source" : "db3f2a2e1f8fa27d.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626486177518,
      "stop" : 1626486177685,
      "duration" : 167
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3cd08239a82b6b59",
      "name" : "Controller Instantiated: ",
      "source" : "3cd08239a82b6b59.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626487270387,
      "stop" : 1626487270387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "40d603d174619434",
      "name" : "Passpoint Provider Info: ",
      "source" : "40d603d174619434.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626486175966,
      "stop" : 1626486175966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "55a7996d6df1227e",
      "name" : "Testbed Selected: ",
      "source" : "55a7996d6df1227e.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626486175967,
      "stop" : 1626486175967,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626486175966,
      "stop" : 1626486175966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dadffd2f7b82ec01",
      "name" : "Testbed Selected : ",
      "source" : "dadffd2f7b82ec01.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626487270388,
      "stop" : 1626487270388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f7032bcdcce643ca",
      "name" : "Passpoint venue Info: ",
      "source" : "f7032bcdcce643ca.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626486175967,
      "stop" : 1626486177518,
      "duration" : 1551
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "133ce862b991ff59",
      "name" : "added openwrtctl.py to :",
      "source" : "133ce862b991ff59.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "db0eb6230229b914",
      "name" : "APNOS LIbrary: ",
      "source" : "db0eb6230229b914.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "7963756e47861ef2",
      "name" : "openwrt_ctl Setup",
      "source" : "7963756e47861ef2.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63ac2c80a0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f63ac34db50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor928.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f63b40fbe50>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11797, 11798, 11799, 11800], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63ac2c80a0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n      #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"986a07f7-927d-491f-a499-ffe968aa4529\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63ac2c80a0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9a8afe70a1bd9adb",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "9a8afe70a1bd9adb.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "bcf0c5394c4acb71",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "bcf0c5394c4acb71.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "640e1494bb3a3cf4",
      "name" : "log",
      "source" : "640e1494bb3a3cf4.txt",
      "type" : "text/plain",
      "size" : 2507
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626493963188,
      "stop" : 1626493963188,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626493963240,
      "stop" : 1626493963240,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626493963190,
      "stop" : 1626493963190,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626493963253,
      "stop" : 1626493963253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626493963184,
      "stop" : 1626493963184,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626493963238,
      "stop" : 1626493963238,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626491904623,
      "stop" : 1626491904623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626493963244,
      "stop" : 1626493963244,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626493963196,
      "stop" : 1626493963196,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626492852862,
      "stop" : 1626492852862,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626492852862,
      "stop" : 1626492878264,
      "duration" : 25402
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ec8f66c6087488c3",
      "name" : "Tear Down in Profiles ",
      "source" : "ec8f66c6087488c3.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626491864070,
      "stop" : 1626491864070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626491864070,
      "stop" : 1626491904622,
      "duration" : 40552
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626491904628,
      "stop" : 1626491904628,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626493963193,
      "stop" : 1626493963193,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626492311761,
      "stop" : 1626492311761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626492311761,
      "stop" : 1626492338850,
      "duration" : 27089
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5aed2eca9bb3c751",
      "name" : "Tear Down in Profiles ",
      "source" : "5aed2eca9bb3c751.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626493963200,
      "stop" : 1626493963200,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626493963200,
      "stop" : 1626493963201,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3c16939719f2127c",
      "name" : "Controller Teardown: ",
      "source" : "3c16939719f2127c.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626493963245,
      "stop" : 1626493963245,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626493963221,
      "stop" : 1626493963221,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626493963209,
      "stop" : 1626493963209,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626493963230,
      "stop" : 1626493963230,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626493963242,
      "stop" : 1626493963242,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626493963204,
      "stop" : 1626493963204,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_vlan_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeVLAN"
  }, {
    "name" : "host",
    "value" : "interop-ci-63-ios-99cmx"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 15,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "efbf7c0b679bc145",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626407537990,
          "stop" : 1626407616872,
          "duration" : 78882
        }
      }, {
        "uid" : "7b84ae702787ffd2",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308732230,
          "stop" : 1626308732230,
          "duration" : 0
        }
      }, {
        "uid" : "427a01cb662fecf",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625800871175,
          "stop" : 1625800871175,
          "duration" : 0
        }
      }, {
        "uid" : "689fa3107b146592",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625743182948,
          "stop" : 1625743182948,
          "duration" : 0
        }
      }, {
        "uid" : "e03a4900fad7d671",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625628503800,
          "stop" : 1625628503800,
          "duration" : 0
        }
      }, {
        "uid" : "be0e0232a059ec91",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625542208275,
          "stop" : 1625542208275,
          "duration" : 0
        }
      }, {
        "uid" : "f67e02b01635e6f6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625455206198,
          "stop" : 1625455206199,
          "duration" : 1
        }
      }, {
        "uid" : "a1b7ac62a7622fde",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625369247698,
          "stop" : 1625369247698,
          "duration" : 0
        }
      }, {
        "uid" : "ac90ee85370fd6f8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625282820947,
          "stop" : 1625282820947,
          "duration" : 0
        }
      }, {
        "uid" : "f2e86a7556ab8044",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625196634945,
          "stop" : 1625196634946,
          "duration" : 1
        }
      }, {
        "uid" : "dd614ae6f0471fc0",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625106369503,
          "stop" : 1625106369504,
          "duration" : 1
        }
      }, {
        "uid" : "78efa317c8d6af7c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625024088606,
          "stop" : 1625024088607,
          "duration" : 1
        }
      }, {
        "uid" : "252b2695a90207b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624989928260,
          "stop" : 1624989928260,
          "duration" : 0
        }
      }, {
        "uid" : "6bfccc52bf2a9759",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624971429148,
          "stop" : 1624971429149,
          "duration" : 1
        }
      }, {
        "uid" : "1d50ad3e0d8c5bc1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624959788282,
          "stop" : 1624959788283,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "openRoaming", "vlan", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "ios", "twog" ]
  },
  "source" : "2180b15c6cd02d99.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}", "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}" ]
}
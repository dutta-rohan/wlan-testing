{
  "uid" : "65741ccc6304439a",
  "name" : "test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT#test_wpa2_only_eap_2g_NAT",
  "historyId" : "e07cc245d5378883551b615dbfded617",
  "time" : {
    "start" : 1626490078656,
    "stop" : 1626490156929,
    "duration" : 78273
  },
  "description" : "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and twog\"\n        ",
  "descriptionHtml" : "<pre><code>         EAP Passpoint BRIDGE Mode\n         pytest -m &quot;interop_iOS and eap_passpoint and bridge and wpa2_only_eap and twog&quot;\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63b4d450d0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f63b408a700>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor928.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f63b42281f0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11785, 11786, 11787, 11788], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63b4d450d0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and twog\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63b4d450d0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626486177791,
      "stop" : 1626486177791,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626487270388,
      "stop" : 1626487270388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ebcf572ce9d8c396",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "ebcf572ce9d8c396.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626486177791,
      "stop" : 1626486177791,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626487270386,
      "stop" : 1626487270386,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "15e34e677af0b095",
      "name" : "Passpoint profile Info: ",
      "source" : "15e34e677af0b095.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626486177792,
      "stop" : 1626486177792,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6d02c39a35a96847",
      "name" : "Test Cases Requires: ",
      "source" : "6d02c39a35a96847.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626487270388,
      "stop" : 1626487270388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "69481d8a0328ed85",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "69481d8a0328ed85.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626489778428,
      "stop" : 1626490048553,
      "duration" : 270125
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e89138ed5c5e8c1b",
      "name" : "Equipment AP Profile Updated",
      "source" : "e89138ed5c5e8c1b.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "c5e6e9bff93d9b91",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "c5e6e9bff93d9b91.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "beca3586de45e14f",
      "name" : "APNOS LIbrary: ",
      "source" : "beca3586de45e14f.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "ee9f47afaadeb188",
      "name" : "openwrt_ctl Setup",
      "source" : "ee9f47afaadeb188.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "8824ea84e4346839",
      "name" : "vif config Output Msg: ",
      "source" : "8824ea84e4346839.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "b5788d06bc46d50d",
      "name" : "vif config Err Msg: ",
      "source" : "b5788d06bc46d50d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "27cc6b871ac2302a",
      "name" : "get_vif_config_ssids ",
      "source" : "27cc6b871ac2302a.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "1f87df804f043af0",
      "name" : "vif state Output Msg: ",
      "source" : "1f87df804f043af0.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "86eba56af25ad85d",
      "name" : "vif state Err Msg: ",
      "source" : "86eba56af25ad85d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a2bacf81d3551520",
      "name" : "get_vif_state_ssids ",
      "source" : "a2bacf81d3551520.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ffd9a7b891be4d56",
      "name" : "vif config Output Msg: ",
      "source" : "ffd9a7b891be4d56.attach",
      "type" : "text/plain",
      "size" : 7798
    }, {
      "uid" : "3c8e5b7efaade035",
      "name" : "vif config Err Msg: ",
      "source" : "3c8e5b7efaade035.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "54ac9cebff85efed",
      "name" : "get_vif_config_ssids ",
      "source" : "54ac9cebff85efed.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "32335a78ddfda884",
      "name" : "vif state Output Msg: ",
      "source" : "32335a78ddfda884.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "d2ea4083acb27917",
      "name" : "vif state Err Msg: ",
      "source" : "d2ea4083acb27917.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "87d6996e1c4ec571",
      "name" : "get_vif_state_ssids ",
      "source" : "87d6996e1c4ec571.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "414312bfbb5bc75d",
      "name" : "vif config Output Msg: ",
      "source" : "414312bfbb5bc75d.attach",
      "type" : "text/plain",
      "size" : 7798
    }, {
      "uid" : "623b7c4f620fd9bb",
      "name" : "vif config Err Msg: ",
      "source" : "623b7c4f620fd9bb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "12162cc08f01016d",
      "name" : "get_vif_config_ssids ",
      "source" : "12162cc08f01016d.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "d9c835dfaa18e14d",
      "name" : "vif state Output Msg: ",
      "source" : "d9c835dfaa18e14d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b9a800e705cf6d93",
      "name" : "vif state Err Msg: ",
      "source" : "b9a800e705cf6d93.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "787dab867e2f2b1b",
      "name" : "get_vif_state_ssids ",
      "source" : "787dab867e2f2b1b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b651e462d8c23f84",
      "name" : "vif config Output Msg: ",
      "source" : "b651e462d8c23f84.attach",
      "type" : "text/plain",
      "size" : 4091
    }, {
      "uid" : "189ab9d9ff33ec6d",
      "name" : "vif config Err Msg: ",
      "source" : "189ab9d9ff33ec6d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "93427af91f213f61",
      "name" : "get_vif_config_ssids ",
      "source" : "93427af91f213f61.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "a4283f21407d4d7f",
      "name" : "vif state Output Msg: ",
      "source" : "a4283f21407d4d7f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "17c6fe9a98ef00da",
      "name" : "vif state Err Msg: ",
      "source" : "17c6fe9a98ef00da.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a5c839618b157593",
      "name" : "get_vif_state_ssids ",
      "source" : "a5c839618b157593.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d596e1b6e9f6087e",
      "name" : "vif config Output Msg: ",
      "source" : "d596e1b6e9f6087e.attach",
      "type" : "text/plain",
      "size" : 4091
    }, {
      "uid" : "fab05fae40442442",
      "name" : "vif config Err Msg: ",
      "source" : "fab05fae40442442.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "73edc633c7269850",
      "name" : "get_vif_config_ssids ",
      "source" : "73edc633c7269850.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "315f3786bc9b983d",
      "name" : "vif state Output Msg: ",
      "source" : "315f3786bc9b983d.attach",
      "type" : "text/plain",
      "size" : 2531
    }, {
      "uid" : "ebb28bd47745feb5",
      "name" : "vif state Err Msg: ",
      "source" : "ebb28bd47745feb5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6f8d43e6e836c777",
      "name" : "get_vif_state_ssids ",
      "source" : "6f8d43e6e836c777.attach",
      "type" : "text/plain",
      "size" : 35
    }, {
      "uid" : "33519414485fa310",
      "name" : "vif config Output Msg: ",
      "source" : "33519414485fa310.attach",
      "type" : "text/plain",
      "size" : 4091
    }, {
      "uid" : "28595a6c492d1204",
      "name" : "vif config Err Msg: ",
      "source" : "28595a6c492d1204.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6864052d92a2337",
      "name" : "get_vif_config_ssids ",
      "source" : "6864052d92a2337.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "3a9e88cd1c867807",
      "name" : "vif state Output Msg: ",
      "source" : "3a9e88cd1c867807.attach",
      "type" : "text/plain",
      "size" : 4348
    }, {
      "uid" : "707a50e7d58acc03",
      "name" : "vif state Err Msg: ",
      "source" : "707a50e7d58acc03.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3a47af69cf61493b",
      "name" : "get_vif_state_ssids ",
      "source" : "3a47af69cf61493b.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "af10da623f3da551",
      "name" : "vifC status on AP :: ",
      "source" : "af10da623f3da551.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "56dd40ea59b3b1cb",
      "name" : "vifS status on AP :: ",
      "source" : "56dd40ea59b3b1cb.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626487270387,
      "stop" : 1626487270387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "acf0cc6c139047ac",
      "name" : "Passpoint operator Info: ",
      "source" : "acf0cc6c139047ac.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626486177685,
      "stop" : 1626486177686,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "545977aee8714acd",
      "name" : "VLAN Created: ",
      "source" : "545977aee8714acd.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626492338854,
      "stop" : 1626492387655,
      "duration" : 48801
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ac4ced6cf86500bf",
      "name" : "RF Profile Created : wifi5",
      "source" : "ac4ced6cf86500bf.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "b0ff01d2c7154042",
      "name" : "SSID Profile Created",
      "source" : "b0ff01d2c7154042.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "32d923e584dea51",
      "name" : "SSID Profile Created",
      "source" : "32d923e584dea51.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "60470041df0b46cd",
      "name" : "SSID Profile Created",
      "source" : "60470041df0b46cd.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "52884fc934b4d835",
      "name" : "SSID Profile Created",
      "source" : "52884fc934b4d835.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "70c7e7745df1c7b1",
      "name" : "Equipment AP Profile Created",
      "source" : "70c7e7745df1c7b1.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "4c9c408901874a0f",
      "name" : "APNOS LIbrary: ",
      "source" : "4c9c408901874a0f.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "34faa906dab63631",
      "name" : "openwrt_ctl Setup",
      "source" : "34faa906dab63631.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "9a2402fdff15d577",
      "name" : "vif config Output Msg: ",
      "source" : "9a2402fdff15d577.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "e09ec850ba798f19",
      "name" : "vif config Err Msg: ",
      "source" : "e09ec850ba798f19.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e4f771dda99bfbbd",
      "name" : "get_vif_config_ssids ",
      "source" : "e4f771dda99bfbbd.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "bfadb17a8632cb0b",
      "name" : "vif config Output Msg: ",
      "source" : "bfadb17a8632cb0b.attach",
      "type" : "text/plain",
      "size" : 7843
    }, {
      "uid" : "d5b10e291dcbe031",
      "name" : "vif config Err Msg: ",
      "source" : "d5b10e291dcbe031.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5121c72bcb66fa28",
      "name" : "get_vif_config_ssids ",
      "source" : "5121c72bcb66fa28.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "59692b5f1b309b9b",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "59692b5f1b309b9b.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "46d105ee6301a7a7",
      "name" : "APNOS LIbrary: ",
      "source" : "46d105ee6301a7a7.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "d969102af1c660e5",
      "name" : "openwrt_ctl Setup",
      "source" : "d969102af1c660e5.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "73be6d1827c13cf1",
      "name" : "vif state Output Msg: ",
      "source" : "73be6d1827c13cf1.attach",
      "type" : "text/plain",
      "size" : 3856
    }, {
      "uid" : "363066634d9b8cea",
      "name" : "vif state Err Msg: ",
      "source" : "363066634d9b8cea.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "55ed93b87e2b983c",
      "name" : "get_vif_state_ssids ",
      "source" : "55ed93b87e2b983c.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "cd339ea11725da06",
      "name" : "vif config Output Msg: ",
      "source" : "cd339ea11725da06.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "c080fbaa25ef1abd",
      "name" : "vif config Err Msg: ",
      "source" : "c080fbaa25ef1abd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7998dd9ef7169756",
      "name" : "get_vif_config_ssids ",
      "source" : "7998dd9ef7169756.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5ff489a8c684861e",
      "name" : "vif state Output Msg: ",
      "source" : "5ff489a8c684861e.attach",
      "type" : "text/plain",
      "size" : 7395
    }, {
      "uid" : "d8af9b66f1937997",
      "name" : "vif state Err Msg: ",
      "source" : "d8af9b66f1937997.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e074c0c5ad3608a9",
      "name" : "get_vif_state_ssids ",
      "source" : "e074c0c5ad3608a9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "8c8fc7ebb036c584",
      "name" : "vif config Output Msg: ",
      "source" : "8c8fc7ebb036c584.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "a5f0308f69349b07",
      "name" : "vif config Err Msg: ",
      "source" : "a5f0308f69349b07.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "af24852aa579dba4",
      "name" : "get_vif_config_ssids ",
      "source" : "af24852aa579dba4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "2b230e1e5eca1faf",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "2b230e1e5eca1faf.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 30,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626486177686,
      "stop" : 1626486177791,
      "duration" : 105
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626486177518,
      "stop" : 1626486177685,
      "duration" : 167
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3cd08239a82b6b59",
      "name" : "Controller Instantiated: ",
      "source" : "3cd08239a82b6b59.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626487270387,
      "stop" : 1626487270387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "40d603d174619434",
      "name" : "Passpoint Provider Info: ",
      "source" : "40d603d174619434.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626486175966,
      "stop" : 1626486175966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "55a7996d6df1227e",
      "name" : "Testbed Selected: ",
      "source" : "55a7996d6df1227e.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626488955281,
      "stop" : 1626488977273,
      "duration" : 21992
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d79e318bfb26f968",
      "name" : "RF Profile Created : wifi5",
      "source" : "d79e318bfb26f968.attach",
      "type" : "text/plain",
      "size" : 12259
    }, {
      "uid" : "b51bd614c68b566d",
      "name" : "Radius Profile Created",
      "source" : "b51bd614c68b566d.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "e6d13a94007af8af",
      "name" : "SSID Profile Created",
      "source" : "e6d13a94007af8af.attach",
      "type" : "text/plain",
      "size" : 2820
    }, {
      "uid" : "4ae918ad21289d6c",
      "name" : "SSID Profile Created",
      "source" : "4ae918ad21289d6c.attach",
      "type" : "text/plain",
      "size" : 2836
    }, {
      "uid" : "5f7cd71bb1f22f95",
      "name" : "SSID Profile Created",
      "source" : "5f7cd71bb1f22f95.attach",
      "type" : "text/plain",
      "size" : 2832
    }, {
      "uid" : "4275cbb806186c80",
      "name" : "SSID Profile Created",
      "source" : "4275cbb806186c80.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "4695f5d529e5269d",
      "name" : "SSID Profile Created",
      "source" : "4695f5d529e5269d.attach",
      "type" : "text/plain",
      "size" : 2846
    }, {
      "uid" : "cb964db05eed5d1e",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "cb964db05eed5d1e.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "40454bdc02abb9ca",
      "name" : "Passpoint Operator Profile Created",
      "source" : "40454bdc02abb9ca.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "e639701faee66d21",
      "name" : "Passpoint Venue Profile Created",
      "source" : "e639701faee66d21.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "bbd39d9123611da4",
      "name" : "Passpoint Profile Created",
      "source" : "bbd39d9123611da4.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "2bb11b289590eed4",
      "name" : "Updating SSID profile",
      "source" : "2bb11b289590eed4.attach",
      "type" : "text/plain",
      "size" : 149
    }, {
      "uid" : "c3bbff5025cf513f",
      "name" : "Updating SSID profile",
      "source" : "c3bbff5025cf513f.attach",
      "type" : "text/plain",
      "size" : 145
    }, {
      "uid" : "30dfcc0cc7ca155",
      "name" : "Updating SSID profile",
      "source" : "30dfcc0cc7ca155.attach",
      "type" : "text/plain",
      "size" : 159
    }, {
      "uid" : "4627a1532e20727d",
      "name" : "Updating SSID profile",
      "source" : "4627a1532e20727d.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "6d9e84395b7a8d02",
      "name" : "Equipment AP Profile Created",
      "source" : "6d9e84395b7a8d02.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626486175967,
      "stop" : 1626486175967,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626486175966,
      "stop" : 1626486175966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dadffd2f7b82ec01",
      "name" : "Testbed Selected : ",
      "source" : "dadffd2f7b82ec01.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626487270388,
      "stop" : 1626487270388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f7032bcdcce643ca",
      "name" : "Passpoint venue Info: ",
      "source" : "f7032bcdcce643ca.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626490048553,
      "stop" : 1626490048553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626486175967,
      "stop" : 1626486177518,
      "duration" : 1551
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "133ce862b991ff59",
      "name" : "added openwrtctl.py to :",
      "source" : "133ce862b991ff59.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "db0eb6230229b914",
      "name" : "APNOS LIbrary: ",
      "source" : "db0eb6230229b914.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "7963756e47861ef2",
      "name" : "openwrt_ctl Setup",
      "source" : "7963756e47861ef2.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626490048553,
      "stop" : 1626490078655,
      "duration" : 30102
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and twog\"\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63b4d450d0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f63b408a700>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor928.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f63b42281f0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11785, 11786, 11787, 11788], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63b4d450d0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and twog\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"51ab370f-e6ef-4efa-aff6-c2c011b7884e\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f63b4d450d0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ab41e09449ed8146",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "ab41e09449ed8146.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "8cfedd2c95927d70",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "8cfedd2c95927d70.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "4df9c3a0869ccd6e",
      "name" : "log",
      "source" : "4df9c3a0869ccd6e.txt",
      "type" : "text/plain",
      "size" : 1715
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626493963188,
      "stop" : 1626493963188,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626493963240,
      "stop" : 1626493963240,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626493963190,
      "stop" : 1626493963190,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626493963253,
      "stop" : 1626493963253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626493963184,
      "stop" : 1626493963184,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626493963238,
      "stop" : 1626493963238,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626490195270,
      "stop" : 1626490195270,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626493963244,
      "stop" : 1626493963244,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626493963196,
      "stop" : 1626493963196,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626492852862,
      "stop" : 1626492852862,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626492852862,
      "stop" : 1626492878264,
      "duration" : 25402
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ec8f66c6087488c3",
      "name" : "Tear Down in Profiles ",
      "source" : "ec8f66c6087488c3.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626493963193,
      "stop" : 1626493963193,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626493963200,
      "stop" : 1626493963200,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626493963200,
      "stop" : 1626493963201,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3c16939719f2127c",
      "name" : "Controller Teardown: ",
      "source" : "3c16939719f2127c.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626493963245,
      "stop" : 1626493963245,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626493963221,
      "stop" : 1626493963221,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626490600171,
      "stop" : 1626490600171,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626490600171,
      "stop" : 1626490626249,
      "duration" : 26078
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "60225f3ab988ab5c",
      "name" : "Tear Down in Profiles ",
      "source" : "60225f3ab988ab5c.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626493963209,
      "stop" : 1626493963209,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626493963230,
      "stop" : 1626493963230,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626493963242,
      "stop" : 1626493963242,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626490195269,
      "stop" : 1626490195269,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626493963204,
      "stop" : 1626493963204,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626490156977,
      "stop" : 1626490156977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626490156977,
      "stop" : 1626490195268,
      "duration" : 38291
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "NAT MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "nat"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_NatMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingNAT"
  }, {
    "name" : "host",
    "value" : "interop-ci-63-ios-99cmx"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 15,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "630b5541d07a4a17",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626405859108,
          "stop" : 1626405939154,
          "duration" : 80046
        }
      }, {
        "uid" : "3800a9105bc06e9f",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308731885,
          "stop" : 1626308731885,
          "duration" : 0
        }
      }, {
        "uid" : "8142039f6ccd5116",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625799409596,
          "stop" : 1625799409603,
          "duration" : 7
        }
      }, {
        "uid" : "86d54dc591d933d7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625741719676,
          "stop" : 1625741719676,
          "duration" : 0
        }
      }, {
        "uid" : "b304c27078e9f847",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625627038133,
          "stop" : 1625627038134,
          "duration" : 1
        }
      }, {
        "uid" : "6f71e61c2c036879",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625540748893,
          "stop" : 1625540748893,
          "duration" : 0
        }
      }, {
        "uid" : "b80c0ab3afcd8029",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625453749179,
          "stop" : 1625453749179,
          "duration" : 0
        }
      }, {
        "uid" : "d44b3a3b86b6a4f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625367785433,
          "stop" : 1625367785434,
          "duration" : 1
        }
      }, {
        "uid" : "c4419fea04c1b043",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625281336332,
          "stop" : 1625281336332,
          "duration" : 0
        }
      }, {
        "uid" : "8793c7dfa2abfab9",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625194945116,
          "stop" : 1625195165209,
          "duration" : 220093
        }
      }, {
        "uid" : "757453d203d0a78a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625104999034,
          "stop" : 1625104999034,
          "duration" : 0
        }
      }, {
        "uid" : "e44851e830107399",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625022607909,
          "stop" : 1625022607909,
          "duration" : 0
        }
      }, {
        "uid" : "93d268de6d19368e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624988450984,
          "stop" : 1624988450985,
          "duration" : 1
        }
      }, {
        "uid" : "364dc783d2ee7a87",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624969960090,
          "stop" : 1624969960091,
          "duration" : 1
        }
      }, {
        "uid" : "45333e3ab06134f2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624958324731,
          "stop" : 1624958324731,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "nat", "openRoaming", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "ios", "twog" ]
  },
  "source" : "65741ccc6304439a.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}", "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}]}}" ]
}
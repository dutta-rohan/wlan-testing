{
  "uid" : "4ff7442e46a94a5a",
  "name" : "test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN#test_OpenRoaming_5g_WPA2_EAP_VLAN",
  "historyId" : "e17309d7cab52de907bbdd26a81c568e",
  "time" : {
    "start" : 1626666156983,
    "stop" : 1626666238293,
    "duration" : 81310
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be039a220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f3be0586430>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1105.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f3be0460dc0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12271, 12272, 12273, 12274], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be039a220>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_5g_WPA2_EAP_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be039a220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626667122173,
      "stop" : 1626667211908,
      "duration" : 89735
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "63ba12666d2684e",
      "name" : "RF Profile Created : wifi5",
      "source" : "63ba12666d2684e.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "cbb2fb400193a49f",
      "name" : "SSID Profile Created",
      "source" : "cbb2fb400193a49f.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "caedd5d878a07b78",
      "name" : "SSID Profile Created",
      "source" : "caedd5d878a07b78.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "f4d13fc8b28a06cb",
      "name" : "SSID Profile Created",
      "source" : "f4d13fc8b28a06cb.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "c7a538600ef59db",
      "name" : "SSID Profile Created",
      "source" : "c7a538600ef59db.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "dd3e3f531c3f0f31",
      "name" : "Equipment AP Profile Created",
      "source" : "dd3e3f531c3f0f31.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "8b4754498a3daa4d",
      "name" : "APNOS LIbrary: ",
      "source" : "8b4754498a3daa4d.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "800890c820bc43ca",
      "name" : "openwrt_ctl Setup",
      "source" : "800890c820bc43ca.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "3f950170b0f1ab65",
      "name" : "vif config Output Msg: ",
      "source" : "3f950170b0f1ab65.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "e1ffe251a00bb53",
      "name" : "vif config Err Msg: ",
      "source" : "e1ffe251a00bb53.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ff635181c3cc5943",
      "name" : "get_vif_config_ssids ",
      "source" : "ff635181c3cc5943.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "18e2a57701361047",
      "name" : "vif config Output Msg: ",
      "source" : "18e2a57701361047.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "b9d8e5b62dab01de",
      "name" : "vif config Err Msg: ",
      "source" : "b9d8e5b62dab01de.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "585ea1f0ddd43da0",
      "name" : "get_vif_config_ssids ",
      "source" : "585ea1f0ddd43da0.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ac6ca35e7c5f2e",
      "name" : "vif config Output Msg: ",
      "source" : "ac6ca35e7c5f2e.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "9f9444a63164d589",
      "name" : "vif config Err Msg: ",
      "source" : "9f9444a63164d589.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "20d9b0e944e293ff",
      "name" : "get_vif_config_ssids ",
      "source" : "20d9b0e944e293ff.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ea8c2270bbc3abdf",
      "name" : "vif config Output Msg: ",
      "source" : "ea8c2270bbc3abdf.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "2efeeb70e782fe97",
      "name" : "vif config Err Msg: ",
      "source" : "2efeeb70e782fe97.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7c66476e9252c337",
      "name" : "get_vif_config_ssids ",
      "source" : "7c66476e9252c337.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "2289a36c5c68c41d",
      "name" : "vif config Output Msg: ",
      "source" : "2289a36c5c68c41d.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "d0ed8bc067890741",
      "name" : "vif config Err Msg: ",
      "source" : "d0ed8bc067890741.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4fd79f01f6662817",
      "name" : "get_vif_config_ssids ",
      "source" : "4fd79f01f6662817.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "4ce11baaa795fc7a",
      "name" : "vif config Output Msg: ",
      "source" : "4ce11baaa795fc7a.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "4916794fe897195a",
      "name" : "vif config Err Msg: ",
      "source" : "4916794fe897195a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "190ef6c822d5bc2b",
      "name" : "get_vif_config_ssids ",
      "source" : "190ef6c822d5bc2b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "9b5da522542cfba8",
      "name" : "vif config Output Msg: ",
      "source" : "9b5da522542cfba8.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "d141ddbfed574b80",
      "name" : "vif config Err Msg: ",
      "source" : "d141ddbfed574b80.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6721128f69b23d26",
      "name" : "get_vif_config_ssids ",
      "source" : "6721128f69b23d26.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "72b436bbfdb451e3",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "72b436bbfdb451e3.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "1b96a3fa6eba108a",
      "name" : "APNOS LIbrary: ",
      "source" : "1b96a3fa6eba108a.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "53884bf1437963ff",
      "name" : "openwrt_ctl Setup",
      "source" : "53884bf1437963ff.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "867eb08f5d4b8d49",
      "name" : "vif state Output Msg: ",
      "source" : "867eb08f5d4b8d49.attach",
      "type" : "text/plain",
      "size" : 7394
    }, {
      "uid" : "6642b2d65b36b0d0",
      "name" : "vif state Err Msg: ",
      "source" : "6642b2d65b36b0d0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b8b80975d8c501ab",
      "name" : "get_vif_state_ssids ",
      "source" : "b8b80975d8c501ab.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e61f9964ed7b43e3",
      "name" : "vif config Output Msg: ",
      "source" : "e61f9964ed7b43e3.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "efc7d9fbfb0e9503",
      "name" : "vif config Err Msg: ",
      "source" : "efc7d9fbfb0e9503.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "74d36858a1b60b17",
      "name" : "get_vif_config_ssids ",
      "source" : "74d36858a1b60b17.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a1e8b837d1c6ccb7",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "a1e8b837d1c6ccb7.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 39,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626660912804,
      "stop" : 1626660914382,
      "duration" : 1578
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6f809ec4ff888a7a",
      "name" : "added openwrtctl.py to :",
      "source" : "6f809ec4ff888a7a.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "2a1b546b794b9cfc",
      "name" : "APNOS LIbrary: ",
      "source" : "2a1b546b794b9cfc.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "3373d6584eb9a0b2",
      "name" : "openwrt_ctl Setup",
      "source" : "3373d6584eb9a0b2.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626660914382,
      "stop" : 1626660914526,
      "duration" : 144
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7e411d1a2ac8c081",
      "name" : "Controller Instantiated: ",
      "source" : "7e411d1a2ac8c081.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626660912804,
      "stop" : 1626660912804,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626665856333,
      "stop" : 1626666125695,
      "duration" : 269362
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e3332e171e8f44f8",
      "name" : "Equipment AP Profile Updated",
      "source" : "e3332e171e8f44f8.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "8414c5fafbd6f65b",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "8414c5fafbd6f65b.attach",
      "type" : "text/plain",
      "size" : 126
    }, {
      "uid" : "b736cffb87ac9fab",
      "name" : "APNOS LIbrary: ",
      "source" : "b736cffb87ac9fab.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "3f8d8ffd303815d6",
      "name" : "openwrt_ctl Setup",
      "source" : "3f8d8ffd303815d6.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "cf1ffd9d92b8c081",
      "name" : "vif config Output Msg: ",
      "source" : "cf1ffd9d92b8c081.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "66c00662d653c7ef",
      "name" : "vif config Err Msg: ",
      "source" : "66c00662d653c7ef.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "67d0038bcc37f617",
      "name" : "get_vif_config_ssids ",
      "source" : "67d0038bcc37f617.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "8e332600bda13524",
      "name" : "vif state Output Msg: ",
      "source" : "8e332600bda13524.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a1e6f1023ffaae3e",
      "name" : "vif state Err Msg: ",
      "source" : "a1e6f1023ffaae3e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "478349e7924db39e",
      "name" : "get_vif_state_ssids ",
      "source" : "478349e7924db39e.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "253f872cca647a72",
      "name" : "vif config Output Msg: ",
      "source" : "253f872cca647a72.attach",
      "type" : "text/plain",
      "size" : 7802
    }, {
      "uid" : "6c60c99f161960c9",
      "name" : "vif config Err Msg: ",
      "source" : "6c60c99f161960c9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2162046a37f7d4a1",
      "name" : "get_vif_config_ssids ",
      "source" : "2162046a37f7d4a1.attach",
      "type" : "text/plain",
      "size" : 120
    }, {
      "uid" : "c2e64bc2c5cf989f",
      "name" : "vif state Output Msg: ",
      "source" : "c2e64bc2c5cf989f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c49c48180abe4e96",
      "name" : "vif state Err Msg: ",
      "source" : "c49c48180abe4e96.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1d255c34c78e0caa",
      "name" : "get_vif_state_ssids ",
      "source" : "1d255c34c78e0caa.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "712db8c813294252",
      "name" : "vif config Output Msg: ",
      "source" : "712db8c813294252.attach",
      "type" : "text/plain",
      "size" : 7802
    }, {
      "uid" : "4537aa61a6d1be42",
      "name" : "vif config Err Msg: ",
      "source" : "4537aa61a6d1be42.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bb82389803a9d1fd",
      "name" : "get_vif_config_ssids ",
      "source" : "bb82389803a9d1fd.attach",
      "type" : "text/plain",
      "size" : 120
    }, {
      "uid" : "92a0be15c7816f17",
      "name" : "vif state Output Msg: ",
      "source" : "92a0be15c7816f17.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5882381e92b69305",
      "name" : "vif state Err Msg: ",
      "source" : "5882381e92b69305.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2b212f55b226335f",
      "name" : "get_vif_state_ssids ",
      "source" : "2b212f55b226335f.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "fe0a1e2cf9890854",
      "name" : "vif config Output Msg: ",
      "source" : "fe0a1e2cf9890854.attach",
      "type" : "text/plain",
      "size" : 4093
    }, {
      "uid" : "1d630bda3b404ef4",
      "name" : "vif config Err Msg: ",
      "source" : "1d630bda3b404ef4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c9ac4d349276886e",
      "name" : "get_vif_config_ssids ",
      "source" : "c9ac4d349276886e.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "a9c62a512da2d3c0",
      "name" : "vif state Output Msg: ",
      "source" : "a9c62a512da2d3c0.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c6fad3dc3d2979ea",
      "name" : "vif state Err Msg: ",
      "source" : "c6fad3dc3d2979ea.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "622176a18c707cb6",
      "name" : "get_vif_state_ssids ",
      "source" : "622176a18c707cb6.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "cb904aed96572214",
      "name" : "vif config Output Msg: ",
      "source" : "cb904aed96572214.attach",
      "type" : "text/plain",
      "size" : 4093
    }, {
      "uid" : "c5742ec00dfac1d9",
      "name" : "vif config Err Msg: ",
      "source" : "c5742ec00dfac1d9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cfeca803a326bd92",
      "name" : "get_vif_config_ssids ",
      "source" : "cfeca803a326bd92.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "75432320e0330b80",
      "name" : "vif state Output Msg: ",
      "source" : "75432320e0330b80.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "9234f0e15deaeb23",
      "name" : "vif state Err Msg: ",
      "source" : "9234f0e15deaeb23.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "96749b164991c449",
      "name" : "get_vif_state_ssids ",
      "source" : "96749b164991c449.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "69ec99aa34343e71",
      "name" : "vif config Output Msg: ",
      "source" : "69ec99aa34343e71.attach",
      "type" : "text/plain",
      "size" : 4093
    }, {
      "uid" : "e73c6eda57132131",
      "name" : "vif config Err Msg: ",
      "source" : "e73c6eda57132131.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "110a70f7060db2ad",
      "name" : "get_vif_config_ssids ",
      "source" : "110a70f7060db2ad.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "817d52b5d69d8c70",
      "name" : "vif state Output Msg: ",
      "source" : "817d52b5d69d8c70.attach",
      "type" : "text/plain",
      "size" : 4351
    }, {
      "uid" : "4745225844ccf85a",
      "name" : "vif state Err Msg: ",
      "source" : "4745225844ccf85a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "73755970cb2196f0",
      "name" : "get_vif_state_ssids ",
      "source" : "73755970cb2196f0.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "91cc90f1fc8a40fb",
      "name" : "vifC status on AP :: ",
      "source" : "91cc90f1fc8a40fb.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "3b51748f8d06d97d",
      "name" : "vifS status on AP :: ",
      "source" : "3b51748f8d06d97d.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626660912803,
      "stop" : 1626660912803,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d25e2fd28e23fbe4",
      "name" : "Testbed Selected : ",
      "source" : "d25e2fd28e23fbe4.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626666125695,
      "stop" : 1626666156982,
      "duration" : 31287
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626660914641,
      "stop" : 1626660914642,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "adf721c54e5b12fd",
      "name" : "Test Cases Requires: ",
      "source" : "adf721c54e5b12fd.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626661999069,
      "stop" : 1626661999070,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3cc9ea49183d313e",
      "name" : "Passpoint operator Info: ",
      "source" : "3cc9ea49183d313e.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626661999070,
      "stop" : 1626661999071,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d7aa54491110af73",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "d7aa54491110af73.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626661999070,
      "stop" : 1626661999070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3fdd59d66a26f71a",
      "name" : "Passpoint venue Info: ",
      "source" : "3fdd59d66a26f71a.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626661999069,
      "stop" : 1626661999069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b4cf9e9f3f648b30",
      "name" : "Passpoint Provider Info: ",
      "source" : "b4cf9e9f3f648b30.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626660914526,
      "stop" : 1626660914526,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "43b71506625e9c21",
      "name" : "VLAN Created: ",
      "source" : "43b71506625e9c21.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626660912803,
      "stop" : 1626660912804,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6cc992ce78f356e4",
      "name" : "Testbed Selected: ",
      "source" : "6cc992ce78f356e4.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626665440839,
      "stop" : 1626665461968,
      "duration" : 21129
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "85f9b3f68cdd05af",
      "name" : "RF Profile Created : wifi5",
      "source" : "85f9b3f68cdd05af.attach",
      "type" : "text/plain",
      "size" : 12264
    }, {
      "uid" : "87b6e5bff8b64072",
      "name" : "Radius Profile Created",
      "source" : "87b6e5bff8b64072.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "61dc09835aaeb56b",
      "name" : "SSID Profile Created",
      "source" : "61dc09835aaeb56b.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "5347b4be27ce44bb",
      "name" : "SSID Profile Created",
      "source" : "5347b4be27ce44bb.attach",
      "type" : "text/plain",
      "size" : 2842
    }, {
      "uid" : "8beb46fd92b5cea",
      "name" : "SSID Profile Created",
      "source" : "8beb46fd92b5cea.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "d397d6acf674dd1b",
      "name" : "SSID Profile Created",
      "source" : "d397d6acf674dd1b.attach",
      "type" : "text/plain",
      "size" : 2856
    }, {
      "uid" : "7d102f01ae6013be",
      "name" : "SSID Profile Created",
      "source" : "7d102f01ae6013be.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "c69146075bd62838",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "c69146075bd62838.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "95e68b33ce7d6679",
      "name" : "Passpoint Operator Profile Created",
      "source" : "95e68b33ce7d6679.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "4f956b86ee3ecd1d",
      "name" : "Passpoint Venue Profile Created",
      "source" : "4f956b86ee3ecd1d.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "b652f0187bfd03b1",
      "name" : "Passpoint Profile Created",
      "source" : "b652f0187bfd03b1.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "7ab1cd6872b889f8",
      "name" : "Updating SSID profile",
      "source" : "7ab1cd6872b889f8.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "4e8dd14cb63cf029",
      "name" : "Updating SSID profile",
      "source" : "4e8dd14cb63cf029.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "f58168e750ac580c",
      "name" : "Updating SSID profile",
      "source" : "f58168e750ac580c.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "cc06e8603188910a",
      "name" : "Updating SSID profile",
      "source" : "cc06e8603188910a.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "7ae3a690be8b020c",
      "name" : "Equipment AP Profile Created",
      "source" : "7ae3a690be8b020c.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626661999070,
      "stop" : 1626661999070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "81ef7283c2927106",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "81ef7283c2927106.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626660914526,
      "stop" : 1626660914640,
      "duration" : 114
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626666125695,
      "stop" : 1626666125695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626661999068,
      "stop" : 1626661999068,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4b3618ffe86b66b9",
      "name" : "Passpoint profile Info: ",
      "source" : "4b3618ffe86b66b9.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626660914641,
      "stop" : 1626660914641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626660914641,
      "stop" : 1626660914641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be039a220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f3be0586430>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1105.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f3be0460dc0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12271, 12272, 12273, 12274], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be039a220>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_5g_WPA2_EAP_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_5g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"01cb4106-a2ee-4737-901e-80e8b7fbcc65\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be039a220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "71428f5f27c8ec2d",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_5g successful ",
      "source" : "71428f5f27c8ec2d.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "bdd642c36d602dd",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_5g successful ",
      "source" : "bdd642c36d602dd.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "5d9354c10a804391",
      "name" : "log",
      "source" : "5d9354c10a804391.txt",
      "type" : "text/plain",
      "size" : 1715
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626667674546,
      "stop" : 1626667674546,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626667674546,
      "stop" : 1626667698957,
      "duration" : 24411
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "58fcbdc509ba2bb4",
      "name" : "Tear Down in Profiles ",
      "source" : "58fcbdc509ba2bb4.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626668936447,
      "stop" : 1626668936447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626668936444,
      "stop" : 1626668936444,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626668936444,
      "stop" : 1626668936445,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7495e6d2acf08161",
      "name" : "Controller Teardown: ",
      "source" : "7495e6d2acf08161.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626668936450,
      "stop" : 1626668936450,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626666277788,
      "stop" : 1626666277788,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626668936461,
      "stop" : 1626668936461,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626666238340,
      "stop" : 1626666238340,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626666238340,
      "stop" : 1626666277786,
      "duration" : 39446
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626668936432,
      "stop" : 1626668936432,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626668936470,
      "stop" : 1626668936470,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626668936467,
      "stop" : 1626668936467,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626668936469,
      "stop" : 1626668936469,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626668936471,
      "stop" : 1626668936471,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626668936441,
      "stop" : 1626668936441,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626668936456,
      "stop" : 1626668936456,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626667096026,
      "stop" : 1626667096026,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626667096026,
      "stop" : 1626667122168,
      "duration" : 26142
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "905eb787be1b4b98",
      "name" : "Tear Down in Profiles ",
      "source" : "905eb787be1b4b98.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626668936468,
      "stop" : 1626668936468,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626668936439,
      "stop" : 1626668936439,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626666277787,
      "stop" : 1626666277787,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626668936472,
      "stop" : 1626668936472,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626668936435,
      "stop" : 1626668936435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626668936437,
      "stop" : 1626668936437,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_vlan_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeVLAN"
  }, {
    "name" : "host",
    "value" : "interop-ci-65-ios-jwg8z"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_5g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 17,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "8b1503ca7d581b63",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626579737979,
          "stop" : 1626579816794,
          "duration" : 78815
        }
      }, {
        "uid" : "c316450c434957d6",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626491327699,
          "stop" : 1626491406301,
          "duration" : 78602
        }
      }, {
        "uid" : "5db4cbc0c29342fe",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626407130062,
          "stop" : 1626407210883,
          "duration" : 80821
        }
      }, {
        "uid" : "564ab6659a996c92",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308732171,
          "stop" : 1626308732171,
          "duration" : 0
        }
      }, {
        "uid" : "ea8bb7937a54c054",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625800560216,
          "stop" : 1625800560217,
          "duration" : 1
        }
      }, {
        "uid" : "6018556dc4732882",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625742869506,
          "stop" : 1625742869506,
          "duration" : 0
        }
      }, {
        "uid" : "6138ec9b3a57df5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625628192943,
          "stop" : 1625628192943,
          "duration" : 0
        }
      }, {
        "uid" : "16a66404f71ad23f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625541896996,
          "stop" : 1625541896997,
          "duration" : 1
        }
      }, {
        "uid" : "69e6c63336c85967",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625454895975,
          "stop" : 1625454895976,
          "duration" : 1
        }
      }, {
        "uid" : "8c58de6cd05366",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625368936385,
          "stop" : 1625368936385,
          "duration" : 0
        }
      }, {
        "uid" : "b68adf3b93bf6ae2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625282504195,
          "stop" : 1625282504195,
          "duration" : 0
        }
      }, {
        "uid" : "af0041f597501eb3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625196325941,
          "stop" : 1625196325941,
          "duration" : 0
        }
      }, {
        "uid" : "e7f508e3153735f3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625106055996,
          "stop" : 1625106055996,
          "duration" : 0
        }
      }, {
        "uid" : "a372ddcfe9aa4ef2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625023773498,
          "stop" : 1625023773649,
          "duration" : 151
        }
      }, {
        "uid" : "50a086a46c096c78",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624989613833,
          "stop" : 1624989613834,
          "duration" : 1
        }
      }, {
        "uid" : "90268ef25f8370db",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624971118517,
          "stop" : 1624971118518,
          "duration" : 1
        }
      }, {
        "uid" : "390ff4fcc024946",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624959477023,
          "stop" : 1624959477024,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "openRoaming", "vlan", "wpa2_eap", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "fiveg", "ios" ]
  },
  "source" : "4ff7442e46a94a5a.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_5g']}", "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}" ]
}
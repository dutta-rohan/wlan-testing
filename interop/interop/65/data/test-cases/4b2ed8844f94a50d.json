{
  "uid" : "4b2ed8844f94a50d",
  "name" : "test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN#test_wpa2_only_eap_2g_VLAN",
  "historyId" : "cb61208cf35ff96a76a651c2f2e60a9a",
  "time" : {
    "start" : 1626666567735,
    "stop" : 1626666647398,
    "duration" : 79663
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be0623820>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f3be4373790>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1105.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f3be4438340>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12271, 12272, 12273, 12274], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be0623820>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n      #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be0623820>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626667122173,
      "stop" : 1626667211908,
      "duration" : 89735
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "63ba12666d2684e",
      "name" : "RF Profile Created : wifi5",
      "source" : "63ba12666d2684e.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "cbb2fb400193a49f",
      "name" : "SSID Profile Created",
      "source" : "cbb2fb400193a49f.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "caedd5d878a07b78",
      "name" : "SSID Profile Created",
      "source" : "caedd5d878a07b78.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "f4d13fc8b28a06cb",
      "name" : "SSID Profile Created",
      "source" : "f4d13fc8b28a06cb.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "c7a538600ef59db",
      "name" : "SSID Profile Created",
      "source" : "c7a538600ef59db.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "dd3e3f531c3f0f31",
      "name" : "Equipment AP Profile Created",
      "source" : "dd3e3f531c3f0f31.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "8b4754498a3daa4d",
      "name" : "APNOS LIbrary: ",
      "source" : "8b4754498a3daa4d.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "800890c820bc43ca",
      "name" : "openwrt_ctl Setup",
      "source" : "800890c820bc43ca.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "3f950170b0f1ab65",
      "name" : "vif config Output Msg: ",
      "source" : "3f950170b0f1ab65.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "e1ffe251a00bb53",
      "name" : "vif config Err Msg: ",
      "source" : "e1ffe251a00bb53.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ff635181c3cc5943",
      "name" : "get_vif_config_ssids ",
      "source" : "ff635181c3cc5943.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "18e2a57701361047",
      "name" : "vif config Output Msg: ",
      "source" : "18e2a57701361047.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "b9d8e5b62dab01de",
      "name" : "vif config Err Msg: ",
      "source" : "b9d8e5b62dab01de.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "585ea1f0ddd43da0",
      "name" : "get_vif_config_ssids ",
      "source" : "585ea1f0ddd43da0.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ac6ca35e7c5f2e",
      "name" : "vif config Output Msg: ",
      "source" : "ac6ca35e7c5f2e.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "9f9444a63164d589",
      "name" : "vif config Err Msg: ",
      "source" : "9f9444a63164d589.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "20d9b0e944e293ff",
      "name" : "get_vif_config_ssids ",
      "source" : "20d9b0e944e293ff.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ea8c2270bbc3abdf",
      "name" : "vif config Output Msg: ",
      "source" : "ea8c2270bbc3abdf.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "2efeeb70e782fe97",
      "name" : "vif config Err Msg: ",
      "source" : "2efeeb70e782fe97.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7c66476e9252c337",
      "name" : "get_vif_config_ssids ",
      "source" : "7c66476e9252c337.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "2289a36c5c68c41d",
      "name" : "vif config Output Msg: ",
      "source" : "2289a36c5c68c41d.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "d0ed8bc067890741",
      "name" : "vif config Err Msg: ",
      "source" : "d0ed8bc067890741.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4fd79f01f6662817",
      "name" : "get_vif_config_ssids ",
      "source" : "4fd79f01f6662817.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "4ce11baaa795fc7a",
      "name" : "vif config Output Msg: ",
      "source" : "4ce11baaa795fc7a.attach",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "4916794fe897195a",
      "name" : "vif config Err Msg: ",
      "source" : "4916794fe897195a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "190ef6c822d5bc2b",
      "name" : "get_vif_config_ssids ",
      "source" : "190ef6c822d5bc2b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "9b5da522542cfba8",
      "name" : "vif config Output Msg: ",
      "source" : "9b5da522542cfba8.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "d141ddbfed574b80",
      "name" : "vif config Err Msg: ",
      "source" : "d141ddbfed574b80.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6721128f69b23d26",
      "name" : "get_vif_config_ssids ",
      "source" : "6721128f69b23d26.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "72b436bbfdb451e3",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "72b436bbfdb451e3.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "1b96a3fa6eba108a",
      "name" : "APNOS LIbrary: ",
      "source" : "1b96a3fa6eba108a.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "53884bf1437963ff",
      "name" : "openwrt_ctl Setup",
      "source" : "53884bf1437963ff.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "867eb08f5d4b8d49",
      "name" : "vif state Output Msg: ",
      "source" : "867eb08f5d4b8d49.attach",
      "type" : "text/plain",
      "size" : 7394
    }, {
      "uid" : "6642b2d65b36b0d0",
      "name" : "vif state Err Msg: ",
      "source" : "6642b2d65b36b0d0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b8b80975d8c501ab",
      "name" : "get_vif_state_ssids ",
      "source" : "b8b80975d8c501ab.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e61f9964ed7b43e3",
      "name" : "vif config Output Msg: ",
      "source" : "e61f9964ed7b43e3.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "efc7d9fbfb0e9503",
      "name" : "vif config Err Msg: ",
      "source" : "efc7d9fbfb0e9503.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "74d36858a1b60b17",
      "name" : "get_vif_config_ssids ",
      "source" : "74d36858a1b60b17.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a1e8b837d1c6ccb7",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "a1e8b837d1c6ccb7.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 39,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626660912804,
      "stop" : 1626660914382,
      "duration" : 1578
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6f809ec4ff888a7a",
      "name" : "added openwrtctl.py to :",
      "source" : "6f809ec4ff888a7a.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "2a1b546b794b9cfc",
      "name" : "APNOS LIbrary: ",
      "source" : "2a1b546b794b9cfc.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "3373d6584eb9a0b2",
      "name" : "openwrt_ctl Setup",
      "source" : "3373d6584eb9a0b2.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626666277791,
      "stop" : 1626666534535,
      "duration" : 256744
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "940d1d039e4094d6",
      "name" : "Equipment AP Profile Updated",
      "source" : "940d1d039e4094d6.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "3bc476d4880c5fe3",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "3bc476d4880c5fe3.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "645d2bd8dc23df0d",
      "name" : "APNOS LIbrary: ",
      "source" : "645d2bd8dc23df0d.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "44ee9e46256d168",
      "name" : "openwrt_ctl Setup",
      "source" : "44ee9e46256d168.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "6d931a721e9991b",
      "name" : "vif config Output Msg: ",
      "source" : "6d931a721e9991b.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "dfeec26bcfbbda52",
      "name" : "vif config Err Msg: ",
      "source" : "dfeec26bcfbbda52.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "151c95d4d6f597b4",
      "name" : "get_vif_config_ssids ",
      "source" : "151c95d4d6f597b4.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "ce85cffe0bffe78e",
      "name" : "vif state Output Msg: ",
      "source" : "ce85cffe0bffe78e.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f32304d4ad9ba9db",
      "name" : "vif state Err Msg: ",
      "source" : "f32304d4ad9ba9db.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fb3df33bc327ca7d",
      "name" : "get_vif_state_ssids ",
      "source" : "fb3df33bc327ca7d.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "a3a12997b170a75",
      "name" : "vif config Output Msg: ",
      "source" : "a3a12997b170a75.attach",
      "type" : "text/plain",
      "size" : 7806
    }, {
      "uid" : "af2e108635f53606",
      "name" : "vif config Err Msg: ",
      "source" : "af2e108635f53606.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cb0d5e9253c215d4",
      "name" : "get_vif_config_ssids ",
      "source" : "cb0d5e9253c215d4.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "9009f8d37c87e14a",
      "name" : "vif state Output Msg: ",
      "source" : "9009f8d37c87e14a.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "8e42b27c92d6bf99",
      "name" : "vif state Err Msg: ",
      "source" : "8e42b27c92d6bf99.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8e58a6e10e3ddd65",
      "name" : "get_vif_state_ssids ",
      "source" : "8e58a6e10e3ddd65.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d93dfa8827b34791",
      "name" : "vif config Output Msg: ",
      "source" : "d93dfa8827b34791.attach",
      "type" : "text/plain",
      "size" : 7806
    }, {
      "uid" : "d35173c742bcab9c",
      "name" : "vif config Err Msg: ",
      "source" : "d35173c742bcab9c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "456b278c62aded5d",
      "name" : "get_vif_config_ssids ",
      "source" : "456b278c62aded5d.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "a8d841c72c45a2c7",
      "name" : "vif state Output Msg: ",
      "source" : "a8d841c72c45a2c7.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c3a341c7fa34f9c",
      "name" : "vif state Err Msg: ",
      "source" : "c3a341c7fa34f9c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "db872d7cf0dc5495",
      "name" : "get_vif_state_ssids ",
      "source" : "db872d7cf0dc5495.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "809601986d1e0506",
      "name" : "vif config Output Msg: ",
      "source" : "809601986d1e0506.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "5929494ba09c60c3",
      "name" : "vif config Err Msg: ",
      "source" : "5929494ba09c60c3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6dd1fa56a14edc7a",
      "name" : "get_vif_config_ssids ",
      "source" : "6dd1fa56a14edc7a.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "5fd2439cdbe38a39",
      "name" : "vif state Output Msg: ",
      "source" : "5fd2439cdbe38a39.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "94540b7cfea224ce",
      "name" : "vif state Err Msg: ",
      "source" : "94540b7cfea224ce.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5a1df4fbbeeb6a77",
      "name" : "get_vif_state_ssids ",
      "source" : "5a1df4fbbeeb6a77.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "97d3f1db83b5e9e5",
      "name" : "vif config Output Msg: ",
      "source" : "97d3f1db83b5e9e5.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "11b2e1d9b718c184",
      "name" : "vif config Err Msg: ",
      "source" : "11b2e1d9b718c184.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "304580f17a2e3547",
      "name" : "get_vif_config_ssids ",
      "source" : "304580f17a2e3547.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "2094217121e9f1e7",
      "name" : "vif state Output Msg: ",
      "source" : "2094217121e9f1e7.attach",
      "type" : "text/plain",
      "size" : 4352
    }, {
      "uid" : "c01148dd90d21f96",
      "name" : "vif state Err Msg: ",
      "source" : "c01148dd90d21f96.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "acad9719077aeb85",
      "name" : "get_vif_state_ssids ",
      "source" : "acad9719077aeb85.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "83562b826a933d53",
      "name" : "vifC status on AP :: ",
      "source" : "83562b826a933d53.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "4969bf8ae1acb665",
      "name" : "vifS status on AP :: ",
      "source" : "4969bf8ae1acb665.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626660914382,
      "stop" : 1626660914526,
      "duration" : 144
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7e411d1a2ac8c081",
      "name" : "Controller Instantiated: ",
      "source" : "7e411d1a2ac8c081.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626660912804,
      "stop" : 1626660912804,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626660912803,
      "stop" : 1626660912803,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d25e2fd28e23fbe4",
      "name" : "Testbed Selected : ",
      "source" : "d25e2fd28e23fbe4.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626660914641,
      "stop" : 1626660914642,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "adf721c54e5b12fd",
      "name" : "Test Cases Requires: ",
      "source" : "adf721c54e5b12fd.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626661999069,
      "stop" : 1626661999070,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3cc9ea49183d313e",
      "name" : "Passpoint operator Info: ",
      "source" : "3cc9ea49183d313e.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626661999070,
      "stop" : 1626661999071,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d7aa54491110af73",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "d7aa54491110af73.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626661999070,
      "stop" : 1626661999070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3fdd59d66a26f71a",
      "name" : "Passpoint venue Info: ",
      "source" : "3fdd59d66a26f71a.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626661999069,
      "stop" : 1626661999069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b4cf9e9f3f648b30",
      "name" : "Passpoint Provider Info: ",
      "source" : "b4cf9e9f3f648b30.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626666534535,
      "stop" : 1626666534535,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626660914526,
      "stop" : 1626660914526,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "43b71506625e9c21",
      "name" : "VLAN Created: ",
      "source" : "43b71506625e9c21.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626660912803,
      "stop" : 1626660912804,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6cc992ce78f356e4",
      "name" : "Testbed Selected: ",
      "source" : "6cc992ce78f356e4.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626665440839,
      "stop" : 1626665461968,
      "duration" : 21129
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "85f9b3f68cdd05af",
      "name" : "RF Profile Created : wifi5",
      "source" : "85f9b3f68cdd05af.attach",
      "type" : "text/plain",
      "size" : 12264
    }, {
      "uid" : "87b6e5bff8b64072",
      "name" : "Radius Profile Created",
      "source" : "87b6e5bff8b64072.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "61dc09835aaeb56b",
      "name" : "SSID Profile Created",
      "source" : "61dc09835aaeb56b.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "5347b4be27ce44bb",
      "name" : "SSID Profile Created",
      "source" : "5347b4be27ce44bb.attach",
      "type" : "text/plain",
      "size" : 2842
    }, {
      "uid" : "8beb46fd92b5cea",
      "name" : "SSID Profile Created",
      "source" : "8beb46fd92b5cea.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "d397d6acf674dd1b",
      "name" : "SSID Profile Created",
      "source" : "d397d6acf674dd1b.attach",
      "type" : "text/plain",
      "size" : 2856
    }, {
      "uid" : "7d102f01ae6013be",
      "name" : "SSID Profile Created",
      "source" : "7d102f01ae6013be.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "c69146075bd62838",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "c69146075bd62838.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "95e68b33ce7d6679",
      "name" : "Passpoint Operator Profile Created",
      "source" : "95e68b33ce7d6679.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "4f956b86ee3ecd1d",
      "name" : "Passpoint Venue Profile Created",
      "source" : "4f956b86ee3ecd1d.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "b652f0187bfd03b1",
      "name" : "Passpoint Profile Created",
      "source" : "b652f0187bfd03b1.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "7ab1cd6872b889f8",
      "name" : "Updating SSID profile",
      "source" : "7ab1cd6872b889f8.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "4e8dd14cb63cf029",
      "name" : "Updating SSID profile",
      "source" : "4e8dd14cb63cf029.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "f58168e750ac580c",
      "name" : "Updating SSID profile",
      "source" : "f58168e750ac580c.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "cc06e8603188910a",
      "name" : "Updating SSID profile",
      "source" : "cc06e8603188910a.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "7ae3a690be8b020c",
      "name" : "Equipment AP Profile Created",
      "source" : "7ae3a690be8b020c.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626661999070,
      "stop" : 1626661999070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "81ef7283c2927106",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "81ef7283c2927106.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626660914526,
      "stop" : 1626660914640,
      "duration" : 114
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626661999068,
      "stop" : 1626661999068,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4b3618ffe86b66b9",
      "name" : "Passpoint profile Info: ",
      "source" : "4b3618ffe86b66b9.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626660914641,
      "stop" : 1626660914641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626666534535,
      "stop" : 1626666567734,
      "duration" : 33199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626660914641,
      "stop" : 1626660914641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be0623820>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f3be4373790>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1105.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f3be4438340>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12271, 12272, 12273, 12274], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be0623820>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n      #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"025ab3bb-918b-4bc7-be92-ac274ce72126\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3be0623820>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "acec5b6f91e0831e",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "acec5b6f91e0831e.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "b6d04734cf2dc404",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "b6d04734cf2dc404.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "301020fab440224b",
      "name" : "log",
      "source" : "301020fab440224b.txt",
      "type" : "text/plain",
      "size" : 1451
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626667674546,
      "stop" : 1626667674546,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626667674546,
      "stop" : 1626667698957,
      "duration" : 24411
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "58fcbdc509ba2bb4",
      "name" : "Tear Down in Profiles ",
      "source" : "58fcbdc509ba2bb4.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626668936447,
      "stop" : 1626668936447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626666686763,
      "stop" : 1626666686763,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626668936444,
      "stop" : 1626668936444,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626668936444,
      "stop" : 1626668936445,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7495e6d2acf08161",
      "name" : "Controller Teardown: ",
      "source" : "7495e6d2acf08161.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626668936450,
      "stop" : 1626668936450,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626668936461,
      "stop" : 1626668936461,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626668936432,
      "stop" : 1626668936432,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626668936470,
      "stop" : 1626668936470,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626668936467,
      "stop" : 1626668936467,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626668936469,
      "stop" : 1626668936469,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626668936471,
      "stop" : 1626668936471,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626666686762,
      "stop" : 1626666686762,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626668936441,
      "stop" : 1626668936441,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626668936456,
      "stop" : 1626668936456,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626667096026,
      "stop" : 1626667096026,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626667096026,
      "stop" : 1626667122168,
      "duration" : 26142
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "905eb787be1b4b98",
      "name" : "Tear Down in Profiles ",
      "source" : "905eb787be1b4b98.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626668936468,
      "stop" : 1626668936468,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626668936439,
      "stop" : 1626668936439,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626668936472,
      "stop" : 1626668936472,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626668936435,
      "stop" : 1626668936435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626666647455,
      "stop" : 1626666647455,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626666647455,
      "stop" : 1626666686761,
      "duration" : 39306
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626668936437,
      "stop" : 1626668936437,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_vlan_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeVLAN"
  }, {
    "name" : "host",
    "value" : "interop-ci-65-ios-jwg8z"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 17,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "58abbb9437158211",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626580193869,
          "stop" : 1626580272355,
          "duration" : 78486
        }
      }, {
        "uid" : "2180b15c6cd02d99",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626491781336,
          "stop" : 1626491863917,
          "duration" : 82581
        }
      }, {
        "uid" : "efbf7c0b679bc145",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626407537990,
          "stop" : 1626407616872,
          "duration" : 78882
        }
      }, {
        "uid" : "7b84ae702787ffd2",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308732230,
          "stop" : 1626308732230,
          "duration" : 0
        }
      }, {
        "uid" : "427a01cb662fecf",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625800871175,
          "stop" : 1625800871175,
          "duration" : 0
        }
      }, {
        "uid" : "689fa3107b146592",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625743182948,
          "stop" : 1625743182948,
          "duration" : 0
        }
      }, {
        "uid" : "e03a4900fad7d671",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625628503800,
          "stop" : 1625628503800,
          "duration" : 0
        }
      }, {
        "uid" : "be0e0232a059ec91",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625542208275,
          "stop" : 1625542208275,
          "duration" : 0
        }
      }, {
        "uid" : "f67e02b01635e6f6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625455206198,
          "stop" : 1625455206199,
          "duration" : 1
        }
      }, {
        "uid" : "a1b7ac62a7622fde",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625369247698,
          "stop" : 1625369247698,
          "duration" : 0
        }
      }, {
        "uid" : "ac90ee85370fd6f8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625282820947,
          "stop" : 1625282820947,
          "duration" : 0
        }
      }, {
        "uid" : "f2e86a7556ab8044",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625196634945,
          "stop" : 1625196634946,
          "duration" : 1
        }
      }, {
        "uid" : "dd614ae6f0471fc0",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625106369503,
          "stop" : 1625106369504,
          "duration" : 1
        }
      }, {
        "uid" : "78efa317c8d6af7c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625024088606,
          "stop" : 1625024088607,
          "duration" : 1
        }
      }, {
        "uid" : "252b2695a90207b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624989928260,
          "stop" : 1624989928260,
          "duration" : 0
        }
      }, {
        "uid" : "6bfccc52bf2a9759",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624971429148,
          "stop" : 1624971429149,
          "duration" : 1
        }
      }, {
        "uid" : "1d50ad3e0d8c5bc1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624959788282,
          "stop" : 1624959788283,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "openRoaming", "vlan", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "ios", "twog" ]
  },
  "source" : "4b2ed8844f94a50d.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}", "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}" ]
}
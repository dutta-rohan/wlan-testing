{
  "uid" : "5b16bc91d2eb317f",
  "name" : "test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge#test_wpa2_only_eap_2g_BRIDGE",
  "historyId" : "14e81de8d0cdcdf8295fa71cf989c963",
  "time" : {
    "start" : 1626576783187,
    "stop" : 1626576862894,
    "duration" : 79707
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f52cd1dbac0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f52cc4c7fa0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1023.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7f52cc4a8460>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12061, 12062, 12063, 12064], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f52cd1dbac0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n      #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f52cd1dbac0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626574564757,
      "stop" : 1626574564757,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1626575661692,
      "stop" : 1626575661692,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eb071fe11ed8af5f",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "eb071fe11ed8af5f.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1626575661690,
      "stop" : 1626575661690,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4c7ba02bd1be9a1b",
      "name" : "Passpoint profile Info: ",
      "source" : "4c7ba02bd1be9a1b.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626574564756,
      "stop" : 1626574564756,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c3e7446ff1df88ef",
      "name" : "Testbed Selected : ",
      "source" : "c3e7446ff1df88ef.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1626574566691,
      "stop" : 1626574566803,
      "duration" : 112
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626580754407,
      "stop" : 1626580816764,
      "duration" : 62357
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4ef577962b07c3df",
      "name" : "RF Profile Created : wifi5",
      "source" : "4ef577962b07c3df.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "804c44162f2fe04c",
      "name" : "SSID Profile Created",
      "source" : "804c44162f2fe04c.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "cbc2a11e8927e3a",
      "name" : "SSID Profile Created",
      "source" : "cbc2a11e8927e3a.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "3a8b621ec819df50",
      "name" : "SSID Profile Created",
      "source" : "3a8b621ec819df50.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "3ce1f29b2eac07b7",
      "name" : "SSID Profile Created",
      "source" : "3ce1f29b2eac07b7.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "85a8746162af0821",
      "name" : "Equipment AP Profile Created",
      "source" : "85a8746162af0821.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "8f9ab960b17dd555",
      "name" : "APNOS LIbrary: ",
      "source" : "8f9ab960b17dd555.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "29ee570397a5b9a2",
      "name" : "openwrt_ctl Setup",
      "source" : "29ee570397a5b9a2.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "45b8ac3315ca959c",
      "name" : "vif config Output Msg: ",
      "source" : "45b8ac3315ca959c.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "cd3191db35a06f51",
      "name" : "vif config Err Msg: ",
      "source" : "cd3191db35a06f51.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2ebe827bebee0cf5",
      "name" : "get_vif_config_ssids ",
      "source" : "2ebe827bebee0cf5.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "8d15929cc855b0ff",
      "name" : "vif config Output Msg: ",
      "source" : "8d15929cc855b0ff.attach",
      "type" : "text/plain",
      "size" : 7980
    }, {
      "uid" : "6f784e3358dd41ec",
      "name" : "vif config Err Msg: ",
      "source" : "6f784e3358dd41ec.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "79e66e3eb5d86241",
      "name" : "get_vif_config_ssids ",
      "source" : "79e66e3eb5d86241.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c3f08ae1480e3a8c",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "c3f08ae1480e3a8c.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "48e05db31a080fca",
      "name" : "APNOS LIbrary: ",
      "source" : "48e05db31a080fca.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "d037a3a6c6a15ecc",
      "name" : "openwrt_ctl Setup",
      "source" : "d037a3a6c6a15ecc.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "e0c787c6152aa296",
      "name" : "vif state Output Msg: ",
      "source" : "e0c787c6152aa296.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "cd9ab72778f7c644",
      "name" : "vif state Err Msg: ",
      "source" : "cd9ab72778f7c644.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3d1596780ae37a50",
      "name" : "get_vif_state_ssids ",
      "source" : "3d1596780ae37a50.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "be0c2515e5285bb",
      "name" : "vif config Output Msg: ",
      "source" : "be0c2515e5285bb.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "4b4ff71d084974ca",
      "name" : "vif config Err Msg: ",
      "source" : "4b4ff71d084974ca.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4042498126a6cacb",
      "name" : "get_vif_config_ssids ",
      "source" : "4042498126a6cacb.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5521a072acfd038d",
      "name" : "vif state Output Msg: ",
      "source" : "5521a072acfd038d.attach",
      "type" : "text/plain",
      "size" : 3852
    }, {
      "uid" : "ecfe54abc5213362",
      "name" : "vif state Err Msg: ",
      "source" : "ecfe54abc5213362.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d7bced6cc66726ff",
      "name" : "get_vif_state_ssids ",
      "source" : "d7bced6cc66726ff.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "b09b1b0e41c40110",
      "name" : "vif config Output Msg: ",
      "source" : "b09b1b0e41c40110.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "d3bf9a6e5ec64dea",
      "name" : "vif config Err Msg: ",
      "source" : "d3bf9a6e5ec64dea.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7c4e7f5d5bbd17f6",
      "name" : "get_vif_config_ssids ",
      "source" : "7c4e7f5d5bbd17f6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "8e35c38705cbd8ab",
      "name" : "vif state Output Msg: ",
      "source" : "8e35c38705cbd8ab.attach",
      "type" : "text/plain",
      "size" : 7394
    }, {
      "uid" : "fb520a25095b17a",
      "name" : "vif state Err Msg: ",
      "source" : "fb520a25095b17a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ee8f4b4a97eb72cd",
      "name" : "get_vif_state_ssids ",
      "source" : "ee8f4b4a97eb72cd.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "cf3468055f7a0844",
      "name" : "vif config Output Msg: ",
      "source" : "cf3468055f7a0844.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "ec1f63690da5a8a4",
      "name" : "vif config Err Msg: ",
      "source" : "ec1f63690da5a8a4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "73b57af38f43a4fb",
      "name" : "get_vif_config_ssids ",
      "source" : "73b57af38f43a4fb.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b28c7065303afb80",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "b28c7065303afb80.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1626574566804,
      "stop" : 1626574566804,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1626576752010,
      "stop" : 1626576783186,
      "duration" : 31176
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626574564756,
      "stop" : 1626574564756,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6b3da2b92fb68938",
      "name" : "Testbed Selected: ",
      "source" : "6b3da2b92fb68938.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1626574566804,
      "stop" : 1626574566805,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "724cbd2a9054f15c",
      "name" : "Test Cases Requires: ",
      "source" : "724cbd2a9054f15c.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1626574566545,
      "stop" : 1626574566691,
      "duration" : 146
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "55701af5952fb479",
      "name" : "Controller Instantiated: ",
      "source" : "55701af5952fb479.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1626576482352,
      "stop" : 1626576752009,
      "duration" : 269657
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "517dadedd6deffa7",
      "name" : "Equipment AP Profile Updated",
      "source" : "517dadedd6deffa7.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "d21dcc6c75b5c59d",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "d21dcc6c75b5c59d.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "3d231761d82eeae6",
      "name" : "APNOS LIbrary: ",
      "source" : "3d231761d82eeae6.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "2b6b765a7012ad3e",
      "name" : "openwrt_ctl Setup",
      "source" : "2b6b765a7012ad3e.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "c11e62a911badd17",
      "name" : "vif config Output Msg: ",
      "source" : "c11e62a911badd17.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "494f59df7587eed1",
      "name" : "vif config Err Msg: ",
      "source" : "494f59df7587eed1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "57acecf53a0288a0",
      "name" : "get_vif_config_ssids ",
      "source" : "57acecf53a0288a0.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "aba819200ca22852",
      "name" : "vif state Output Msg: ",
      "source" : "aba819200ca22852.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7e2bc1e91ab5aaef",
      "name" : "vif state Err Msg: ",
      "source" : "7e2bc1e91ab5aaef.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b81f68cc1aee2305",
      "name" : "get_vif_state_ssids ",
      "source" : "b81f68cc1aee2305.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "e9d4adfd8a677619",
      "name" : "vif config Output Msg: ",
      "source" : "e9d4adfd8a677619.attach",
      "type" : "text/plain",
      "size" : 7798
    }, {
      "uid" : "c05e37f437f8254e",
      "name" : "vif config Err Msg: ",
      "source" : "c05e37f437f8254e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "993925cf7be231e3",
      "name" : "get_vif_config_ssids ",
      "source" : "993925cf7be231e3.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "e2255d583f010080",
      "name" : "vif state Output Msg: ",
      "source" : "e2255d583f010080.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "24b0a745bdfa29dd",
      "name" : "vif state Err Msg: ",
      "source" : "24b0a745bdfa29dd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e04137bbc318f639",
      "name" : "get_vif_state_ssids ",
      "source" : "e04137bbc318f639.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "bd5d17f4f6353813",
      "name" : "vif config Output Msg: ",
      "source" : "bd5d17f4f6353813.attach",
      "type" : "text/plain",
      "size" : 7798
    }, {
      "uid" : "bd8186dbbe675328",
      "name" : "vif config Err Msg: ",
      "source" : "bd8186dbbe675328.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5fdb6b4a17a97db",
      "name" : "get_vif_config_ssids ",
      "source" : "5fdb6b4a17a97db.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "5cec00ca5d664b4",
      "name" : "vif state Output Msg: ",
      "source" : "5cec00ca5d664b4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "54d5b75ed07e7eea",
      "name" : "vif state Err Msg: ",
      "source" : "54d5b75ed07e7eea.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2c25d9ceb5e9c0d0",
      "name" : "get_vif_state_ssids ",
      "source" : "2c25d9ceb5e9c0d0.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "5f2bb11895f29692",
      "name" : "vif config Output Msg: ",
      "source" : "5f2bb11895f29692.attach",
      "type" : "text/plain",
      "size" : 4091
    }, {
      "uid" : "59b1a76275c590b4",
      "name" : "vif config Err Msg: ",
      "source" : "59b1a76275c590b4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7eeb35e79df4e86f",
      "name" : "get_vif_config_ssids ",
      "source" : "7eeb35e79df4e86f.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "570b5d10e8f3d9f4",
      "name" : "vif state Output Msg: ",
      "source" : "570b5d10e8f3d9f4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7b2d4db9cb1ada4b",
      "name" : "vif state Err Msg: ",
      "source" : "7b2d4db9cb1ada4b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6c6db76d516f7c3c",
      "name" : "get_vif_state_ssids ",
      "source" : "6c6db76d516f7c3c.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "96cab679b51677f3",
      "name" : "vif config Output Msg: ",
      "source" : "96cab679b51677f3.attach",
      "type" : "text/plain",
      "size" : 4091
    }, {
      "uid" : "c76aab3dfffd8e37",
      "name" : "vif config Err Msg: ",
      "source" : "c76aab3dfffd8e37.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a79dab917c4f5cc8",
      "name" : "get_vif_config_ssids ",
      "source" : "a79dab917c4f5cc8.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "78a78c567d7a7eeb",
      "name" : "vif state Output Msg: ",
      "source" : "78a78c567d7a7eeb.attach",
      "type" : "text/plain",
      "size" : 2531
    }, {
      "uid" : "1117a39fa1d8db47",
      "name" : "vif state Err Msg: ",
      "source" : "1117a39fa1d8db47.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fcdb5a9c5f647a77",
      "name" : "get_vif_state_ssids ",
      "source" : "fcdb5a9c5f647a77.attach",
      "type" : "text/plain",
      "size" : 35
    }, {
      "uid" : "b8ea7c19d12293fe",
      "name" : "vif config Output Msg: ",
      "source" : "b8ea7c19d12293fe.attach",
      "type" : "text/plain",
      "size" : 4271
    }, {
      "uid" : "97cc2805d442e17f",
      "name" : "vif config Err Msg: ",
      "source" : "97cc2805d442e17f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "734587bf64fc1577",
      "name" : "get_vif_config_ssids ",
      "source" : "734587bf64fc1577.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "31c1b1575065e1f3",
      "name" : "vif state Output Msg: ",
      "source" : "31c1b1575065e1f3.attach",
      "type" : "text/plain",
      "size" : 4348
    }, {
      "uid" : "98a822eb95530708",
      "name" : "vif state Err Msg: ",
      "source" : "98a822eb95530708.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3fbd2fbbfb698d45",
      "name" : "get_vif_state_ssids ",
      "source" : "3fbd2fbbfb698d45.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "eb344c17cd849f50",
      "name" : "vifC status on AP :: ",
      "source" : "eb344c17cd849f50.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "b176188c321c258e",
      "name" : "vifS status on AP :: ",
      "source" : "b176188c321c258e.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1626575661691,
      "stop" : 1626575661692,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bd2e4320500a98cd",
      "name" : "Passpoint venue Info: ",
      "source" : "bd2e4320500a98cd.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626574564757,
      "stop" : 1626574566545,
      "duration" : 1788
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b499188a8c02a4eb",
      "name" : "added openwrtctl.py to :",
      "source" : "b499188a8c02a4eb.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "9ee9cdb5af608a95",
      "name" : "APNOS LIbrary: ",
      "source" : "9ee9cdb5af608a95.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "1b5cbb46887e0b60",
      "name" : "openwrt_ctl Setup",
      "source" : "1b5cbb46887e0b60.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1626575661692,
      "stop" : 1626575661692,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4047faaff142dd67",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "4047faaff142dd67.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1626576752009,
      "stop" : 1626576752009,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1626575661692,
      "stop" : 1626575683064,
      "duration" : 21372
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4ea900e45c03dc2a",
      "name" : "RF Profile Created : wifi5",
      "source" : "4ea900e45c03dc2a.attach",
      "type" : "text/plain",
      "size" : 12274
    }, {
      "uid" : "65f7cacc85f58f11",
      "name" : "Radius Profile Created",
      "source" : "65f7cacc85f58f11.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "d0eaea09a6c1d67a",
      "name" : "SSID Profile Created",
      "source" : "d0eaea09a6c1d67a.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "df6bbe92a6d2c222",
      "name" : "SSID Profile Created",
      "source" : "df6bbe92a6d2c222.attach",
      "type" : "text/plain",
      "size" : 2842
    }, {
      "uid" : "37085555d5e91267",
      "name" : "SSID Profile Created",
      "source" : "37085555d5e91267.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "3ef0a651ed688229",
      "name" : "SSID Profile Created",
      "source" : "3ef0a651ed688229.attach",
      "type" : "text/plain",
      "size" : 2856
    }, {
      "uid" : "177932b15fb74c66",
      "name" : "SSID Profile Created",
      "source" : "177932b15fb74c66.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "efb12fff9ae66070",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "efb12fff9ae66070.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "c7b545263aa924a3",
      "name" : "Passpoint Operator Profile Created",
      "source" : "c7b545263aa924a3.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "10e68489e84b74e4",
      "name" : "Passpoint Venue Profile Created",
      "source" : "10e68489e84b74e4.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "ff1870eaaa6b472c",
      "name" : "Passpoint Profile Created",
      "source" : "ff1870eaaa6b472c.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "5c147064f702abe1",
      "name" : "Updating SSID profile",
      "source" : "5c147064f702abe1.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "f6c55b477c3b1a5e",
      "name" : "Updating SSID profile",
      "source" : "f6c55b477c3b1a5e.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "6df033c4e7232482",
      "name" : "Updating SSID profile",
      "source" : "6df033c4e7232482.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "94b5d4316fde35f8",
      "name" : "Updating SSID profile",
      "source" : "94b5d4316fde35f8.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "d50516e995838f0a",
      "name" : "Equipment AP Profile Created",
      "source" : "d50516e995838f0a.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1626574566691,
      "stop" : 1626574566691,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "92de0cea7890ed11",
      "name" : "VLAN Created: ",
      "source" : "92de0cea7890ed11.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1626575661691,
      "stop" : 1626575661691,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1ef7c365c573efaa",
      "name" : "Passpoint operator Info: ",
      "source" : "1ef7c365c573efaa.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1626575661691,
      "stop" : 1626575661691,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d67f58c315d7e72a",
      "name" : "Passpoint Provider Info: ",
      "source" : "d67f58c315d7e72a.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1626574566804,
      "stop" : 1626574566804,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f52cd1dbac0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f52cc4c7fa0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1023.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7f52cc4a8460>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [12061, 12062, 12063, 12064], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f52cd1dbac0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_2g_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n      #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_2g_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"3f03b8fc-64fe-43a7-a3f8-7f9a90954891\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f52cd1dbac0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b8119b9e12bf7356",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "b8119b9e12bf7356.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "8aacc91d3ba89209",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_2g successful ",
      "source" : "8aacc91d3ba89209.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "d849a5cd33116251",
      "name" : "log",
      "source" : "d849a5cd33116251.txt",
      "type" : "text/plain",
      "size" : 1715
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626582378849,
      "stop" : 1626582378849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1626582378868,
      "stop" : 1626582378868,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1626582378872,
      "stop" : 1626582378872,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626582378861,
      "stop" : 1626582378861,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1626582378838,
      "stop" : 1626582378838,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626581282635,
      "stop" : 1626581282635,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626581282635,
      "stop" : 1626581307197,
      "duration" : 24562
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a4d50eeccd2ae697",
      "name" : "Tear Down in Profiles ",
      "source" : "a4d50eeccd2ae697.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1626582378836,
      "stop" : 1626582378836,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1626576862976,
      "stop" : 1626576862976,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1626576862976,
      "stop" : 1626576902365,
      "duration" : 39389
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626582378856,
      "stop" : 1626582378856,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1626582378831,
      "stop" : 1626582378831,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1626582378843,
      "stop" : 1626582378843,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1626582378843,
      "stop" : 1626582378844,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a6a567510f9789e0",
      "name" : "Controller Teardown: ",
      "source" : "a6a567510f9789e0.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1626576902366,
      "stop" : 1626576902366,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1626582378869,
      "stop" : 1626582378869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1626582378846,
      "stop" : 1626582378846,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1626582378867,
      "stop" : 1626582378867,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1626576902365,
      "stop" : 1626576902365,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1626577323289,
      "stop" : 1626577323289,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1626577323289,
      "stop" : 1626577349646,
      "duration" : 26357
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "83caa68f8ef64381",
      "name" : "Tear Down in Profiles ",
      "source" : "83caa68f8ef64381.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1626582378840,
      "stop" : 1626582378840,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1626582378870,
      "stop" : 1626582378870,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1626582378871,
      "stop" : 1626582378871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1626582378834,
      "stop" : 1626582378834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridge"
  }, {
    "name" : "host",
    "value" : "interop-ci-64-ios-9rfkn"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 15,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "731657c67c605e21",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626488408041,
          "stop" : 1626488486538,
          "duration" : 78497
        }
      }, {
        "uid" : "6250dc7e41f7888a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626404169234,
          "stop" : 1626404250249,
          "duration" : 81015
        }
      }, {
        "uid" : "904d51967c64736",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308731577,
          "stop" : 1626308731577,
          "duration" : 0
        }
      }, {
        "uid" : "900cbb22aefd34a2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625797877440,
          "stop" : 1625797877441,
          "duration" : 1
        }
      }, {
        "uid" : "f888749f51b01496",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625740198301,
          "stop" : 1625740198301,
          "duration" : 0
        }
      }, {
        "uid" : "36c57a6d613edc25",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625625516952,
          "stop" : 1625625516952,
          "duration" : 0
        }
      }, {
        "uid" : "84227a628ff956f7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625539081471,
          "stop" : 1625539081471,
          "duration" : 0
        }
      }, {
        "uid" : "2043cf0dcc14da35",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625452229295,
          "stop" : 1625452229295,
          "duration" : 0
        }
      }, {
        "uid" : "3276d487085de7fc",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625366259564,
          "stop" : 1625366259564,
          "duration" : 0
        }
      }, {
        "uid" : "d43b4b70173d1137",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625279806322,
          "stop" : 1625279806322,
          "duration" : 0
        }
      }, {
        "uid" : "8f652d1d12dc6439",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625193262578,
          "stop" : 1625193262579,
          "duration" : 1
        }
      }, {
        "uid" : "b1d5fa9966fabc8e",
        "status" : "broken",
        "statusDetails" : "paramiko.ssh_exception.NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 10.28.3.102",
        "time" : {
          "start" : 1625104651906,
          "stop" : 1625104651906,
          "duration" : 0
        }
      }, {
        "uid" : "7fd805db16cee354",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625020975254,
          "stop" : 1625020975255,
          "duration" : 1
        }
      }, {
        "uid" : "62011ea35d266747",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624986929499,
          "stop" : 1624986929500,
          "duration" : 1
        }
      }, {
        "uid" : "81733d3e57809f98",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624968439876,
          "stop" : 1624968439876,
          "duration" : 0
        }
      }, {
        "uid" : "5ed83015a77902d5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624956800989,
          "stop" : 1624956800989,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "openRoaming", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "ios", "twog" ]
  },
  "source" : "5b16bc91d2eb317f.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}
{
  "uid" : "796810b868bc8feb",
  "name" : "test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge#test_OpenRoaming_2g_WPA2_EAP_BRIDGE",
  "historyId" : "f10713e83fde7dc0a8c85549caec105c",
  "time" : {
    "start" : 1625624549842,
    "stop" : 1625624835815,
    "duration" : 285973
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fb1b827c610>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1929.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fb1b8ff61c0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11198, 11199, 11200, 11201], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:265: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fb1b8ff61c0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11198, 11199, 11200, 11201], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_controller",
    "time" : {
      "start" : 1625617574515,
      "stop" : 1625617574781,
      "duration" : 266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "85f5d66dff74437e",
      "name" : "Controller Instantiated: ",
      "source" : "85f5d66dff74437e.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625628877053,
      "stop" : 1625628959180,
      "duration" : 82127
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "68b45b2516b4c05a",
      "name" : "RF Profile Created : wifi5",
      "source" : "68b45b2516b4c05a.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "a2d203425981b5c5",
      "name" : "SSID Profile Created",
      "source" : "a2d203425981b5c5.attach",
      "type" : "text/plain",
      "size" : 2795
    }, {
      "uid" : "1591a65cdabdabf7",
      "name" : "SSID Profile Created",
      "source" : "1591a65cdabdabf7.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "16a2e212541ff8ac",
      "name" : "SSID Profile Created",
      "source" : "16a2e212541ff8ac.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "49048455beacf28d",
      "name" : "SSID Profile Created",
      "source" : "49048455beacf28d.attach",
      "type" : "text/plain",
      "size" : 2829
    }, {
      "uid" : "7557d7028a58f8aa",
      "name" : "Equipment AP Profile Created",
      "source" : "7557d7028a58f8aa.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "f6cb20b6d32277ff",
      "name" : "APNOS LIbrary: ",
      "source" : "f6cb20b6d32277ff.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "2bf7f1c159f86ca9",
      "name" : "openwrt_ctl Setup",
      "source" : "2bf7f1c159f86ca9.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "8b565575e3d7172c",
      "name" : "vif config Output Msg: ",
      "source" : "8b565575e3d7172c.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "7a788bb045a593b6",
      "name" : "vif config Err Msg: ",
      "source" : "7a788bb045a593b6.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "50273fc84210c892",
      "name" : "get_vif_config_ssids ",
      "source" : "50273fc84210c892.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "9fb8eac178ec0367",
      "name" : "vif config Output Msg: ",
      "source" : "9fb8eac178ec0367.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "1a302a293ec8c7f",
      "name" : "vif config Err Msg: ",
      "source" : "1a302a293ec8c7f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f396671b7f5ddef6",
      "name" : "get_vif_config_ssids ",
      "source" : "f396671b7f5ddef6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7a26e20288b5ec96",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "7a26e20288b5ec96.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "2a8b5752eea6a512",
      "name" : "APNOS LIbrary: ",
      "source" : "2a8b5752eea6a512.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "2e7f86227e950e00",
      "name" : "openwrt_ctl Setup",
      "source" : "2e7f86227e950e00.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "bd05080e64e4f43",
      "name" : "vif state Output Msg: ",
      "source" : "bd05080e64e4f43.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "949493b929013045",
      "name" : "vif state Err Msg: ",
      "source" : "949493b929013045.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "292c51ef7f44e4d",
      "name" : "get_vif_state_ssids ",
      "source" : "292c51ef7f44e4d.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "1734143fcc98ecaa",
      "name" : "vif config Output Msg: ",
      "source" : "1734143fcc98ecaa.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "274cab4e859858f7",
      "name" : "vif config Err Msg: ",
      "source" : "274cab4e859858f7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "20247a53097005d0",
      "name" : "get_vif_config_ssids ",
      "source" : "20247a53097005d0.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "d4d1ee79e8d7d7fb",
      "name" : "vif state Output Msg: ",
      "source" : "d4d1ee79e8d7d7fb.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "3ee6fe3da33f454e",
      "name" : "vif state Err Msg: ",
      "source" : "3ee6fe3da33f454e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d8a026067cfd9315",
      "name" : "get_vif_state_ssids ",
      "source" : "d8a026067cfd9315.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "30aa4f31b7fcb49e",
      "name" : "vif config Output Msg: ",
      "source" : "30aa4f31b7fcb49e.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "ae6c93ba7c612f76",
      "name" : "vif config Err Msg: ",
      "source" : "ae6c93ba7c612f76.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "30b7a47eb24db8c0",
      "name" : "get_vif_config_ssids ",
      "source" : "30b7a47eb24db8c0.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "86d2a3be2d8f79ff",
      "name" : "vif state Output Msg: ",
      "source" : "86d2a3be2d8f79ff.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "1fbad6dab623d736",
      "name" : "vif state Err Msg: ",
      "source" : "1fbad6dab623d736.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d61350420eedfb1b",
      "name" : "get_vif_state_ssids ",
      "source" : "d61350420eedfb1b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "54b9c0663d04cc2e",
      "name" : "vif config Output Msg: ",
      "source" : "54b9c0663d04cc2e.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "c5b0caf70394dfe1",
      "name" : "vif config Err Msg: ",
      "source" : "c5b0caf70394dfe1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "49cf9ce1f727dca6",
      "name" : "get_vif_config_ssids ",
      "source" : "49cf9ce1f727dca6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "9ba26a8c780c9aff",
      "name" : "vif state Output Msg: ",
      "source" : "9ba26a8c780c9aff.attach",
      "type" : "text/plain",
      "size" : 4005
    }, {
      "uid" : "c4798221069c0678",
      "name" : "vif state Err Msg: ",
      "source" : "c4798221069c0678.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "13cde00b42c78ddc",
      "name" : "get_vif_state_ssids ",
      "source" : "13cde00b42c78ddc.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "31f5a322937a91bc",
      "name" : "vif config Output Msg: ",
      "source" : "31f5a322937a91bc.attach",
      "type" : "text/plain",
      "size" : 8041
    }, {
      "uid" : "203acd8005f35051",
      "name" : "vif config Err Msg: ",
      "source" : "203acd8005f35051.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "89df65a6100fad3f",
      "name" : "get_vif_config_ssids ",
      "source" : "89df65a6100fad3f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ab75d5e5f85a8123",
      "name" : "vif state Output Msg: ",
      "source" : "ab75d5e5f85a8123.attach",
      "type" : "text/plain",
      "size" : 7623
    }, {
      "uid" : "8e7f6d8e29ae907c",
      "name" : "vif state Err Msg: ",
      "source" : "8e7f6d8e29ae907c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "dfa9176c49b1d686",
      "name" : "get_vif_state_ssids ",
      "source" : "dfa9176c49b1d686.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "605223b5a19549a8",
      "name" : "vif config Output Msg: ",
      "source" : "605223b5a19549a8.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "118cbc589ba6223e",
      "name" : "vif config Err Msg: ",
      "source" : "118cbc589ba6223e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8f3b7e5774d29396",
      "name" : "get_vif_config_ssids ",
      "source" : "8f3b7e5774d29396.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "db202e84acbf6d80",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "db202e84acbf6d80.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 48,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1625624276614,
      "stop" : 1625624276614,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d6d5bce038a6b335",
      "name" : "Passpoint venue Info: ",
      "source" : "d6d5bce038a6b335.attach",
      "type" : "text/plain",
      "size" : 326
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1625617574904,
      "stop" : 1625617574905,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5704e769ba6a3acc",
      "name" : "Test Cases Requires: ",
      "source" : "5704e769ba6a3acc.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1625617573005,
      "stop" : 1625617573006,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5830987ba0654387",
      "name" : "Testbed Selected: ",
      "source" : "5830987ba0654387.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1625617574904,
      "stop" : 1625617574904,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1625617574781,
      "stop" : 1625617574781,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "effd8ec5a2481e08",
      "name" : "VLAN Created: ",
      "source" : "effd8ec5a2481e08.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1625624519490,
      "stop" : 1625624549841,
      "duration" : 30351
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1625617573005,
      "stop" : 1625617573005,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "504c04f3f341a296",
      "name" : "Testbed Selected : ",
      "source" : "504c04f3f341a296.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1625617573006,
      "stop" : 1625617574514,
      "duration" : 1508
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "400d9017a5b80962",
      "name" : "added openwrtctl.py to :",
      "source" : "400d9017a5b80962.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "ddf8bfa20a0045bf",
      "name" : "APNOS LIbrary: ",
      "source" : "ddf8bfa20a0045bf.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "fb91f5270061b29",
      "name" : "openwrt_ctl Setup",
      "source" : "fb91f5270061b29.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1625624276615,
      "stop" : 1625624276615,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e1106aeee270cc29",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "e1106aeee270cc29.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1625624289846,
      "stop" : 1625624519489,
      "duration" : 229643
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "63d9e456646e9d05",
      "name" : "Equipment AP Profile Updated",
      "source" : "63d9e456646e9d05.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "a74eb5f309fa9544",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "a74eb5f309fa9544.attach",
      "type" : "text/plain",
      "size" : 126
    }, {
      "uid" : "177ad66a22b75166",
      "name" : "APNOS LIbrary: ",
      "source" : "177ad66a22b75166.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "7d3e527c35895d38",
      "name" : "openwrt_ctl Setup",
      "source" : "7d3e527c35895d38.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "28615c1eb3209376",
      "name" : "vif config Output Msg: ",
      "source" : "28615c1eb3209376.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "bdb372de12f99a81",
      "name" : "vif config Err Msg: ",
      "source" : "bdb372de12f99a81.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5c1e5d95e6ecbae3",
      "name" : "get_vif_config_ssids ",
      "source" : "5c1e5d95e6ecbae3.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "6df6d58b12766331",
      "name" : "vif state Output Msg: ",
      "source" : "6df6d58b12766331.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "2095f41c53f8773c",
      "name" : "vif state Err Msg: ",
      "source" : "2095f41c53f8773c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4360cc0d240e29b5",
      "name" : "get_vif_state_ssids ",
      "source" : "4360cc0d240e29b5.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "7f1f5237ea4e0294",
      "name" : "vif config Output Msg: ",
      "source" : "7f1f5237ea4e0294.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "c705ad5a671bb896",
      "name" : "vif config Err Msg: ",
      "source" : "c705ad5a671bb896.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6833616a6eadb2ae",
      "name" : "get_vif_config_ssids ",
      "source" : "6833616a6eadb2ae.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "b041c4ec14db2230",
      "name" : "vif state Output Msg: ",
      "source" : "b041c4ec14db2230.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "1c693ed9b40900d1",
      "name" : "vif state Err Msg: ",
      "source" : "1c693ed9b40900d1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "96c03a416f086ed8",
      "name" : "get_vif_state_ssids ",
      "source" : "96c03a416f086ed8.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "8228b94b3d834159",
      "name" : "vif config Output Msg: ",
      "source" : "8228b94b3d834159.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "bff09c86c417dc89",
      "name" : "vif config Err Msg: ",
      "source" : "bff09c86c417dc89.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "49daa116d573f8f7",
      "name" : "get_vif_config_ssids ",
      "source" : "49daa116d573f8f7.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "4be5777bf449a1f",
      "name" : "vif state Output Msg: ",
      "source" : "4be5777bf449a1f.attach",
      "type" : "text/plain",
      "size" : 4537
    }, {
      "uid" : "64bf033b7619436c",
      "name" : "vif state Err Msg: ",
      "source" : "64bf033b7619436c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6698f71468101e27",
      "name" : "get_vif_state_ssids ",
      "source" : "6698f71468101e27.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "20de49ba89d973a6",
      "name" : "vifC status on AP :: ",
      "source" : "20de49ba89d973a6.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "37e573d2135ec73a",
      "name" : "vifS status on AP :: ",
      "source" : "37e573d2135ec73a.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 24,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1625624519490,
      "stop" : 1625624519490,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1625617573006,
      "stop" : 1625617573006,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1625624276615,
      "stop" : 1625624276615,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5e7490d70e482e54",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "5e7490d70e482e54.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625624276615,
      "stop" : 1625624289846,
      "duration" : 13231
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6eadcfa55a206805",
      "name" : "RF Profile Created : wifi5",
      "source" : "6eadcfa55a206805.attach",
      "type" : "text/plain",
      "size" : 12274
    }, {
      "uid" : "3a2546fb0c857a01",
      "name" : "Radius Profile Created",
      "source" : "3a2546fb0c857a01.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "4ef4e9949c1a838d",
      "name" : "SSID Profile Created",
      "source" : "4ef4e9949c1a838d.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "d37e88bdb9f81969",
      "name" : "SSID Profile Created",
      "source" : "d37e88bdb9f81969.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "88a961980143f0a5",
      "name" : "SSID Profile Created",
      "source" : "88a961980143f0a5.attach",
      "type" : "text/plain",
      "size" : 2834
    }, {
      "uid" : "f7e7405d69a9dac3",
      "name" : "SSID Profile Created",
      "source" : "f7e7405d69a9dac3.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "574ffbba6734a4d3",
      "name" : "SSID Profile Created",
      "source" : "574ffbba6734a4d3.attach",
      "type" : "text/plain",
      "size" : 2848
    }, {
      "uid" : "4d09b8c8ecf6bac6",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "4d09b8c8ecf6bac6.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "3188ac982c5d3de7",
      "name" : "Passpoint Operator Profile Created",
      "source" : "3188ac982c5d3de7.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "222dd80979cf8a44",
      "name" : "Passpoint Venue Profile Created",
      "source" : "222dd80979cf8a44.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "674b65a567b844a8",
      "name" : "Passpoint Profile Created",
      "source" : "674b65a567b844a8.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "df1a313f825c97ed",
      "name" : "Updating SSID profile",
      "source" : "df1a313f825c97ed.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "b8a4e35da8bc37e1",
      "name" : "Updating SSID profile",
      "source" : "b8a4e35da8bc37e1.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "44de4b55e12745f6",
      "name" : "Updating SSID profile",
      "source" : "44de4b55e12745f6.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "b50657f69a613e8a",
      "name" : "Updating SSID profile",
      "source" : "b50657f69a613e8a.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "c269450d0ef3334a",
      "name" : "Equipment AP Profile Created",
      "source" : "c269450d0ef3334a.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1625617574903,
      "stop" : 1625617574904,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625617574781,
      "stop" : 1625617574903,
      "duration" : 122
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1625624276613,
      "stop" : 1625624276613,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8ee8fc81caf6e190",
      "name" : "Passpoint profile Info: ",
      "source" : "8ee8fc81caf6e190.attach",
      "type" : "text/plain",
      "size" : 1091
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1625624276614,
      "stop" : 1625624276614,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1484743152258deb",
      "name" : "Passpoint operator Info: ",
      "source" : "1484743152258deb.attach",
      "type" : "text/plain",
      "size" : 307
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1625624276614,
      "stop" : 1625624276614,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1924a8676236f347",
      "name" : "Passpoint Provider Info: ",
      "source" : "1924a8676236f347.attach",
      "type" : "text/plain",
      "size" : 422
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fb1b827c610>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1929.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fb1b8ff61c0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11198, 11199, 11200, 11201], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:265: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7fb1b8ff61c0>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [11198, 11199, 11200, 11201], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"0230fc11-1448-4e92-85a5-8b345ab5e77f\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7fb1b82aae50>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cc4056594ad2b199",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "cc4056594ad2b199.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "eb1a4c177f8cac0a",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "eb1a4c177f8cac0a.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "bacb28dec7a98bbd",
      "name" : "log",
      "source" : "bacb28dec7a98bbd.txt",
      "type" : "text/plain",
      "size" : 923
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1625630784030,
      "stop" : 1625630784030,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1625630784030,
      "stop" : 1625630784031,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "29ea9147b5263d1f",
      "name" : "Controller Teardown: ",
      "source" : "29ea9147b5263d1f.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625629516815,
      "stop" : 1625629516816,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625629516816,
      "stop" : 1625629540539,
      "duration" : 23723
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "23c87163a73069b3",
      "name" : "Tear Down in Profiles ",
      "source" : "23c87163a73069b3.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1625630784054,
      "stop" : 1625630784054,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1625630784019,
      "stop" : 1625630784019,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1625630784043,
      "stop" : 1625630784043,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1625630784021,
      "stop" : 1625630784022,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1625630784027,
      "stop" : 1625630784027,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1625624835861,
      "stop" : 1625624835861,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1625624835862,
      "stop" : 1625624934251,
      "duration" : 98389
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1625630784049,
      "stop" : 1625630784049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1625630784033,
      "stop" : 1625630784033,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1625630784053,
      "stop" : 1625630784053,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1625624934252,
      "stop" : 1625624934252,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1625624934252,
      "stop" : 1625624934252,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1625630784037,
      "stop" : 1625630784037,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1625630784052,
      "stop" : 1625630784052,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625625867647,
      "stop" : 1625625867647,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625625867647,
      "stop" : 1625625892522,
      "duration" : 24875
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d3619945fb415592",
      "name" : "Tear Down in Profiles ",
      "source" : "d3619945fb415592.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1625630784023,
      "stop" : 1625630784023,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625630784025,
      "stop" : 1625630784025,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1625630784057,
      "stop" : 1625630784057,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1625630784055,
      "stop" : 1625630784055,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1625630784056,
      "stop" : 1625630784056,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridge"
  }, {
    "name" : "host",
    "value" : "interop-ci-42-ftblw"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 10,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "bca332f09fca91d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625538455304,
          "stop" : 1625538455304,
          "duration" : 0
        }
      }, {
        "uid" : "be04b48d2c605de0",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625451385384,
          "stop" : 1625451607167,
          "duration" : 221783
        }
      }, {
        "uid" : "532e1367b60bdb4",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625365296404,
          "stop" : 1625365576776,
          "duration" : 280372
        }
      }, {
        "uid" : "5b4b807fd4dde110",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625278829711,
          "stop" : 1625279113959,
          "duration" : 284248
        }
      }, {
        "uid" : "ecf8edea0e66b7c7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625192633227,
          "stop" : 1625192633228,
          "duration" : 1
        }
      }, {
        "uid" : "c9997836d758609c",
        "status" : "broken",
        "statusDetails" : "paramiko.ssh_exception.NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 10.28.3.102",
        "time" : {
          "start" : 1625104637420,
          "stop" : 1625104637420,
          "duration" : 0
        }
      }, {
        "uid" : "6d7a934fa4d6891b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625020339575,
          "stop" : 1625020339576,
          "duration" : 1
        }
      }, {
        "uid" : "767438bae5e583de",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624985957053,
          "stop" : 1624986245454,
          "duration" : 288401
        }
      }, {
        "uid" : "68a71c95dd1c2e71",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624967596862,
          "stop" : 1624967820491,
          "duration" : 223629
        }
      }, {
        "uid" : "7c4bdca6fa9366ed",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624955969689,
          "stop" : 1624956177490,
          "duration" : 207801
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_eap", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "ios", "twog" ]
  },
  "source" : "796810b868bc8feb.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}
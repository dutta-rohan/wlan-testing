{"name": "test_wpa2_only_eap_5g[push_ap_profile0-setup_profiles0]", "status": "broken", "statusDetails": {"message": "TypeError: object of type 'TypeError' has no len()", "trace": "def teardown():\n        try:\n            print(\"\\n\\n---------- Tear Down ----------\")\n            testFailed = request.session.testsfailed\n            if testFailed>0:\n                print (\"Test Case Failure, please check report link: \" + testCaseName)\n                exceptionFailure = request.config.cache.get(\"SelectingWifiFailed\", None)\n>               reporting_client.test_stop(TestResultFactory.create_failure(exceptionFailure))\n\n../libs/perfecto_libs/android_lib.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nreason = None, traceback = None, failureReason = None\n\n    @staticmethod\n    def create_failure(reason, traceback=None, failureReason=None):\n>       return TestResultFailure(reason, traceback, failureReason)\n\n/usr/local/lib/python3.8/site-packages/perfecto/test/TestResultFactory.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <perfecto.test.TestResult.TestResultFailure object at 0x7efe84311280>\nreason = None, exception = None, failureReason = None\n\n    def __init__(self, reason, exception=None, failureReason=None):\n    \n        if exception is not None:\n            self.message = str(reason) + ': ' + str(exception)\n        else:\n            self.message = reason\n    \n>       if len(self.message) > 4096:\nE       TypeError: object of type 'NoneType' has no len()\n\n/usr/local/lib/python3.8/site-packages/perfecto/test/TestResult.py:32: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <allure_commons._allure.fixture object at 0x7efe8409c040>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../libs/perfecto_libs/android_lib.py:142: in teardown\n    reporting_client.test_stop(TestResultFactory.create_failure(e))\n/usr/local/lib/python3.8/site-packages/perfecto/test/TestResultFactory.py:11: in create_failure\n    return TestResultFailure(reason, traceback, failureReason)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <perfecto.test.TestResult.TestResultFailure object at 0x7efe841a9880>\nreason = TypeError(\"object of type 'NoneType' has no len()\"), exception = None\nfailureReason = None\n\n    def __init__(self, reason, exception=None, failureReason=None):\n    \n        if exception is not None:\n            self.message = str(reason) + ': ' + str(exception)\n        else:\n            self.message = reason\n    \n>       if len(self.message) > 4096:\nE       TypeError: object of type 'TypeError' has no len()\n\n/usr/local/lib/python3.8/site-packages/perfecto/test/TestResult.py:32: TypeError"}, "description": "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        ", "attachments": [{"name": "Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful ", "source": "f0073ece-f677-4c21-a63b-9f12354b53dc-attachment.attach"}, {"name": "Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful ", "source": "04a2f4fb-37d7-48c2-86d6-555398fbc187-attachment.attach"}, {"name": "log", "source": "b924e3b3-20f9-43b3-a055-ff34f9165878-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "push_ap_profile", "value": "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}"}, {"name": "setup_profiles", "value": "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"}], "start": 1627003608004, "stop": 1627003930544, "uuid": "6f706d9a-4bc7-45b3-8cc9-7af0703e081a", "historyId": "2b1b759cc1baae92a8693a397439ab23", "testCaseId": "9f07c4e7ad2d039c137c2ddbe0d40c79", "fullName": "e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode#test_wpa2_only_eap_5g", "labels": [{"name": "feature", "value": "BRIDGE MODE EAP PASSPOINT SETUP"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('push_ap_profile')"}, {"name": "tag", "value": "bridge"}, {"name": "tag", "value": "fiveg"}, {"name": "tag", "value": "openRoaming"}, {"name": "tag", "value": "interop"}, {"name": "tag", "value": "wpa2_only_eap"}, {"name": "tag", "value": "android"}, {"name": "tag", "value": "interop_and"}, {"name": "parentSuite", "value": "e2e.interOp.android.OpenRoamingPassPoint"}, {"name": "suite", "value": "test_OpenRoaming_BridgeMode"}, {"name": "subSuite", "value": "TestOpenRoamingBridgeMode"}, {"name": "host", "value": "interop-ci-77-android-bjg9l"}, {"name": "thread", "value": "6-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"}]}
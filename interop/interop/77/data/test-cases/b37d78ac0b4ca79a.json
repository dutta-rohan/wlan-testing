{
  "uid" : "b37d78ac0b4ca79a",
  "name" : "test_AccessPointConnection_2g_WPA[setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.AccessPointConnection.test_AccessPointConnection.TestAccessPointConnectivety#test_AccessPointConnection_2g_WPA",
  "historyId" : "efbd26c56d5db6b97a1ef5303240efe0",
  "time" : {
    "start" : 1627007192049,
    "stop" : 1627007238190,
    "duration" : 46141
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_AccessPointConnection_2g_WPA[setup_profiles0]>>\nWifiNameSSID = 'ssid_wpa_2g', WifiPass = 'something'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"e1c137f1-20be-4859-b344-c9bd728874c2\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3a78242e50>)\nconnData = {'bundleId-iOS-Ping': 'com.deftapps.ping', 'bundleId-iOS-Settings': 'com.apple.Preferences'}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e1c137f1-20be-4859-b344-c9bd728874c2\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f3a78242250>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1606.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.AccessPointConnection.test_AccessPointConnection.TestAccessPointConnectivety object at 0x7f3a7a0bd9d0>\nrequest = <FixtureRequest for <Function test_AccessPointConnection_2g_WPA[setup_profiles0]>>\nget_AccessPointConn_data = {'bundleId-iOS-Ping': 'com.deftapps.ping', 'bundleId-iOS-Settings': 'com.apple.Preferences'}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"e1c137f1-20be-4859-b344-c9bd728874c2\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3a78242e50>)\n\n    @pytest.mark.twog\n    @pytest.mark.wpa\n    def test_AccessPointConnection_2g_WPA(self, request, get_AccessPointConn_data, setup_perfectoMobile_iOS):\n    \n        profile_data = setup_params_general[\"ssid_modes\"][\"wpa\"][0]\n        ssidName = profile_data[\"ssid_name\"]\n        ssidPassword = profile_data[\"security_key\"]\n        print (\"SSID_NAME: \" + ssidName)\n        print (\"SSID_PASS: \" + ssidPassword)\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_AccessPointConn_data\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, ssidName, ssidPassword, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/AccessPointConnection/test_AccessPointConnection.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_AccessPointConnection_2g_WPA[setup_profiles0]>>\nWifiNameSSID = 'ssid_wpa_2g', WifiPass = 'something'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"e1c137f1-20be-4859-b344-c9bd728874c2\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3a78242e50>)\nconnData = {'bundleId-iOS-Ping': 'com.deftapps.ping', 'bundleId-iOS-Settings': 'com.apple.Preferences'}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1627006762774,
      "stop" : 1627006762861,
      "duration" : 87
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1627006760683,
      "stop" : 1627006762555,
      "duration" : 1872
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a2146fba5ff11228",
      "name" : "added openwrtctl.py to :",
      "source" : "a2146fba5ff11228.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "40870dacfcd80a4d",
      "name" : "APNOS LIbrary: ",
      "source" : "40870dacfcd80a4d.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "95742b82d1d10538",
      "name" : "openwrt_ctl Setup",
      "source" : "95742b82d1d10538.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_AccessPointConn_data",
    "time" : {
      "start" : 1627007160839,
      "stop" : 1627007160839,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1627006762862,
      "stop" : 1627006762862,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627006762863,
      "stop" : 1627006814009,
      "duration" : 51146
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4a9c6d008db785c4",
      "name" : "RF Profile Created : wifi5",
      "source" : "4a9c6d008db785c4.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "fc364b7f4022205a",
      "name" : "SSID Profile Created",
      "source" : "fc364b7f4022205a.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "802dec1fbb8880d4",
      "name" : "SSID Profile Created",
      "source" : "802dec1fbb8880d4.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "bdd3dd34a2ed61bc",
      "name" : "SSID Profile Created",
      "source" : "bdd3dd34a2ed61bc.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "e4cee475bb6be18d",
      "name" : "SSID Profile Created",
      "source" : "e4cee475bb6be18d.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "2c34331f6946ecb6",
      "name" : "Equipment AP Profile Created",
      "source" : "2c34331f6946ecb6.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "4900877cbe60e3c9",
      "name" : "APNOS LIbrary: ",
      "source" : "4900877cbe60e3c9.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "d13a840ccaf908bd",
      "name" : "openwrt_ctl Setup",
      "source" : "d13a840ccaf908bd.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "f9c5c61796136c34",
      "name" : "vif config Output Msg: ",
      "source" : "f9c5c61796136c34.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "ba0dbaca74bebd50",
      "name" : "vif config Err Msg: ",
      "source" : "ba0dbaca74bebd50.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4333791d2b49ce7c",
      "name" : "get_vif_config_ssids ",
      "source" : "4333791d2b49ce7c.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "e2c388551819de7a",
      "name" : "vif config Output Msg: ",
      "source" : "e2c388551819de7a.attach",
      "type" : "text/plain",
      "size" : 7596
    }, {
      "uid" : "c3cd2404be78171e",
      "name" : "vif config Err Msg: ",
      "source" : "c3cd2404be78171e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "65d07d69d09f59c2",
      "name" : "get_vif_config_ssids ",
      "source" : "65d07d69d09f59c2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "359b5fa2b10037ec",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "359b5fa2b10037ec.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "e1b839b9ef5ef9d3",
      "name" : "APNOS LIbrary: ",
      "source" : "e1b839b9ef5ef9d3.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "c2aa1bac54375b0e",
      "name" : "openwrt_ctl Setup",
      "source" : "c2aa1bac54375b0e.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "4467d3cec9afb125",
      "name" : "vif state Output Msg: ",
      "source" : "4467d3cec9afb125.attach",
      "type" : "text/plain",
      "size" : 3858
    }, {
      "uid" : "b09d96c6d69362c8",
      "name" : "vif state Err Msg: ",
      "source" : "b09d96c6d69362c8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "744f73cf715b12de",
      "name" : "get_vif_state_ssids ",
      "source" : "744f73cf715b12de.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "f559a2aeafd251fd",
      "name" : "vif config Output Msg: ",
      "source" : "f559a2aeafd251fd.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "4ac8423e882cfbd5",
      "name" : "vif config Err Msg: ",
      "source" : "4ac8423e882cfbd5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2717a0b5a8070e70",
      "name" : "get_vif_config_ssids ",
      "source" : "2717a0b5a8070e70.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "977fb420cc592cbc",
      "name" : "vif state Output Msg: ",
      "source" : "977fb420cc592cbc.attach",
      "type" : "text/plain",
      "size" : 7395
    }, {
      "uid" : "2f22782230572e1e",
      "name" : "vif state Err Msg: ",
      "source" : "2f22782230572e1e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "96b4f79855c409c9",
      "name" : "get_vif_state_ssids ",
      "source" : "96b4f79855c409c9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ca4dc56083349f43",
      "name" : "vif config Output Msg: ",
      "source" : "ca4dc56083349f43.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "f818e99e87d691c4",
      "name" : "vif config Err Msg: ",
      "source" : "f818e99e87d691c4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5046eb7b3996ef99",
      "name" : "get_vif_config_ssids ",
      "source" : "5046eb7b3996ef99.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "fc1c3cbae5ac3c33",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "fc1c3cbae5ac3c33.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 30,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1627006760682,
      "stop" : 1627006760683,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2828e1f943abc03c",
      "name" : "Testbed Selected: ",
      "source" : "2828e1f943abc03c.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1627007160839,
      "stop" : 1627007192048,
      "duration" : 31209
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1627006762555,
      "stop" : 1627006762773,
      "duration" : 218
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "21cef773a4627983",
      "name" : "Controller Instantiated: ",
      "source" : "21cef773a4627983.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1627006762773,
      "stop" : 1627006762774,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b165adbd7e82b7a7",
      "name" : "VLAN Created: ",
      "source" : "b165adbd7e82b7a7.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1627006760683,
      "stop" : 1627006760683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1627006762863,
      "stop" : 1627006762863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "412b8879dbdf83c8",
      "name" : "Radius server Info: ",
      "source" : "412b8879dbdf83c8.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1627006762862,
      "stop" : 1627006762863,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5b3c31d495a5daae",
      "name" : "Test Cases Requires: ",
      "source" : "5b3c31d495a5daae.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1627006760682,
      "stop" : 1627006760682,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2b81185dab0052b8",
      "name" : "Testbed Selected : ",
      "source" : "2b81185dab0052b8.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1627006762862,
      "stop" : 1627006762862,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1627015508051,
      "stop" : 1627015508051,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1627015508059,
      "stop" : 1627015508059,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_AccessPointConn_data::0",
    "time" : {
      "start" : 1627007276462,
      "stop" : 1627007276462,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1627015508049,
      "stop" : 1627015508049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627007276463,
      "stop" : 1627007276463,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627007276463,
      "stop" : 1627007301863,
      "duration" : 25400
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "87c134c5a6fc665a",
      "name" : "Tear Down in Profiles ",
      "source" : "87c134c5a6fc665a.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1627015508069,
      "stop" : 1627015508069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1627007238232,
      "stop" : 1627007238232,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1627007238232,
      "stop" : 1627007276462,
      "duration" : 38230
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1627015508056,
      "stop" : 1627015508056,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1627015508056,
      "stop" : 1627015508057,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1f0ceed40a2d4413",
      "name" : "Controller Teardown: ",
      "source" : "1f0ceed40a2d4413.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1627015508053,
      "stop" : 1627015508053,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1627015508063,
      "stop" : 1627015508063,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1627015508042,
      "stop" : 1627015508042,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1627015508044,
      "stop" : 1627015508044,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1627015508075,
      "stop" : 1627015508075,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1627015508047,
      "stop" : 1627015508047,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "NAT MODE CLIENT CONNECTIVITY"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "AccessPassPointConnectivety"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "wpa"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.AccessPointConnection"
  }, {
    "name" : "suite",
    "value" : "test_AccessPointConnection"
  }, {
    "name" : "subSuite",
    "value" : "TestAccessPointConnectivety"
  }, {
    "name" : "host",
    "value" : "interop-ci-77-ios-7s2th"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.AccessPointConnection.test_AccessPointConnection"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'NAT', 'ssid_modes': {'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-1-NAT', 'mode': 'NAT', 'vlan': 1}]}, 'rf': {}, 'radius': False}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 8,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 21
      },
      "items" : [ {
        "uid" : "dc484e9973cb7324",
        "status" : "passed",
        "time" : {
          "start" : 1626834243049,
          "stop" : 1626834334651,
          "duration" : 91602
        }
      }, {
        "uid" : "53c310f91d309f1a",
        "status" : "passed",
        "time" : {
          "start" : 1626742915461,
          "stop" : 1626743007478,
          "duration" : 92017
        }
      }, {
        "uid" : "3ecb6099e2319e7a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626661354059,
          "stop" : 1626661400686,
          "duration" : 46627
        }
      }, {
        "uid" : "605012489047a89a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626575011553,
          "stop" : 1626575057836,
          "duration" : 46283
        }
      }, {
        "uid" : "43526b83662aec40",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626486620182,
          "stop" : 1626486666974,
          "duration" : 46792
        }
      }, {
        "uid" : "724f3df8bf62331c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626402394378,
          "stop" : 1626402441144,
          "duration" : 46766
        }
      }, {
        "uid" : "53e18242271728ff",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308730775,
          "stop" : 1626308730775,
          "duration" : 0
        }
      }, {
        "uid" : "fe62fba408fa4cc",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1625795998820,
          "stop" : 1625796045623,
          "duration" : 46803
        }
      }, {
        "uid" : "171f13f88960566c",
        "status" : "passed",
        "time" : {
          "start" : 1625738284469,
          "stop" : 1625738390721,
          "duration" : 106252
        }
      }, {
        "uid" : "43b76e33fe389695",
        "status" : "passed",
        "time" : {
          "start" : 1625623408105,
          "stop" : 1625623515302,
          "duration" : 107197
        }
      }, {
        "uid" : "de02ccb4331efb8b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1625537218165,
          "stop" : 1625537264531,
          "duration" : 46366
        }
      }, {
        "uid" : "c49c48e5ff165861",
        "status" : "passed",
        "time" : {
          "start" : 1625450336231,
          "stop" : 1625450442820,
          "duration" : 106589
        }
      }, {
        "uid" : "bb655c9a92629244",
        "status" : "passed",
        "time" : {
          "start" : 1625364164782,
          "stop" : 1625364271000,
          "duration" : 106218
        }
      }, {
        "uid" : "cc2380bdb8969d85",
        "status" : "passed",
        "time" : {
          "start" : 1625277708068,
          "stop" : 1625277814099,
          "duration" : 106031
        }
      }, {
        "uid" : "12a40c2df15eca13",
        "status" : "passed",
        "time" : {
          "start" : 1625191543315,
          "stop" : 1625191650418,
          "duration" : 107103
        }
      }, {
        "uid" : "7c2d47c90f005f18",
        "status" : "passed",
        "time" : {
          "start" : 1625103770997,
          "stop" : 1625103877969,
          "duration" : 106972
        }
      }, {
        "uid" : "19b714ed3d2df3e3",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1625019078243,
          "stop" : 1625019125147,
          "duration" : 46904
        }
      }, {
        "uid" : "39fa3f188b179a14",
        "status" : "passed",
        "time" : {
          "start" : 1624984881958,
          "stop" : 1624984992340,
          "duration" : 110382
        }
      }, {
        "uid" : "486a39b01f006235",
        "status" : "passed",
        "time" : {
          "start" : 1624966416769,
          "stop" : 1624966524275,
          "duration" : 107506
        }
      }, {
        "uid" : "fde301d8efdfd095",
        "status" : "passed",
        "time" : {
          "start" : 1624954865171,
          "stop" : 1624954973072,
          "duration" : 107901
        }
      } ]
    },
    "tags" : [ "@pytest.mark.usefixtures('setup_profiles')", "interop_ios", "interop", "sanity", "wpa", "AccessPassPointConnectivety", "ios", "twog" ]
  },
  "source" : "b37d78ac0b4ca79a.json",
  "parameterValues" : [ "{'mode': 'NAT', 'ssid_modes': {'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-1-NAT', 'mode': 'NAT', 'vlan': 1}]}, 'rf': {}, 'radius': False}" ]
}
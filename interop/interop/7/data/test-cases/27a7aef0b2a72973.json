{
  "uid" : "27a7aef0b2a72973",
  "name" : "test_ToogleWifiMode_5g_WPA[setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.WifiMode.test_ToggleWifiMode.TestToggleWifiMode#test_ToogleWifiMode_5g_WPA",
  "historyId" : "68ce5d2b2f61762bdff5b1dfe02363b6",
  "time" : {
    "start" : 1624445809291,
    "stop" : 1624445867940,
    "duration" : 58649
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_ToogleWifiMode_5g_WPA[setup_profiles0]>>\nWifiName = 'ssid_wpa_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"3d06845e-86fe-410f-8c6a-040c557526e2\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5cc435ba60>)\nconnData = {'appPackage-android': 'com.android.settings', 'bundleId-iOS-Settings': 'com.apple.Preferences', 'platformName-android': 'Android'}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n           # print(\"Verifying Connected Wifi Connection\")\n            wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            wifiXpath2.click()\n    \n            report.step_start(\"Verifying Connected Wifi Connection\")\n>           element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n\n../libs/perfecto_libs/iOS_lib.py:228: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"3d06845e-86fe-410f-8c6a-040c557526e2\")>\nxpath = \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\"\n\n    def find_element_by_xpath(self, xpath):\n        \"\"\"\n        Finds an element by xpath.\n    \n        :Args:\n         - xpath - The xpath locator of the element to find.\n    \n        :Returns:\n         - WebElement - the element if it was found\n    \n        :Raises:\n         - NoSuchElementException - if the element wasn't found\n    \n        :Usage:\n            element = driver.find_element_by_xpath('//div/td[1]')\n        \"\"\"\n>       return self.find_element(by=By.XPATH, value=xpath)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"3d06845e-86fe-410f-8c6a-040c557526e2\")>\nby = 'xpath'\nvalue = \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\"\n\n    def find_element(self, by: str = By.ID, value: Union[str, Dict] = None) -> MobileWebElement:\n        \"\"\"'Private' method used by the find_element_by_* methods.\n    \n        Override for Appium\n    \n        Usage:\n            Use the corresponding find_element_by_* instead of this.\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # TODO: If we need, we should enable below converter for Web context\n        # if self.w3c:\n        #     if by == By.ID:\n        #         by = By.CSS_SELECTOR\n        #         value = '[id=\"%s\"]' % value\n        #     elif by == By.TAG_NAME:\n        #         by = By.CSS_SELECTOR\n        #     elif by == By.CLASS_NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = \".%s\" % value\n        #     elif by == By.NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/webdriver.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"3d06845e-86fe-410f-8c6a-040c557526e2\")>\ndriver_command = 'findElement'\nparams = {'sessionId': '3d06845e-86fe-410f-8c6a-040c557526e2', 'using': 'xpath', 'value': \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\"}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f5ccc0670d0>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"d7c38977-579c-4416-9604-9bd150f74d50\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n            else:\n>               raise wde\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f5ccc0670d0>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"d7c38977-579c-4416-9604-9bd150f74d50\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f5ccc0670d0>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"d7c38977-579c-4416-9604-9bd150f74d50\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nE       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nE       Driver info: io.appium.java_client.ios.IOSDriver\nE       Capabilities {accessToken: eyJhbGciOiJSUzI1NiIsInR5cCI..., assert_javascript_enabled: true, authenticationTenant: operator, autoAcceptAlerts: true, browserName: , bundleId: com.apple.mobilesafari, cloud: tip.perfectomobile.com, databaseEnabled: false, deviceName: 00008020-000359960204402E, deviceSessionId: rajp@perfectomobile.com_Rem..., entityType: remote_web_driver, executionId: rajp@perfectomobile.com_Rem..., executionTenantId: tip-perfectomobile-com, host: tip.perfectomobile.com, javascriptEnabled: true, liveStreamEnabled: false, locationContextEnabled: false, model: iPhone-XR, networkConnectionEnabled: false, password: , platform: MAC, platformName: ios, platformVersion: 14.0.1, reportPdfUrl: https://tip.app.perfectomob..., scriptName: RemoteWebDriver, securityToken: , serverConnector: , serverHost: X.X.X.X:11601, simpleIsVisibleCheck: true, stopUrl: https://tip.perfectomobile...., takesScreenshot: true, testGridReportUrl: https://tip.app.perfectomob..., udid: 00008020-000359960204402E, useAppiumForHybrid: false, useAppiumForWeb: false, user: , webStorageEnabled: false, xcuitestFindOptimizations: true}\nE       Session ID: 3bb5dda4-242b-40f1-9bb0-70465a5efa05\nE       *** Element info: {Using=xpath, value=//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]}\nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor558.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <e2e.interOp.iOS.WifiMode.test_ToggleWifiMode.TestToggleWifiMode object at 0x7f5ccc127d00>\nrequest = <FixtureRequest for <Function test_ToogleWifiMode_5g_WPA[setup_profiles0]>>\nget_ToggleWifiMode_data = {'appPackage-android': 'com.android.settings', 'bundleId-iOS-Settings': 'com.apple.Preferences', 'platformName-android': 'Android'}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"3d06845e-86fe-410f-8c6a-040c557526e2\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5cc435ba60>)\n\n    @pytest.mark.fiveg\n    @pytest.mark.wpa\n    def test_ToogleWifiMode_5g_WPA(self, request, get_ToggleWifiMode_data, setup_perfectoMobile_iOS):\n    \n        profile_data = setup_params_general[\"ssid_modes\"][\"wpa\"][1]\n        ssidName = profile_data[\"ssid_name\"]\n        ssidPassword = profile_data[\"security_key\"]\n        print (\"SSID_NAME: \" + ssidName)\n        print (\"SSID_PASS: \" + ssidPassword)\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_ToggleWifiMode_data\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, ssidName, ssidPassword, setup_perfectoMobile_iOS, connData)\n    \n        #Toggle WifiMode\n        Toggle_WifiMode_iOS(request, setup_perfectoMobile_iOS, connData)\n    \n        #Verify AP After AirplaneMode\n>       value = verify_APconnMobileDevice_iOS(request, ssidName, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/WifiMode/test_ToggleWifiMode.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_ToogleWifiMode_5g_WPA[setup_profiles0]>>\nWifiName = 'ssid_wpa_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"3d06845e-86fe-410f-8c6a-040c557526e2\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5cc435ba60>)\nconnData = {'appPackage-android': 'com.android.settings', 'bundleId-iOS-Settings': 'com.apple.Preferences', 'platformName-android': 'Android'}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n           # print(\"Verifying Connected Wifi Connection\")\n            wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            wifiXpath2.click()\n    \n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n    \n        except Exception as e:\n            print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            #allure.attach(name=\"Raj\", body=\"hello world\")\n>           assert False\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:235: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624440689710,
      "stop" : 1624440689818,
      "duration" : 108
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "32245142b7e64e4f",
      "name" : "Controller Instantiated: ",
      "source" : "32245142b7e64e4f.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624440689818,
      "stop" : 1624440689818,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4dbce3ab1001f800",
      "name" : "VLAN Created: ",
      "source" : "4dbce3ab1001f800.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1624445780609,
      "stop" : 1624445809290,
      "duration" : 28681
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624440690030,
      "stop" : 1624440690030,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624440688192,
      "stop" : 1624440688192,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1624440690030,
      "stop" : 1624440690031,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cfb7e8ffb9cbe722",
      "name" : "Radius server Info: ",
      "source" : "cfb7e8ffb9cbe722.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624440688192,
      "stop" : 1624440689710,
      "duration" : 1518
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "910010e33e2379aa",
      "name" : "added openwrtctl.py to :",
      "source" : "910010e33e2379aa.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "1c7138494bc6b4c5",
      "name" : "APNOS LIbrary: ",
      "source" : "1c7138494bc6b4c5.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "130f5338dfc400db",
      "name" : "openwrt_ctl Setup",
      "source" : "130f5338dfc400db.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624440690030,
      "stop" : 1624440690030,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624440689819,
      "stop" : 1624440690029,
      "duration" : 210
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624440688191,
      "stop" : 1624440688192,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6b6e041093e4cad6",
      "name" : "Testbed Selected: ",
      "source" : "6b6e041093e4cad6.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624440688191,
      "stop" : 1624440688191,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8cfc59d223a921ea",
      "name" : "Testbed Selected : ",
      "source" : "8cfc59d223a921ea.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624445492182,
      "stop" : 1624445535548,
      "duration" : 43366
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5ae8f6fbdf877782",
      "name" : "RF Profile Created : wifi5",
      "source" : "5ae8f6fbdf877782.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "4be387121c0efd5",
      "name" : "SSID Profile Created",
      "source" : "4be387121c0efd5.attach",
      "type" : "text/plain",
      "size" : 2793
    }, {
      "uid" : "3ec1f5bf8ea02816",
      "name" : "SSID Profile Created",
      "source" : "3ec1f5bf8ea02816.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "45a6e670f9da2c60",
      "name" : "SSID Profile Created",
      "source" : "45a6e670f9da2c60.attach",
      "type" : "text/plain",
      "size" : 2809
    }, {
      "uid" : "272f4e95fc7f040",
      "name" : "SSID Profile Created",
      "source" : "272f4e95fc7f040.attach",
      "type" : "text/plain",
      "size" : 2827
    }, {
      "uid" : "ecf4ceb4b7d4a18f",
      "name" : "Equipment AP Profile Created",
      "source" : "ecf4ceb4b7d4a18f.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "98dc13e8dec7ea54",
      "name" : "APNOS LIbrary: ",
      "source" : "98dc13e8dec7ea54.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "98d685ef9fbae175",
      "name" : "openwrt_ctl Setup",
      "source" : "98d685ef9fbae175.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "dd4109a9dc38b8ae",
      "name" : "vif config Output Msg: ",
      "source" : "dd4109a9dc38b8ae.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "be1d2a9b38c03d85",
      "name" : "vif config Err Msg: ",
      "source" : "be1d2a9b38c03d85.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "86a04b8b5cf5f60f",
      "name" : "get_vif_config_ssids ",
      "source" : "86a04b8b5cf5f60f.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "29710899d89b489d",
      "name" : "vif config Output Msg: ",
      "source" : "29710899d89b489d.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "96211d7ffbce6010",
      "name" : "vif config Err Msg: ",
      "source" : "96211d7ffbce6010.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7f07c95354e04715",
      "name" : "get_vif_config_ssids ",
      "source" : "7f07c95354e04715.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "bc621bb1594e1488",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "bc621bb1594e1488.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "3c214ae2e99803b2",
      "name" : "APNOS LIbrary: ",
      "source" : "3c214ae2e99803b2.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "af18f60240381a65",
      "name" : "openwrt_ctl Setup",
      "source" : "af18f60240381a65.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "39ba2da3d4662be7",
      "name" : "vif state Output Msg: ",
      "source" : "39ba2da3d4662be7.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "d7aba4130c85cb35",
      "name" : "vif state Err Msg: ",
      "source" : "d7aba4130c85cb35.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8bf65adf957c8118",
      "name" : "get_vif_state_ssids ",
      "source" : "8bf65adf957c8118.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d2078bae9d5276c4",
      "name" : "vif config Output Msg: ",
      "source" : "d2078bae9d5276c4.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "b2ebd096bceec311",
      "name" : "vif config Err Msg: ",
      "source" : "b2ebd096bceec311.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2b3c3fc8e21f934a",
      "name" : "get_vif_config_ssids ",
      "source" : "2b3c3fc8e21f934a.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5284681216c9ea87",
      "name" : "vif state Output Msg: ",
      "source" : "5284681216c9ea87.attach",
      "type" : "text/plain",
      "size" : 7748
    }, {
      "uid" : "2686a8ce89210700",
      "name" : "vif state Err Msg: ",
      "source" : "2686a8ce89210700.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3f5fcb29fbb5e486",
      "name" : "get_vif_state_ssids ",
      "source" : "3f5fcb29fbb5e486.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e72db834e58a1a52",
      "name" : "vif config Output Msg: ",
      "source" : "e72db834e58a1a52.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "bef6777fa2373604",
      "name" : "vif config Err Msg: ",
      "source" : "bef6777fa2373604.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3728242215415e39",
      "name" : "get_vif_config_ssids ",
      "source" : "3728242215415e39.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "d59fd04a98ba1e89",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "d59fd04a98ba1e89.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 30,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624440690030,
      "stop" : 1624440690030,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bfb70df885db980a",
      "name" : "Test Cases Requires: ",
      "source" : "bfb70df885db980a.attach",
      "type" : "text/plain",
      "size" : 344
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_ToggleWifiMode_data",
    "time" : {
      "start" : 1624445780608,
      "stop" : 1624445780608,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624446176945,
      "stop" : 1624446176945,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624446176945,
      "stop" : 1624446176946,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2644ac1b62ed301f",
      "name" : "Controller Teardown: ",
      "source" : "2644ac1b62ed301f.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624446176943,
      "stop" : 1624446176943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1624445868057,
      "stop" : 1624445868057,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1624445868057,
      "stop" : 1624445906372,
      "duration" : 38315
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624446176940,
      "stop" : 1624446176940,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624446176949,
      "stop" : 1624446176949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624446176937,
      "stop" : 1624446176937,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624446176947,
      "stop" : 1624446176947,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624446176941,
      "stop" : 1624446176941,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624446176942,
      "stop" : 1624446176942,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624446176952,
      "stop" : 1624446176952,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624446176955,
      "stop" : 1624446176955,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624446021903,
      "stop" : 1624446021904,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624446021904,
      "stop" : 1624446045921,
      "duration" : 24017
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "638fd6b790843088",
      "name" : "Tear Down in Profiles ",
      "source" : "638fd6b790843088.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624446176938,
      "stop" : 1624446176938,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_ToggleWifiMode_data::0",
    "time" : {
      "start" : 1624445906372,
      "stop" : 1624445906372,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "NAT MODE CLIENT CONNECTIVITY"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "ToggleWifiMode"
  }, {
    "name" : "tag",
    "value" : "wpa"
  }, {
    "name" : "tag",
    "value" : "interop_iOS"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.WifiMode"
  }, {
    "name" : "suite",
    "value" : "test_ToggleWifiMode"
  }, {
    "name" : "subSuite",
    "value" : "TestToggleWifiMode"
  }, {
    "name" : "host",
    "value" : "interop-ci-7-d2xgc"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.WifiMode.test_ToggleWifiMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'NAT', 'ssid_modes': {'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-1-NAT', 'mode': 'NAT', 'vlan': 1}]}, 'rf': {}, 'radius': False}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('setup_profiles')", "ToggleWifiMode", "interop_iOS", "wpa", "fiveg" ]
  },
  "source" : "27a7aef0b2a72973.json",
  "parameterValues" : [ "{'mode': 'NAT', 'ssid_modes': {'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'interop-SSID-wpa2_personal-1-NAT', 'mode': 'NAT', 'vlan': 1}]}, 'rf': {}, 'radius': False}" ]
}
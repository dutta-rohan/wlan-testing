{
  "uid" : "be04b48d2c605de0",
  "name" : "test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge#test_OpenRoaming_2g_WPA2_EAP_BRIDGE",
  "historyId" : "f10713e83fde7dc0a8c85549caec105c",
  "time" : {
    "start" : 1625451385384,
    "stop" : 1625451607167,
    "duration" : 221783
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7ff7c43d9f40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1703.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7ff7dff48430>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9867, 9868, 9869, 9870], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:265: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7ff7dff48430>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9867, 9868, 9869, 9870], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1625444689489,
      "stop" : 1625444689489,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5c7f97f85c4b1e75",
      "name" : "VLAN Created: ",
      "source" : "5c7f97f85c4b1e75.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1625444687524,
      "stop" : 1625444687524,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2d88754e96e6f164",
      "name" : "Testbed Selected : ",
      "source" : "2d88754e96e6f164.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1625451356562,
      "stop" : 1625451385384,
      "duration" : 28822
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1625451126513,
      "stop" : 1625451126513,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e7220d77795868ac",
      "name" : "Passpoint Provider Info: ",
      "source" : "e7220d77795868ac.attach",
      "type" : "text/plain",
      "size" : 422
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1625444689603,
      "stop" : 1625444689603,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1625444689059,
      "stop" : 1625444689489,
      "duration" : 430
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "20e0577faa5fd65d",
      "name" : "Controller Instantiated: ",
      "source" : "20e0577faa5fd65d.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625451126514,
      "stop" : 1625451139675,
      "duration" : 13161
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c8e63b60c6690d7",
      "name" : "RF Profile Created : wifi5",
      "source" : "c8e63b60c6690d7.attach",
      "type" : "text/plain",
      "size" : 12273
    }, {
      "uid" : "1625b14b21d7afd9",
      "name" : "Radius Profile Created",
      "source" : "1625b14b21d7afd9.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "4a42158af7973ebd",
      "name" : "SSID Profile Created",
      "source" : "4a42158af7973ebd.attach",
      "type" : "text/plain",
      "size" : 2821
    }, {
      "uid" : "fcb1704aedc52dc8",
      "name" : "SSID Profile Created",
      "source" : "fcb1704aedc52dc8.attach",
      "type" : "text/plain",
      "size" : 2835
    }, {
      "uid" : "1c8327f4978be47f",
      "name" : "SSID Profile Created",
      "source" : "1c8327f4978be47f.attach",
      "type" : "text/plain",
      "size" : 2831
    }, {
      "uid" : "875c22605a814059",
      "name" : "SSID Profile Created",
      "source" : "875c22605a814059.attach",
      "type" : "text/plain",
      "size" : 2849
    }, {
      "uid" : "5d0a4d628a59eb48",
      "name" : "SSID Profile Created",
      "source" : "5d0a4d628a59eb48.attach",
      "type" : "text/plain",
      "size" : 2845
    }, {
      "uid" : "89864a96cef71928",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "89864a96cef71928.attach",
      "type" : "text/plain",
      "size" : 1526
    }, {
      "uid" : "11425ea9c10a1eb3",
      "name" : "Passpoint Operator Profile Created",
      "source" : "11425ea9c10a1eb3.attach",
      "type" : "text/plain",
      "size" : 1666
    }, {
      "uid" : "c27063e5c579e1bc",
      "name" : "Passpoint Venue Profile Created",
      "source" : "c27063e5c579e1bc.attach",
      "type" : "text/plain",
      "size" : 1487
    }, {
      "uid" : "1ef37066f6fbe1de",
      "name" : "Passpoint Profile Created",
      "source" : "1ef37066f6fbe1de.attach",
      "type" : "text/plain",
      "size" : 2616
    }, {
      "uid" : "a0c05023bb2155f3",
      "name" : "Updating SSID profile",
      "source" : "a0c05023bb2155f3.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "ed1281fc3319080b",
      "name" : "Updating SSID profile",
      "source" : "ed1281fc3319080b.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "5c138e61d29da624",
      "name" : "Updating SSID profile",
      "source" : "5c138e61d29da624.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "868f9f9d67a2a490",
      "name" : "Updating SSID profile",
      "source" : "868f9f9d67a2a490.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "7e0f1c20121e783d",
      "name" : "Equipment AP Profile Created",
      "source" : "7e0f1c20121e783d.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625455581533,
      "stop" : 1625455663868,
      "duration" : 82335
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fcd5af4b758d7066",
      "name" : "RF Profile Created : wifi5",
      "source" : "fcd5af4b758d7066.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "5f31dceca641bb05",
      "name" : "SSID Profile Created",
      "source" : "5f31dceca641bb05.attach",
      "type" : "text/plain",
      "size" : 2794
    }, {
      "uid" : "43f43a499c236dd8",
      "name" : "SSID Profile Created",
      "source" : "43f43a499c236dd8.attach",
      "type" : "text/plain",
      "size" : 2812
    }, {
      "uid" : "1a46778a61cfb3d8",
      "name" : "SSID Profile Created",
      "source" : "1a46778a61cfb3d8.attach",
      "type" : "text/plain",
      "size" : 2810
    }, {
      "uid" : "4f78edd8c3525e07",
      "name" : "SSID Profile Created",
      "source" : "4f78edd8c3525e07.attach",
      "type" : "text/plain",
      "size" : 2828
    }, {
      "uid" : "40e50b55a08eb324",
      "name" : "Equipment AP Profile Created",
      "source" : "40e50b55a08eb324.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "1c2363a598a560",
      "name" : "APNOS LIbrary: ",
      "source" : "1c2363a598a560.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "c3a46149a5f65ffa",
      "name" : "openwrt_ctl Setup",
      "source" : "c3a46149a5f65ffa.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "ec5d21e4e3b84472",
      "name" : "vif config Output Msg: ",
      "source" : "ec5d21e4e3b84472.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "4b23a3a4f988e6be",
      "name" : "vif config Err Msg: ",
      "source" : "4b23a3a4f988e6be.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "752b5fdc15dfeab2",
      "name" : "get_vif_config_ssids ",
      "source" : "752b5fdc15dfeab2.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "aff92df96cfbdcb8",
      "name" : "vif config Output Msg: ",
      "source" : "aff92df96cfbdcb8.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "fbd0a403e3aa5426",
      "name" : "vif config Err Msg: ",
      "source" : "fbd0a403e3aa5426.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c959229440c22b00",
      "name" : "get_vif_config_ssids ",
      "source" : "c959229440c22b00.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b22e57135e4e9aec",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "b22e57135e4e9aec.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "6a51ed4f6d44bb29",
      "name" : "APNOS LIbrary: ",
      "source" : "6a51ed4f6d44bb29.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "8963f1e9b094233f",
      "name" : "openwrt_ctl Setup",
      "source" : "8963f1e9b094233f.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "26a52e1cfc18246e",
      "name" : "vif state Output Msg: ",
      "source" : "26a52e1cfc18246e.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "32b0819b835b00f",
      "name" : "vif state Err Msg: ",
      "source" : "32b0819b835b00f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8ba90b22ff8fa53",
      "name" : "get_vif_state_ssids ",
      "source" : "8ba90b22ff8fa53.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "994e5958f0ff625c",
      "name" : "vif config Output Msg: ",
      "source" : "994e5958f0ff625c.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "c3fd3ccf7a7abf38",
      "name" : "vif config Err Msg: ",
      "source" : "c3fd3ccf7a7abf38.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "79c5e8bdeeb0657c",
      "name" : "get_vif_config_ssids ",
      "source" : "79c5e8bdeeb0657c.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f98f8e752bc43df0",
      "name" : "vif state Output Msg: ",
      "source" : "f98f8e752bc43df0.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f3dd54758954cc3b",
      "name" : "vif state Err Msg: ",
      "source" : "f3dd54758954cc3b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "75fefaed42a645b3",
      "name" : "get_vif_state_ssids ",
      "source" : "75fefaed42a645b3.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "174b53ef8d99097c",
      "name" : "vif config Output Msg: ",
      "source" : "174b53ef8d99097c.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "9abf5c0eb939c091",
      "name" : "vif config Err Msg: ",
      "source" : "9abf5c0eb939c091.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "83c86990d5a3367f",
      "name" : "get_vif_config_ssids ",
      "source" : "83c86990d5a3367f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "9ffa06eef05791c6",
      "name" : "vif state Output Msg: ",
      "source" : "9ffa06eef05791c6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "87fe950501faa92e",
      "name" : "vif state Err Msg: ",
      "source" : "87fe950501faa92e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "30ffb6c487b14572",
      "name" : "get_vif_state_ssids ",
      "source" : "30ffb6c487b14572.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "470ca23f90416b05",
      "name" : "vif config Output Msg: ",
      "source" : "470ca23f90416b05.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "fbf6d522af5ee7e3",
      "name" : "vif config Err Msg: ",
      "source" : "fbf6d522af5ee7e3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "abb5c3f8436eba4f",
      "name" : "get_vif_config_ssids ",
      "source" : "abb5c3f8436eba4f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a1de41d656951272",
      "name" : "vif state Output Msg: ",
      "source" : "a1de41d656951272.attach",
      "type" : "text/plain",
      "size" : 4005
    }, {
      "uid" : "d0d22c6b029e4320",
      "name" : "vif state Err Msg: ",
      "source" : "d0d22c6b029e4320.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "eec70fe4ec705b8",
      "name" : "get_vif_state_ssids ",
      "source" : "eec70fe4ec705b8.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "1028f63987e19606",
      "name" : "vif config Output Msg: ",
      "source" : "1028f63987e19606.attach",
      "type" : "text/plain",
      "size" : 7339
    }, {
      "uid" : "176921e933c61953",
      "name" : "vif config Err Msg: ",
      "source" : "176921e933c61953.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "45d50b9b06acc254",
      "name" : "get_vif_config_ssids ",
      "source" : "45d50b9b06acc254.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5add2965d5b6bc7f",
      "name" : "vif state Output Msg: ",
      "source" : "5add2965d5b6bc7f.attach",
      "type" : "text/plain",
      "size" : 7623
    }, {
      "uid" : "5ecee269d7eefb2",
      "name" : "vif state Err Msg: ",
      "source" : "5ecee269d7eefb2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5ee450a9f4965879",
      "name" : "get_vif_state_ssids ",
      "source" : "5ee450a9f4965879.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "681897352c8379fc",
      "name" : "vif config Output Msg: ",
      "source" : "681897352c8379fc.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "e75781cb699c2a46",
      "name" : "vif config Err Msg: ",
      "source" : "e75781cb699c2a46.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "46534e1d615dc885",
      "name" : "get_vif_config_ssids ",
      "source" : "46534e1d615dc885.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "469bb91863bbd3c6",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "469bb91863bbd3c6.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 48,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1625451126513,
      "stop" : 1625451126513,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7e8fe4c9d9da489d",
      "name" : "Passpoint operator Info: ",
      "source" : "7e8fe4c9d9da489d.attach",
      "type" : "text/plain",
      "size" : 307
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1625451126512,
      "stop" : 1625451126512,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ce804ff685fc8b3",
      "name" : "Passpoint profile Info: ",
      "source" : "2ce804ff685fc8b3.attach",
      "type" : "text/plain",
      "size" : 1087
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625444689489,
      "stop" : 1625444689602,
      "duration" : 113
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1625451126514,
      "stop" : 1625451126514,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f880887e1fdccb6c",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "f880887e1fdccb6c.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1625451126513,
      "stop" : 1625451126513,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2f45608eb471f818",
      "name" : "Passpoint venue Info: ",
      "source" : "2f45608eb471f818.attach",
      "type" : "text/plain",
      "size" : 326
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1625444687525,
      "stop" : 1625444687525,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1625451126513,
      "stop" : 1625451126514,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ac61ddfe95d3b769",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "ac61ddfe95d3b769.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1625444689603,
      "stop" : 1625444689604,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6468ee471451f40d",
      "name" : "Test Cases Requires: ",
      "source" : "6468ee471451f40d.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1625444687525,
      "stop" : 1625444689058,
      "duration" : 1533
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d6852019053bc7ac",
      "name" : "added openwrtctl.py to :",
      "source" : "d6852019053bc7ac.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "bad60937e8a38be0",
      "name" : "APNOS LIbrary: ",
      "source" : "bad60937e8a38be0.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "4f3bb0e9aedc9669",
      "name" : "openwrt_ctl Setup",
      "source" : "4f3bb0e9aedc9669.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1625451139675,
      "stop" : 1625451356562,
      "duration" : 216887
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "544a0c14a6807f70",
      "name" : "Equipment AP Profile Updated",
      "source" : "544a0c14a6807f70.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "bb71e77ad43d0481",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "bb71e77ad43d0481.attach",
      "type" : "text/plain",
      "size" : 126
    }, {
      "uid" : "b3d348d084787a45",
      "name" : "APNOS LIbrary: ",
      "source" : "b3d348d084787a45.attach",
      "type" : "text/plain",
      "size" : 314
    }, {
      "uid" : "4b5cb2ca13adf3a",
      "name" : "openwrt_ctl Setup",
      "source" : "4b5cb2ca13adf3a.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "8ce927d4b304c0ec",
      "name" : "vif config Output Msg: ",
      "source" : "8ce927d4b304c0ec.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "6d67636f5231a862",
      "name" : "vif config Err Msg: ",
      "source" : "6d67636f5231a862.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bda983d4a97b3bbb",
      "name" : "get_vif_config_ssids ",
      "source" : "bda983d4a97b3bbb.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "2ecc75712103009e",
      "name" : "vif state Output Msg: ",
      "source" : "2ecc75712103009e.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "b990b2ea7d933051",
      "name" : "vif state Err Msg: ",
      "source" : "b990b2ea7d933051.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "da55059b3a72563b",
      "name" : "get_vif_state_ssids ",
      "source" : "da55059b3a72563b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "a3434a7283b00adf",
      "name" : "vif config Output Msg: ",
      "source" : "a3434a7283b00adf.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "174f6ff10644cdf",
      "name" : "vif config Err Msg: ",
      "source" : "174f6ff10644cdf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b7acfca3ab44aa05",
      "name" : "get_vif_config_ssids ",
      "source" : "b7acfca3ab44aa05.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "19394eeda2981b73",
      "name" : "vif state Output Msg: ",
      "source" : "19394eeda2981b73.attach",
      "type" : "text/plain",
      "size" : 4537
    }, {
      "uid" : "3e16fa0117028de9",
      "name" : "vif state Err Msg: ",
      "source" : "3e16fa0117028de9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "447f7ade750af0b9",
      "name" : "get_vif_state_ssids ",
      "source" : "447f7ade750af0b9.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "f053c85cb6bf6d5a",
      "name" : "vifC status on AP :: ",
      "source" : "f053c85cb6bf6d5a.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "85b828d3ab66150c",
      "name" : "vifS status on AP :: ",
      "source" : "85b828d3ab66150c.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 18,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1625444687524,
      "stop" : 1625444687525,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9e7a08f634ce3eb",
      "name" : "Testbed Selected: ",
      "source" : "9e7a08f634ce3eb.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1625451356562,
      "stop" : 1625451356562,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1625444689603,
      "stop" : 1625444689603,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7ff7c43d9f40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1703.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7ff7dff48430>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9867, 9868, 9869, 9870], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:265: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7ff7dff48430>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9867, 9868, 9869, 9870], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"b9f23d3a-8140-4650-bf72-4f519cf6f6b8\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7ff7c43d98b0>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bc1dc353836163d5",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "bc1dc353836163d5.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "9aed9078fafecf62",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "9aed9078fafecf62.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "ef663f78f0efd12f",
      "name" : "log",
      "source" : "ef663f78f0efd12f.txt",
      "type" : "text/plain",
      "size" : 659
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1625457620911,
      "stop" : 1625457620911,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1625457620927,
      "stop" : 1625457620927,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1625451607198,
      "stop" : 1625451607198,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1625451607198,
      "stop" : 1625451645570,
      "duration" : 38372
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1625457620933,
      "stop" : 1625457620933,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1625457620906,
      "stop" : 1625457620906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1625457620913,
      "stop" : 1625457620913,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1625457620913,
      "stop" : 1625457620914,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "276aae9a01b8f229",
      "name" : "Controller Teardown: ",
      "source" : "276aae9a01b8f229.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625452579533,
      "stop" : 1625452579533,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625452579533,
      "stop" : 1625452605134,
      "duration" : 25601
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1d92ad4ee567430b",
      "name" : "Tear Down in Profiles ",
      "source" : "1d92ad4ee567430b.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625456222037,
      "stop" : 1625456222037,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625456222037,
      "stop" : 1625456246396,
      "duration" : 24359
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "89718a938a9ccc7",
      "name" : "Tear Down in Profiles ",
      "source" : "89718a938a9ccc7.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1625457620932,
      "stop" : 1625457620932,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1625457620933,
      "stop" : 1625457620933,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625457620909,
      "stop" : 1625457620909,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1625457620930,
      "stop" : 1625457620930,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1625457620931,
      "stop" : 1625457620931,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1625457620918,
      "stop" : 1625457620918,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1625457620931,
      "stop" : 1625457620931,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1625457620904,
      "stop" : 1625457620904,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1625457620915,
      "stop" : 1625457620915,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1625451645571,
      "stop" : 1625451645571,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1625457620923,
      "stop" : 1625457620923,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1625451645570,
      "stop" : 1625451645570,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1625457620908,
      "stop" : 1625457620908,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridge"
  }, {
    "name" : "host",
    "value" : "interop-ci-40-k7r5n"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 8,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "532e1367b60bdb4",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625365296404,
          "stop" : 1625365576776,
          "duration" : 280372
        }
      }, {
        "uid" : "5b4b807fd4dde110",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625278829711,
          "stop" : 1625279113959,
          "duration" : 284248
        }
      }, {
        "uid" : "ecf8edea0e66b7c7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625192633227,
          "stop" : 1625192633228,
          "duration" : 1
        }
      }, {
        "uid" : "c9997836d758609c",
        "status" : "broken",
        "statusDetails" : "paramiko.ssh_exception.NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 10.28.3.102",
        "time" : {
          "start" : 1625104637420,
          "stop" : 1625104637420,
          "duration" : 0
        }
      }, {
        "uid" : "6d7a934fa4d6891b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625020339575,
          "stop" : 1625020339576,
          "duration" : 1
        }
      }, {
        "uid" : "767438bae5e583de",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624985957053,
          "stop" : 1624986245454,
          "duration" : 288401
        }
      }, {
        "uid" : "68a71c95dd1c2e71",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624967596862,
          "stop" : 1624967820491,
          "duration" : 223629
        }
      }, {
        "uid" : "7c4bdca6fa9366ed",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624955969689,
          "stop" : 1624956177490,
          "duration" : 207801
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_eap", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "ios", "twog" ]
  },
  "source" : "be04b48d2c605de0.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}
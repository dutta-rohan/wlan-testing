{
  "uid" : "1c7aaf6796f2dbf9",
  "name" : "test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge#test_OpenRoaming_2g_WPA2_EAP_BRIDGE",
  "historyId" : "f10713e83fde7dc0a8c85549caec105c",
  "time" : {
    "start" : 1628045972819,
    "stop" : 1628046240564,
    "duration" : 267745
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n            assert reportFlag\n    \n            #print(\"Verifying if SSID Wifi Shows up\")\n            #report.step_start(\"Verifying if SSID Wifi Shows up\")\n            #wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            #print(\"SSID is Present: \" + WifiName)\n            #report.step_start(\"SSID is Present: \" + WifiName)\n    \n        try:\n            print(\"Waiting for Auto Connection to: \" + WifiName)\n            report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n            selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n>           passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n\n../libs/perfecto_libs/iOS_lib.py:251: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f7097b94130>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor608.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n            assert reportFlag\n    \n            #print(\"Verifying if SSID Wifi Shows up\")\n            #report.step_start(\"Verifying if SSID Wifi Shows up\")\n            #wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            #print(\"SSID is Present: \" + WifiName)\n            #report.step_start(\"SSID is Present: \" + WifiName)\n    \n        try:\n            print(\"Waiting for Auto Connection to: \" + WifiName)\n            report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n            selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n            passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n        except Exception as e:\n            #Toggle Wifi Mode\n            Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n            time.sleep(15)\n    \n            try:\n                print(\"Waiting for Auto Connection After Toggling Wifi: \" + WifiName)\n                selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n>               passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n\n../libs/perfecto_libs/iOS_lib.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f709798c7c0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor608.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7f7097b75250>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [22721, 22722, 22723, 22724], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n            assert reportFlag\n    \n            #print(\"Verifying if SSID Wifi Shows up\")\n            #report.step_start(\"Verifying if SSID Wifi Shows up\")\n            #wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            #print(\"SSID is Present: \" + WifiName)\n            #report.step_start(\"SSID is Present: \" + WifiName)\n    \n        try:\n            print(\"Waiting for Auto Connection to: \" + WifiName)\n            report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n            selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n            passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n        except Exception as e:\n            #Toggle Wifi Mode\n            Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n            time.sleep(15)\n    \n            try:\n                print(\"Waiting for Auto Connection After Toggling Wifi: \" + WifiName)\n                selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n            except Exception as e:\n                print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                report.step_start(\"SSID Not Connected: \" + WifiName)\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                reportFlag = False\n>               assert reportFlag\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:266: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7f7097b75250>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [22721, 22722, 22723, 22724], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1628045944410,
      "stop" : 1628045944410,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1628043966627,
      "stop" : 1628043966627,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c8468b0583194cff",
      "name" : "VLAN Created: ",
      "source" : "c8468b0583194cff.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1628043965012,
      "stop" : 1628043965012,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f21b7921fd6d23ac",
      "name" : "Testbed Selected: ",
      "source" : "f21b7921fd6d23ac.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1628045660531,
      "stop" : 1628045660531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cd6427a8b3d2e042",
      "name" : "Passpoint profile Info: ",
      "source" : "cd6427a8b3d2e042.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1628045660534,
      "stop" : 1628045676756,
      "duration" : 16222
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "961a6f030ddde069",
      "name" : "RF Profile Created : wifi5",
      "source" : "961a6f030ddde069.attach",
      "type" : "text/plain",
      "size" : 12274
    }, {
      "uid" : "8dc248af1b7cde71",
      "name" : "Radius Profile Created",
      "source" : "8dc248af1b7cde71.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "e318883eed49d8fe",
      "name" : "SSID Profile Created",
      "source" : "e318883eed49d8fe.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "44353c5cbd8ab2ef",
      "name" : "SSID Profile Created",
      "source" : "44353c5cbd8ab2ef.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "5931c1c0db0b065b",
      "name" : "SSID Profile Created",
      "source" : "5931c1c0db0b065b.attach",
      "type" : "text/plain",
      "size" : 2834
    }, {
      "uid" : "1fd61e2a17f74319",
      "name" : "SSID Profile Created",
      "source" : "1fd61e2a17f74319.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "1eb405b000dd3f55",
      "name" : "SSID Profile Created",
      "source" : "1eb405b000dd3f55.attach",
      "type" : "text/plain",
      "size" : 2848
    }, {
      "uid" : "d962f132cce610c5",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "d962f132cce610c5.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "f77edca05778103",
      "name" : "Passpoint Operator Profile Created",
      "source" : "f77edca05778103.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "81b4502c4f499736",
      "name" : "Passpoint Venue Profile Created",
      "source" : "81b4502c4f499736.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "73de247cd1c28cb0",
      "name" : "Passpoint Profile Created",
      "source" : "73de247cd1c28cb0.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "ae14a1ce3e86673c",
      "name" : "Updating SSID profile",
      "source" : "ae14a1ce3e86673c.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "3a1bb5674e3373ce",
      "name" : "Updating SSID profile",
      "source" : "3a1bb5674e3373ce.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "e2dd23a9672ac1fd",
      "name" : "Updating SSID profile",
      "source" : "e2dd23a9672ac1fd.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "f862ca20ad02de7d",
      "name" : "Updating SSID profile",
      "source" : "f862ca20ad02de7d.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "35ddff310f327077",
      "name" : "Equipment AP Profile Created",
      "source" : "35ddff310f327077.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1628043966698,
      "stop" : 1628043966698,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1628043965013,
      "stop" : 1628043965013,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1628043966697,
      "stop" : 1628043966697,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1628045660533,
      "stop" : 1628045660534,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "af45717aa1d6603b",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "af45717aa1d6603b.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1628045660532,
      "stop" : 1628045660532,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cee6e03ca01a4b3d",
      "name" : "Passpoint operator Info: ",
      "source" : "cee6e03ca01a4b3d.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1628043966508,
      "stop" : 1628043966627,
      "duration" : 119
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "160773dc37f729d",
      "name" : "Controller Instantiated: ",
      "source" : "160773dc37f729d.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1628045944410,
      "stop" : 1628045972817,
      "duration" : 28407
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1628045660533,
      "stop" : 1628045660533,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f5c7c349c6d83770",
      "name" : "Passpoint venue Info: ",
      "source" : "f5c7c349c6d83770.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1628043965012,
      "stop" : 1628043965012,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4b5b2951f5e47337",
      "name" : "Testbed Selected : ",
      "source" : "4b5b2951f5e47337.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1628050278630,
      "stop" : 1628050361393,
      "duration" : 82763
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a9a4ea6923afc4d",
      "name" : "RF Profile Created : wifi5",
      "source" : "a9a4ea6923afc4d.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "15ed5da9320ee0a",
      "name" : "SSID Profile Created",
      "source" : "15ed5da9320ee0a.attach",
      "type" : "text/plain",
      "size" : 2795
    }, {
      "uid" : "19841bea12705d45",
      "name" : "SSID Profile Created",
      "source" : "19841bea12705d45.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "cde6297fe0cd46c3",
      "name" : "SSID Profile Created",
      "source" : "cde6297fe0cd46c3.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "a32da0cb66963b91",
      "name" : "SSID Profile Created",
      "source" : "a32da0cb66963b91.attach",
      "type" : "text/plain",
      "size" : 2829
    }, {
      "uid" : "11a90c5e5e2e529d",
      "name" : "Equipment AP Profile Created",
      "source" : "11a90c5e5e2e529d.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "b42ec476b11ffddd",
      "name" : "APNOS LIbrary: ",
      "source" : "b42ec476b11ffddd.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "1a7137092a51a919",
      "name" : "openwrt_ctl Setup",
      "source" : "1a7137092a51a919.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "67f134f99d27e7a4",
      "name" : "vif config Output Msg: ",
      "source" : "67f134f99d27e7a4.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "64d77f18e3bb3628",
      "name" : "vif config Err Msg: ",
      "source" : "64d77f18e3bb3628.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b202250446d1ee20",
      "name" : "get_vif_config_ssids ",
      "source" : "b202250446d1ee20.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "9d0ea2c902041bb0",
      "name" : "vif config Output Msg: ",
      "source" : "9d0ea2c902041bb0.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "d050ce646734ec5c",
      "name" : "vif config Err Msg: ",
      "source" : "d050ce646734ec5c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ca3fc734d05d3696",
      "name" : "get_vif_config_ssids ",
      "source" : "ca3fc734d05d3696.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "25a4c9353f1318d9",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "25a4c9353f1318d9.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "e4dadc055e82a158",
      "name" : "APNOS LIbrary: ",
      "source" : "e4dadc055e82a158.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "9dca71f7766cf14d",
      "name" : "openwrt_ctl Setup",
      "source" : "9dca71f7766cf14d.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "5fbdce2ab8340843",
      "name" : "vif state Output Msg: ",
      "source" : "5fbdce2ab8340843.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "68bc1099bf79192d",
      "name" : "vif state Err Msg: ",
      "source" : "68bc1099bf79192d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d961b4027c8bc525",
      "name" : "get_vif_state_ssids ",
      "source" : "d961b4027c8bc525.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "df3d1b32ae9b593",
      "name" : "vif config Output Msg: ",
      "source" : "df3d1b32ae9b593.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "2a4139418c439197",
      "name" : "vif config Err Msg: ",
      "source" : "2a4139418c439197.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "64f97c9241642e44",
      "name" : "get_vif_config_ssids ",
      "source" : "64f97c9241642e44.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f159030f45b447ae",
      "name" : "vif state Output Msg: ",
      "source" : "f159030f45b447ae.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ae98788919be3e5c",
      "name" : "vif state Err Msg: ",
      "source" : "ae98788919be3e5c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "833cad7d8cc71135",
      "name" : "get_vif_state_ssids ",
      "source" : "833cad7d8cc71135.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "95050f8241f21492",
      "name" : "vif config Output Msg: ",
      "source" : "95050f8241f21492.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "5896dc289589a4f4",
      "name" : "vif config Err Msg: ",
      "source" : "5896dc289589a4f4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8a9ab23bafaaa0d0",
      "name" : "get_vif_config_ssids ",
      "source" : "8a9ab23bafaaa0d0.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "735c60b89bee1d2f",
      "name" : "vif state Output Msg: ",
      "source" : "735c60b89bee1d2f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c6240542c76e0157",
      "name" : "vif state Err Msg: ",
      "source" : "c6240542c76e0157.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "60702b54236d163f",
      "name" : "get_vif_state_ssids ",
      "source" : "60702b54236d163f.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "6505e9b4ce017492",
      "name" : "vif config Output Msg: ",
      "source" : "6505e9b4ce017492.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "eb5b5969ee537fa9",
      "name" : "vif config Err Msg: ",
      "source" : "eb5b5969ee537fa9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d40f7ff5c6bd0582",
      "name" : "get_vif_config_ssids ",
      "source" : "d40f7ff5c6bd0582.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "9465515ce33ce7e7",
      "name" : "vif state Output Msg: ",
      "source" : "9465515ce33ce7e7.attach",
      "type" : "text/plain",
      "size" : 4008
    }, {
      "uid" : "5a832d69e347aad8",
      "name" : "vif state Err Msg: ",
      "source" : "5a832d69e347aad8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cdd9292259512778",
      "name" : "get_vif_state_ssids ",
      "source" : "cdd9292259512778.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "9d093ae2061e5f3",
      "name" : "vif config Output Msg: ",
      "source" : "9d093ae2061e5f3.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "d3fe747d9b63a029",
      "name" : "vif config Err Msg: ",
      "source" : "d3fe747d9b63a029.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e16340051ea78ff",
      "name" : "get_vif_config_ssids ",
      "source" : "e16340051ea78ff.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "564c6fd8e2d62d17",
      "name" : "vif state Output Msg: ",
      "source" : "564c6fd8e2d62d17.attach",
      "type" : "text/plain",
      "size" : 7623
    }, {
      "uid" : "5e62f8dbc713e146",
      "name" : "vif state Err Msg: ",
      "source" : "5e62f8dbc713e146.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2126f38b8543242e",
      "name" : "get_vif_state_ssids ",
      "source" : "2126f38b8543242e.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ddf0f919218ebf45",
      "name" : "vif config Output Msg: ",
      "source" : "ddf0f919218ebf45.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "b4c1b93b79685609",
      "name" : "vif config Err Msg: ",
      "source" : "b4c1b93b79685609.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "eb071b78f143dcb6",
      "name" : "get_vif_config_ssids ",
      "source" : "eb071b78f143dcb6.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f45c7ae9a05ab47c",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "f45c7ae9a05ab47c.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 48,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1628043966698,
      "stop" : 1628043966698,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cb4ede896a32c338",
      "name" : "Test Cases Requires: ",
      "source" : "cb4ede896a32c338.attach",
      "type" : "text/plain",
      "size" : 384
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1628043966627,
      "stop" : 1628043966697,
      "duration" : 70
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1628045660534,
      "stop" : 1628045660534,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a740d7dd535e162b",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "a740d7dd535e162b.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1628043965013,
      "stop" : 1628043966508,
      "duration" : 1495
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "40d8476e3cac7acf",
      "name" : "added openwrtctl.py to :",
      "source" : "40d8476e3cac7acf.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "cd116ac31845e2c5",
      "name" : "APNOS LIbrary: ",
      "source" : "cd116ac31845e2c5.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "56a3095ba7597aa5",
      "name" : "openwrt_ctl Setup",
      "source" : "56a3095ba7597aa5.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1628045676756,
      "stop" : 1628045944409,
      "duration" : 267653
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "246db6369e0bea34",
      "name" : "Equipment AP Profile Updated",
      "source" : "246db6369e0bea34.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "7518325cbb8c1f",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "7518325cbb8c1f.attach",
      "type" : "text/plain",
      "size" : 126
    }, {
      "uid" : "e1a3c8e9af90a3eb",
      "name" : "APNOS LIbrary: ",
      "source" : "e1a3c8e9af90a3eb.attach",
      "type" : "text/plain",
      "size" : 343
    }, {
      "uid" : "c3f232ab95541e7a",
      "name" : "openwrt_ctl Setup",
      "source" : "c3f232ab95541e7a.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "3d840736573b8c02",
      "name" : "vif config Output Msg: ",
      "source" : "3d840736573b8c02.attach",
      "type" : "text/plain",
      "size" : 183
    }, {
      "uid" : "ea72ebcbd10d4610",
      "name" : "vif config Err Msg: ",
      "source" : "ea72ebcbd10d4610.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a6c43bf5c6016c42",
      "name" : "get_vif_config_ssids ",
      "source" : "a6c43bf5c6016c42.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "e10deb4a122dfa5",
      "name" : "vif state Output Msg: ",
      "source" : "e10deb4a122dfa5.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "a2b4fb9e6b867293",
      "name" : "vif state Err Msg: ",
      "source" : "a2b4fb9e6b867293.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "669e4927cf809880",
      "name" : "get_vif_state_ssids ",
      "source" : "669e4927cf809880.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "80489ab0dd60d14d",
      "name" : "vif config Output Msg: ",
      "source" : "80489ab0dd60d14d.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "25b9e2246c680f07",
      "name" : "vif config Err Msg: ",
      "source" : "25b9e2246c680f07.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c394bf97e6acb0fd",
      "name" : "get_vif_config_ssids ",
      "source" : "c394bf97e6acb0fd.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "b75e581495dcbacc",
      "name" : "vif state Output Msg: ",
      "source" : "b75e581495dcbacc.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "287a9083b0f82e5b",
      "name" : "vif state Err Msg: ",
      "source" : "287a9083b0f82e5b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6e0ca7fbeabc9f1b",
      "name" : "get_vif_state_ssids ",
      "source" : "6e0ca7fbeabc9f1b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "914f843b78bda7f4",
      "name" : "vif config Output Msg: ",
      "source" : "914f843b78bda7f4.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "dc5de6c4881b7bf6",
      "name" : "vif config Err Msg: ",
      "source" : "dc5de6c4881b7bf6.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "322d782892be1df7",
      "name" : "get_vif_config_ssids ",
      "source" : "322d782892be1df7.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "3c2df44b84cf4ce1",
      "name" : "vif state Output Msg: ",
      "source" : "3c2df44b84cf4ce1.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "adee18ca8ba0b0b9",
      "name" : "vif state Err Msg: ",
      "source" : "adee18ca8ba0b0b9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6524924d99b25691",
      "name" : "get_vif_state_ssids ",
      "source" : "6524924d99b25691.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "6003fa910daffb2",
      "name" : "vif config Output Msg: ",
      "source" : "6003fa910daffb2.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "103f29101fb18764",
      "name" : "vif config Err Msg: ",
      "source" : "103f29101fb18764.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "25ad8d40e0ff710c",
      "name" : "get_vif_config_ssids ",
      "source" : "25ad8d40e0ff710c.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "2f79851c41cdf2",
      "name" : "vif state Output Msg: ",
      "source" : "2f79851c41cdf2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "9d9676a43e31bc6",
      "name" : "vif state Err Msg: ",
      "source" : "9d9676a43e31bc6.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f093efa6f45a1e95",
      "name" : "get_vif_state_ssids ",
      "source" : "f093efa6f45a1e95.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "1004d575848e936e",
      "name" : "vif config Output Msg: ",
      "source" : "1004d575848e936e.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "363ceda01f3e2950",
      "name" : "vif config Err Msg: ",
      "source" : "363ceda01f3e2950.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "69e5bb2ca09219f1",
      "name" : "get_vif_config_ssids ",
      "source" : "69e5bb2ca09219f1.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "cc4c45ad98ef6cd1",
      "name" : "vif state Output Msg: ",
      "source" : "cc4c45ad98ef6cd1.attach",
      "type" : "text/plain",
      "size" : 2644
    }, {
      "uid" : "eba64572f68cdee7",
      "name" : "vif state Err Msg: ",
      "source" : "eba64572f68cdee7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5c2e51a43924b202",
      "name" : "get_vif_state_ssids ",
      "source" : "5c2e51a43924b202.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "fd25a42d4f2d7421",
      "name" : "vif config Output Msg: ",
      "source" : "fd25a42d4f2d7421.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "42ce899de039a2e3",
      "name" : "vif config Err Msg: ",
      "source" : "42ce899de039a2e3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2375bf24ab890591",
      "name" : "get_vif_config_ssids ",
      "source" : "2375bf24ab890591.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "e0f5d5f4f309035e",
      "name" : "vif state Output Msg: ",
      "source" : "e0f5d5f4f309035e.attach",
      "type" : "text/plain",
      "size" : 4499
    }, {
      "uid" : "e9f58f7987f36f75",
      "name" : "vif state Err Msg: ",
      "source" : "e9f58f7987f36f75.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a76f7753e9b373e2",
      "name" : "get_vif_state_ssids ",
      "source" : "a76f7753e9b373e2.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "7d0171f2dded8f18",
      "name" : "vifC status on AP :: ",
      "source" : "7d0171f2dded8f18.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "1cf1eb9513216b55",
      "name" : "vifS status on AP :: ",
      "source" : "1cf1eb9513216b55.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1628045660531,
      "stop" : 1628045660532,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "58188d3ebbf2a12",
      "name" : "Passpoint Provider Info: ",
      "source" : "58188d3ebbf2a12.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n            assert reportFlag\n    \n            #print(\"Verifying if SSID Wifi Shows up\")\n            #report.step_start(\"Verifying if SSID Wifi Shows up\")\n            #wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            #print(\"SSID is Present: \" + WifiName)\n            #report.step_start(\"SSID is Present: \" + WifiName)\n    \n        try:\n            print(\"Waiting for Auto Connection to: \" + WifiName)\n            report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n            selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n>           passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n\n../libs/perfecto_libs/iOS_lib.py:251: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f7097b94130>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor608.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n            assert reportFlag\n    \n            #print(\"Verifying if SSID Wifi Shows up\")\n            #report.step_start(\"Verifying if SSID Wifi Shows up\")\n            #wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            #print(\"SSID is Present: \" + WifiName)\n            #report.step_start(\"SSID is Present: \" + WifiName)\n    \n        try:\n            print(\"Waiting for Auto Connection to: \" + WifiName)\n            report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n            selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n            passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n        except Exception as e:\n            #Toggle Wifi Mode\n            Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n            time.sleep(15)\n    \n            try:\n                print(\"Waiting for Auto Connection After Toggling Wifi: \" + WifiName)\n                selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n>               passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n\n../libs/perfecto_libs/iOS_lib.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f709798c7c0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor608.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7f7097b75250>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [22721, 22722, 22723, 22724], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n            assert reportFlag\n    \n            #print(\"Verifying if SSID Wifi Shows up\")\n            #report.step_start(\"Verifying if SSID Wifi Shows up\")\n            #wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            #print(\"SSID is Present: \" + WifiName)\n            #report.step_start(\"SSID is Present: \" + WifiName)\n    \n        try:\n            print(\"Waiting for Auto Connection to: \" + WifiName)\n            report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n            selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n            passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n        except Exception as e:\n            #Toggle Wifi Mode\n            Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n            time.sleep(15)\n    \n            try:\n                print(\"Waiting for Auto Connection After Toggling Wifi: \" + WifiName)\n                selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n            except Exception as e:\n                print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                report.step_start(\"SSID Not Connected: \" + WifiName)\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                reportFlag = False\n>               assert reportFlag\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:266: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridge object at 0x7f7097b75250>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [22721, 22722, 22723, 22724], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_BRIDGE[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"aef500b7-b8bb-42b0-8492-9a0d49b79bb0\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f709470c940>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_BRIDGE(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:119: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f8e42a216471db66",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "f8e42a216471db66.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "d40d61ea517bc17b",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "d40d61ea517bc17b.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "94e094c8d55b3bb8",
      "name" : "log",
      "source" : "94e094c8d55b3bb8.txt",
      "type" : "text/plain",
      "size" : 1715
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1628046277721,
      "stop" : 1628046277721,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1628052355744,
      "stop" : 1628052355744,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1628052355762,
      "stop" : 1628052355762,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1628052355780,
      "stop" : 1628052355780,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1628047213858,
      "stop" : 1628047213859,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1628047213859,
      "stop" : 1628047239753,
      "duration" : 25894
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bb9ceab6feaeec66",
      "name" : "Tear Down in Profiles ",
      "source" : "bb9ceab6feaeec66.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1628052355739,
      "stop" : 1628052355739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1628052355755,
      "stop" : 1628052355755,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1628052355740,
      "stop" : 1628052355741,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1628052355776,
      "stop" : 1628052355776,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1628052355778,
      "stop" : 1628052355778,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1628052355748,
      "stop" : 1628052355748,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1628052355748,
      "stop" : 1628052355749,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2e6fad4f0853992d",
      "name" : "Controller Teardown: ",
      "source" : "2e6fad4f0853992d.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1628046240723,
      "stop" : 1628046240723,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1628046240723,
      "stop" : 1628046277720,
      "duration" : 36997
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1628052355777,
      "stop" : 1628052355777,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1628052355768,
      "stop" : 1628052355768,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1628050981957,
      "stop" : 1628050981957,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1628050981957,
      "stop" : 1628051006222,
      "duration" : 24265
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "85a8f40366c407a",
      "name" : "Tear Down in Profiles ",
      "source" : "85a8f40366c407a.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1628052355736,
      "stop" : 1628052355736,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1628052355743,
      "stop" : 1628052355743,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1628052355775,
      "stop" : 1628052355775,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1628052355751,
      "stop" : 1628052355751,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1628046277721,
      "stop" : 1628046277721,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1628052355779,
      "stop" : 1628052355779,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridge"
  }, {
    "name" : "host",
    "value" : "interop-ci-116-ios-w44zk"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 29,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 31
      },
      "items" : [ {
        "uid" : "d9447b52a30bcd42",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627959378029,
          "stop" : 1627959547219,
          "duration" : 169190
        }
      }, {
        "uid" : "3514e368de025fa9",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627897372593,
          "stop" : 1627897563418,
          "duration" : 190825
        }
      }, {
        "uid" : "4cc90eac71a4d1fd",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627785547175,
          "stop" : 1627785746106,
          "duration" : 198931
        }
      }, {
        "uid" : "3ffbbf805af9112a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627612082275,
          "stop" : 1627612276742,
          "duration" : 194467
        }
      }, {
        "uid" : "55b968ef1ad76834",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627437731586,
          "stop" : 1627437731586,
          "duration" : 0
        }
      }, {
        "uid" : "aa917f4f31e5ec54",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627354108442,
          "stop" : 1627354108443,
          "duration" : 1
        }
      }, {
        "uid" : "3b90c181b232035f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627265188358,
          "stop" : 1627265396676,
          "duration" : 208318
        }
      }, {
        "uid" : "b9fb888bd520f41",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627179810568,
          "stop" : 1627179889572,
          "duration" : 79004
        }
      }, {
        "uid" : "7388060e80f71f93",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627082055765,
          "stop" : 1627082136479,
          "duration" : 80714
        }
      }, {
        "uid" : "4d930caf186922d7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627008166925,
          "stop" : 1627008248167,
          "duration" : 81242
        }
      }, {
        "uid" : "ec49e1129dfcf5c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1626835323629,
          "stop" : 1626835521369,
          "duration" : 197740
        }
      }, {
        "uid" : "bc0dacd00c8e3739",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1626743985819,
          "stop" : 1626744182187,
          "duration" : 196368
        }
      }, {
        "uid" : "d0e148ef62259978",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626662294583,
          "stop" : 1626662376007,
          "duration" : 81424
        }
      }, {
        "uid" : "9f59dd1153112951",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626575943572,
          "stop" : 1626576023260,
          "duration" : 79688
        }
      }, {
        "uid" : "2811e89d8b71c33c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626487565431,
          "stop" : 1626487647540,
          "duration" : 82109
        }
      }, {
        "uid" : "97fa048a4953bfbd",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626403341018,
          "stop" : 1626403420184,
          "duration" : 79166
        }
      }, {
        "uid" : "8c1fedb1a6fc6ae4",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308731278,
          "stop" : 1626308731278,
          "duration" : 0
        }
      }, {
        "uid" : "90735e340fb0306d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625797251775,
          "stop" : 1625797251776,
          "duration" : 1
        }
      }, {
        "uid" : "a3a765c52b0bc255",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625739354938,
          "stop" : 1625739578230,
          "duration" : 223292
        }
      }, {
        "uid" : "796810b868bc8feb",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625624549842,
          "stop" : 1625624835815,
          "duration" : 285973
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_eap", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "ios", "twog" ]
  },
  "source" : "1c7aaf6796f2dbf9.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}
{
  "uid" : "21c99d304d1cefeb",
  "name" : "test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT#test_wpa2_only_eap_5g_NAT",
  "historyId" : "710dc9f93680d4eedc1d2589c5c094fa",
  "time" : {
    "start" : 1627357347376,
    "stop" : 1627357546597,
    "duration" : 199221
  },
  "description" : "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        ",
  "descriptionHtml" : "<pre><code>         EAP Passpoint BRIDGE Mode\n         pytest -m &quot;interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg&quot;\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f30fc4b9130>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1868.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f30fb951a60>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [14092, 14093, 14094, 14095], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:266: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f30fb951a60>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [14092, 14093, 14094, 14095], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:344: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_markers",
    "time" : {
      "start" : 1627352460211,
      "stop" : 1627352460212,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fcb42a7b471ff8e3",
      "name" : "Test Cases Requires: ",
      "source" : "fcb42a7b471ff8e3.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1627352458450,
      "stop" : 1627352458451,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8d18261b09e427f2",
      "name" : "Testbed Selected : ",
      "source" : "8d18261b09e427f2.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1627357319555,
      "stop" : 1627357347373,
      "duration" : 27818
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1627353811867,
      "stop" : 1627353811868,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "17f2986cbac87d8c",
      "name" : "Passpoint profile Info: ",
      "source" : "17f2986cbac87d8c.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627355660394,
      "stop" : 1627355682786,
      "duration" : 22392
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9b7dd71e1b33af89",
      "name" : "RF Profile Created : wifi5",
      "source" : "9b7dd71e1b33af89.attach",
      "type" : "text/plain",
      "size" : 12259
    }, {
      "uid" : "f372118307d7ec2f",
      "name" : "Radius Profile Created",
      "source" : "f372118307d7ec2f.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "8f23b18967b8009b",
      "name" : "SSID Profile Created",
      "source" : "8f23b18967b8009b.attach",
      "type" : "text/plain",
      "size" : 2820
    }, {
      "uid" : "e4a722ccfa2311c4",
      "name" : "SSID Profile Created",
      "source" : "e4a722ccfa2311c4.attach",
      "type" : "text/plain",
      "size" : 2836
    }, {
      "uid" : "5432ff388883888e",
      "name" : "SSID Profile Created",
      "source" : "5432ff388883888e.attach",
      "type" : "text/plain",
      "size" : 2832
    }, {
      "uid" : "6c26d20c7a439ddb",
      "name" : "SSID Profile Created",
      "source" : "6c26d20c7a439ddb.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "de9016df864c7be5",
      "name" : "SSID Profile Created",
      "source" : "de9016df864c7be5.attach",
      "type" : "text/plain",
      "size" : 2846
    }, {
      "uid" : "4414a35f8c30091c",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "4414a35f8c30091c.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "b4021672f396363f",
      "name" : "Passpoint Operator Profile Created",
      "source" : "b4021672f396363f.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "bf48fdcdae58d30d",
      "name" : "Passpoint Venue Profile Created",
      "source" : "bf48fdcdae58d30d.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "4cb0bdd771e88735",
      "name" : "Passpoint Profile Created",
      "source" : "4cb0bdd771e88735.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "f0e6b4b85b8da42b",
      "name" : "Updating SSID profile",
      "source" : "f0e6b4b85b8da42b.attach",
      "type" : "text/plain",
      "size" : 149
    }, {
      "uid" : "795013fa14246b0a",
      "name" : "Updating SSID profile",
      "source" : "795013fa14246b0a.attach",
      "type" : "text/plain",
      "size" : 145
    }, {
      "uid" : "a9ede904383edac3",
      "name" : "Updating SSID profile",
      "source" : "a9ede904383edac3.attach",
      "type" : "text/plain",
      "size" : 159
    }, {
      "uid" : "c9c6632c1a2c7d26",
      "name" : "Updating SSID profile",
      "source" : "c9c6632c1a2c7d26.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "2ab4e2432fe05bcb",
      "name" : "Equipment AP Profile Created",
      "source" : "2ab4e2432fe05bcb.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1627353811870,
      "stop" : 1627353811870,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d60225a4e87147c6",
      "name" : "Passpoint venue Info: ",
      "source" : "d60225a4e87147c6.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1627352460211,
      "stop" : 1627352460211,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1627352460095,
      "stop" : 1627352460211,
      "duration" : 116
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1627352460211,
      "stop" : 1627352460211,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1627352458451,
      "stop" : 1627352458451,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "534c7437b9ef0847",
      "name" : "Testbed Selected: ",
      "source" : "534c7437b9ef0847.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627359226941,
      "stop" : 1627359288029,
      "duration" : 61088
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f615124f0fbcd2c2",
      "name" : "RF Profile Created : wifi5",
      "source" : "f615124f0fbcd2c2.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "8b2f4a204363e17f",
      "name" : "SSID Profile Created",
      "source" : "8b2f4a204363e17f.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "f659394d7b4a83e0",
      "name" : "SSID Profile Created",
      "source" : "f659394d7b4a83e0.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "a8abd8e72e0c1ff1",
      "name" : "SSID Profile Created",
      "source" : "a8abd8e72e0c1ff1.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "69ade4ef03f9fd8",
      "name" : "SSID Profile Created",
      "source" : "69ade4ef03f9fd8.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "b6cb21130d66da73",
      "name" : "Equipment AP Profile Created",
      "source" : "b6cb21130d66da73.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "9c3588ffed1eaaf1",
      "name" : "APNOS LIbrary: ",
      "source" : "9c3588ffed1eaaf1.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "ff014a051604e37e",
      "name" : "openwrt_ctl Setup",
      "source" : "ff014a051604e37e.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "7b293085dc5da785",
      "name" : "vif config Output Msg: ",
      "source" : "7b293085dc5da785.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "87321671d919655a",
      "name" : "vif config Err Msg: ",
      "source" : "87321671d919655a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3496927214bb02b",
      "name" : "get_vif_config_ssids ",
      "source" : "3496927214bb02b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "c3ce4bfddffde380",
      "name" : "vif config Output Msg: ",
      "source" : "c3ce4bfddffde380.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "1f8f232e54bbe4eb",
      "name" : "vif config Err Msg: ",
      "source" : "1f8f232e54bbe4eb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fadac8d61bc8adf4",
      "name" : "get_vif_config_ssids ",
      "source" : "fadac8d61bc8adf4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "12af8065da565273",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "12af8065da565273.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "f248fb519f7c2ad1",
      "name" : "APNOS LIbrary: ",
      "source" : "f248fb519f7c2ad1.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "3e12559cb0aa9240",
      "name" : "openwrt_ctl Setup",
      "source" : "3e12559cb0aa9240.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "eba15b47e1026952",
      "name" : "vif state Output Msg: ",
      "source" : "eba15b47e1026952.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ec7455cc4214d751",
      "name" : "vif state Err Msg: ",
      "source" : "ec7455cc4214d751.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e96f5852ff9b4f59",
      "name" : "get_vif_state_ssids ",
      "source" : "e96f5852ff9b4f59.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "718ec42bfd86b578",
      "name" : "vif config Output Msg: ",
      "source" : "718ec42bfd86b578.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "35efc668c82e9d9f",
      "name" : "vif config Err Msg: ",
      "source" : "35efc668c82e9d9f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "85fea11a4ed0bba2",
      "name" : "get_vif_config_ssids ",
      "source" : "85fea11a4ed0bba2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5063578ce5694b0a",
      "name" : "vif state Output Msg: ",
      "source" : "5063578ce5694b0a.attach",
      "type" : "text/plain",
      "size" : 4031
    }, {
      "uid" : "db0e4da4b1aa2517",
      "name" : "vif state Err Msg: ",
      "source" : "db0e4da4b1aa2517.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b1dff965c3c82ebd",
      "name" : "get_vif_state_ssids ",
      "source" : "b1dff965c3c82ebd.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "fd2267c345f319c5",
      "name" : "vif config Output Msg: ",
      "source" : "fd2267c345f319c5.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "702a82af525fed5c",
      "name" : "vif config Err Msg: ",
      "source" : "702a82af525fed5c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bef06cc65670f7b4",
      "name" : "get_vif_config_ssids ",
      "source" : "bef06cc65670f7b4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "53a2e61b2ece9d04",
      "name" : "vif state Output Msg: ",
      "source" : "53a2e61b2ece9d04.attach",
      "type" : "text/plain",
      "size" : 7394
    }, {
      "uid" : "c1f5c26658259a12",
      "name" : "vif state Err Msg: ",
      "source" : "c1f5c26658259a12.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8c69f4460203844b",
      "name" : "get_vif_state_ssids ",
      "source" : "8c69f4460203844b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7247d7f064a8eb48",
      "name" : "vif config Output Msg: ",
      "source" : "7247d7f064a8eb48.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "ee5f3845e81ec18c",
      "name" : "vif config Err Msg: ",
      "source" : "ee5f3845e81ec18c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7f10bc8898ae22f2",
      "name" : "get_vif_config_ssids ",
      "source" : "7f10bc8898ae22f2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7744a6d7aa61ab02",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "7744a6d7aa61ab02.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1627353811869,
      "stop" : 1627353811870,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9185cea3c3f48165",
      "name" : "Passpoint operator Info: ",
      "source" : "9185cea3c3f48165.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1627357319555,
      "stop" : 1627357319555,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1627352458451,
      "stop" : 1627352459958,
      "duration" : 1507
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a1d3134c5d1230f2",
      "name" : "added openwrtctl.py to :",
      "source" : "a1d3134c5d1230f2.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "d8e2c298b9068244",
      "name" : "APNOS LIbrary: ",
      "source" : "d8e2c298b9068244.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "b1a4bbebdf06d8b9",
      "name" : "openwrt_ctl Setup",
      "source" : "b1a4bbebdf06d8b9.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1627357050493,
      "stop" : 1627357319555,
      "duration" : 269062
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "66fdc3aea362c049",
      "name" : "Equipment AP Profile Updated",
      "source" : "66fdc3aea362c049.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "7ff84973853045de",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "7ff84973853045de.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "d2463a0f7d952d40",
      "name" : "APNOS LIbrary: ",
      "source" : "d2463a0f7d952d40.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "5b952c217a97c22",
      "name" : "openwrt_ctl Setup",
      "source" : "5b952c217a97c22.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "b169238f20cead3e",
      "name" : "vif config Output Msg: ",
      "source" : "b169238f20cead3e.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "8bd4fcb48ba64aaf",
      "name" : "vif config Err Msg: ",
      "source" : "8bd4fcb48ba64aaf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c6e65b10981f4713",
      "name" : "get_vif_config_ssids ",
      "source" : "c6e65b10981f4713.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "95ff8037c827ac77",
      "name" : "vif state Output Msg: ",
      "source" : "95ff8037c827ac77.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "743cd5963c26973e",
      "name" : "vif state Err Msg: ",
      "source" : "743cd5963c26973e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "18c8b49e46089c65",
      "name" : "get_vif_state_ssids ",
      "source" : "18c8b49e46089c65.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b797c3003ded4893",
      "name" : "vif config Output Msg: ",
      "source" : "b797c3003ded4893.attach",
      "type" : "text/plain",
      "size" : 7796
    }, {
      "uid" : "b42ff3d81b6d389b",
      "name" : "vif config Err Msg: ",
      "source" : "b42ff3d81b6d389b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a7df1d03097dedea",
      "name" : "get_vif_config_ssids ",
      "source" : "a7df1d03097dedea.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "8519f69e1f07d01",
      "name" : "vif state Output Msg: ",
      "source" : "8519f69e1f07d01.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7b6c6aa32d0c13d0",
      "name" : "vif state Err Msg: ",
      "source" : "7b6c6aa32d0c13d0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "556b469fb13bcfb3",
      "name" : "get_vif_state_ssids ",
      "source" : "556b469fb13bcfb3.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "5bce412fe08fa049",
      "name" : "vif config Output Msg: ",
      "source" : "5bce412fe08fa049.attach",
      "type" : "text/plain",
      "size" : 7796
    }, {
      "uid" : "e495d9ff97845a27",
      "name" : "vif config Err Msg: ",
      "source" : "e495d9ff97845a27.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e91e6c32467854b3",
      "name" : "get_vif_config_ssids ",
      "source" : "e91e6c32467854b3.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "98b6899972e09f4b",
      "name" : "vif state Output Msg: ",
      "source" : "98b6899972e09f4b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ae984538c5574598",
      "name" : "vif state Err Msg: ",
      "source" : "ae984538c5574598.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "568327e6b3e558dd",
      "name" : "get_vif_state_ssids ",
      "source" : "568327e6b3e558dd.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b030167cb72d25ae",
      "name" : "vif config Output Msg: ",
      "source" : "b030167cb72d25ae.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "674e09925c89b119",
      "name" : "vif config Err Msg: ",
      "source" : "674e09925c89b119.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fdc73f5794b85777",
      "name" : "get_vif_config_ssids ",
      "source" : "fdc73f5794b85777.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "19ffcff05a724b7d",
      "name" : "vif state Output Msg: ",
      "source" : "19ffcff05a724b7d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e532540ed183e1d1",
      "name" : "vif state Err Msg: ",
      "source" : "e532540ed183e1d1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5a2e98749c75586d",
      "name" : "get_vif_state_ssids ",
      "source" : "5a2e98749c75586d.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "12721b5dca4b88b",
      "name" : "vif config Output Msg: ",
      "source" : "12721b5dca4b88b.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "d7fa797219abf485",
      "name" : "vif config Err Msg: ",
      "source" : "d7fa797219abf485.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8264bc5d268fa57",
      "name" : "get_vif_config_ssids ",
      "source" : "8264bc5d268fa57.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "44470c7ec97bcbbc",
      "name" : "vif state Output Msg: ",
      "source" : "44470c7ec97bcbbc.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "70518a15c8b290dd",
      "name" : "vif state Err Msg: ",
      "source" : "70518a15c8b290dd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "19b2ad1ab8b2be37",
      "name" : "get_vif_state_ssids ",
      "source" : "19b2ad1ab8b2be37.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b9524400f4fa84e7",
      "name" : "vif config Output Msg: ",
      "source" : "b9524400f4fa84e7.attach",
      "type" : "text/plain",
      "size" : 4090
    }, {
      "uid" : "5a2911f186808967",
      "name" : "vif config Err Msg: ",
      "source" : "5a2911f186808967.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6bf114a352a25e8d",
      "name" : "get_vif_config_ssids ",
      "source" : "6bf114a352a25e8d.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "6662f244cae76c46",
      "name" : "vif state Output Msg: ",
      "source" : "6662f244cae76c46.attach",
      "type" : "text/plain",
      "size" : 4347
    }, {
      "uid" : "f8b2e395ee1340ef",
      "name" : "vif state Err Msg: ",
      "source" : "f8b2e395ee1340ef.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f4ab2db1b84c4a8",
      "name" : "get_vif_state_ssids ",
      "source" : "f4ab2db1b84c4a8.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "39c17996b54a6072",
      "name" : "vifC status on AP :: ",
      "source" : "39c17996b54a6072.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "d3845b557a38208",
      "name" : "vifS status on AP :: ",
      "source" : "d3845b557a38208.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1627353811869,
      "stop" : 1627353811869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "568080c5bebe5913",
      "name" : "Passpoint Provider Info: ",
      "source" : "568080c5bebe5913.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1627352459958,
      "stop" : 1627352460094,
      "duration" : 136
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ff18272ddf35ef4",
      "name" : "Controller Instantiated: ",
      "source" : "2ff18272ddf35ef4.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1627353811871,
      "stop" : 1627353811872,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "17abe837c43c5c1d",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "17abe837c43c5c1d.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1627353811870,
      "stop" : 1627353811871,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f8a64e175ef0ddc",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "f8a64e175ef0ddc.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1627352458451,
      "stop" : 1627352458451,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1627352460094,
      "stop" : 1627352460094,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ab3c4a1b4caa90f",
      "name" : "VLAN Created: ",
      "source" : "2ab3c4a1b4caa90f.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n>           wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f30fc4b9130>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1868.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f30fb951a60>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [14092, 14093, 14094, 14095], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n>           assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nWifiName = 'ssid_wpa2_eap_passpoint_5g'\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def verify_APconnMobileDevice_iOS(request, WifiName, setup_perfectoMobile, connData):\n        print(\"\\n-----------------------\")\n        print(\"Verify Connected Wifi Mode\")\n        print(\"-----------------------\")\n    \n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Verifying WifiName: \" + WifiName)\n    \n        #Refresh Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        #Verifies if AP is connected to Wifi status\n        try:\n            print(\"Get Connected Wifi Name\")\n            report.step_start(\"Get Connected Wifi Name\")\n            element = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")))\n            #element = driver.find_element_by_xpath(\"\")\n            element.click()\n    \n            print(\"Verifying if SSID Wifi Shows up\")\n            report.step_start(\"Verifying if SSID Wifi Shows up\")\n            wifiXpath2 = WebDriverWait(driver, 45).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiName + \"']\")))\n            print(\"SSID is Present: \" + WifiName)\n            report.step_start(\"SSID is Present: \" + WifiName)\n    \n            try:\n                print(\"Waiting for Auto Connection to: \" + WifiName)\n                report.step_start(\"Waiting for Auto Connection to: \" + WifiName)\n                selectedWifiNetwork = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork)))\n            except Exception as e:\n                #Toggle Wifi Mode\n                Toggle_WifiMode_iOS(request, setup_perfectoMobile, connData)\n                time.sleep(15)\n    \n                try:\n                    print(\"Waiting for Auto Connection After Toggle: \" + WifiName)\n                    selectedWifiNetwork2 = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ WifiName + \"']/parent::*/XCUIElementTypeButton[@label='More Info']\"\n                    passPointWifi = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, selectedWifiNetwork2)))\n                except Exception as e:\n                    print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n                    report.step_start(\"SSID Not Connected: \" + WifiName)\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                    reportFlag = False\n                    assert reportFlag\n    \n        except Exception as e:\n            print(\"SSID Not Connected Within allocated Time: \" + WifiName)\n            report.step_start(\"SSID Not Connected: \" + WifiName)\n            request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n            reportFlag = False\n>           assert reportFlag\nE           AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:266: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode.TestOpenRoamingNAT object at 0x7f30fb951a60>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [14092, 14093, 14094, 14095], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_NAT[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"1e9c40f0-2657-49af-b3d1-cff9b0b6a210\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30f8540dc0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_NAT(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n        \"\"\"\n             EAP Passpoint BRIDGE Mode\n             pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_only_eap and fiveg\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Setting Perfecto ReportClient....\n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n        set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n    \n        #Install Profile\n        downloadInstallOpenRoamingProfile(request, profileDownloadURL, setup_perfectoMobile_iOS, connData)\n    \n        #ForgetWifi Original\n        ForgetWifiConnection(request, setup_perfectoMobile_iOS, downloadProfileSSID, connData)\n    \n        try:\n            assert verify_APconnMobileDevice_iOS(request, profileNameSSID, setup_perfectoMobile_iOS, connData)\n            #Verify Upload download Speed from device Selection\n            verifyUploadDownloadSpeediOS(request, setup_perfectoMobile_iOS, connData)\n        except Exception as e:\n            deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n>           assert False\nE           assert False\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_NatMode.py:344: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a24964c3f50ca53b",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "a24964c3f50ca53b.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "c635f0741bcb1440",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "c635f0741bcb1440.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "849dea59c1567d6f",
      "name" : "log",
      "source" : "849dea59c1567d6f.txt",
      "type" : "text/plain",
      "size" : 1715
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1627360865418,
      "stop" : 1627360865418,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1627360865448,
      "stop" : 1627360865448,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1627357546767,
      "stop" : 1627357546767,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1627357546767,
      "stop" : 1627357582715,
      "duration" : 35948
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1627360865460,
      "stop" : 1627360865460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627357582717,
      "stop" : 1627357582717,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627357582717,
      "stop" : 1627357608886,
      "duration" : 26169
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "240e58781d1c3b80",
      "name" : "Tear Down in Profiles ",
      "source" : "240e58781d1c3b80.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1627360865456,
      "stop" : 1627360865456,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1627360865422,
      "stop" : 1627360865422,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1627360865424,
      "stop" : 1627360865424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1627360865420,
      "stop" : 1627360865421,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1627360865443,
      "stop" : 1627360865443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627359749686,
      "stop" : 1627359749686,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627359749686,
      "stop" : 1627359773827,
      "duration" : 24141
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d56cbb670e55162",
      "name" : "Tear Down in Profiles ",
      "source" : "d56cbb670e55162.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1627360865457,
      "stop" : 1627360865457,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1627357582716,
      "stop" : 1627357582716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1627360865432,
      "stop" : 1627360865432,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1627357582716,
      "stop" : 1627357582716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1627360865458,
      "stop" : 1627360865458,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1627360865429,
      "stop" : 1627360865429,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1627360865429,
      "stop" : 1627360865430,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8c6020748c4ba557",
      "name" : "Controller Teardown: ",
      "source" : "8c6020748c4ba557.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1627360865454,
      "stop" : 1627360865454,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1627360865455,
      "stop" : 1627360865455,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1627360865437,
      "stop" : 1627360865437,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1627360865426,
      "stop" : 1627360865426,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "NAT MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "nat"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_NatMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingNAT"
  }, {
    "name" : "host",
    "value" : "interop-ci-85-ios-h7bxr"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_NatMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 23,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "6f9eb550dd8eb73c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n    at sun.reflect.GeneratedConstructorAccessor1749.newInstance (None:-1)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\n    at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\n    at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\n    at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\n    at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\n    at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\n    at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\n    at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\n    at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\n    at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\n    at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\n    at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\n    at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\n    at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\n    at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\n    at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\n    at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\n    at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\n    at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\n    at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\n    at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\n    at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\n    at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\n    at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\n    at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\n    at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\n    at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\n    at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\n    at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\n    at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\n    at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\n    at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\n    at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\n    at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\n    at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\n    at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run (Thread.java:748)",
        "time" : {
          "start" : 1627268556363,
          "stop" : 1627268637516,
          "duration" : 81153
        }
      }, {
        "uid" : "6d14c5dc9c5c3363",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627182760315,
          "stop" : 1627182840127,
          "duration" : 79812
        }
      }, {
        "uid" : "310d89f7e84fdf4f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627084966887,
          "stop" : 1627085047036,
          "duration" : 80149
        }
      }, {
        "uid" : "c8c1a2f953b06522",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627011067644,
          "stop" : 1627011146302,
          "duration" : 78658
        }
      }, {
        "uid" : "5a186dc1bc14984e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1626839172848,
          "stop" : 1626839372699,
          "duration" : 199851
        }
      }, {
        "uid" : "71511f655310a2b5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1626747772189,
          "stop" : 1626747972619,
          "duration" : 200430
        }
      }, {
        "uid" : "fe6fd373a7a9688c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626665294299,
          "stop" : 1626665375555,
          "duration" : 81256
        }
      }, {
        "uid" : "e56f695a68c4e354",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626578879776,
          "stop" : 1626578960299,
          "duration" : 80523
        }
      }, {
        "uid" : "f21e6bd66d67505d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626490483257,
          "stop" : 1626490561852,
          "duration" : 78595
        }
      }, {
        "uid" : "15dceebf396da4c6",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626406278520,
          "stop" : 1626406357899,
          "duration" : 79379
        }
      }, {
        "uid" : "265cfcdf2666c114",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308731962,
          "stop" : 1626308731962,
          "duration" : 0
        }
      }, {
        "uid" : "28495cf0d48f6e91",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625799720372,
          "stop" : 1625799720373,
          "duration" : 1
        }
      }, {
        "uid" : "e45e96839b7c9f05",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625742030942,
          "stop" : 1625742030943,
          "duration" : 1
        }
      }, {
        "uid" : "500be9adf160d7ce",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625627351085,
          "stop" : 1625627351086,
          "duration" : 1
        }
      }, {
        "uid" : "615b95616e80cbbe",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625541058350,
          "stop" : 1625541058351,
          "duration" : 1
        }
      }, {
        "uid" : "3010cad58874d503",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625454059798,
          "stop" : 1625454059799,
          "duration" : 1
        }
      }, {
        "uid" : "a5a4e4aba6b2821a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625368097139,
          "stop" : 1625368097139,
          "duration" : 0
        }
      }, {
        "uid" : "98c69935af680667",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625281653141,
          "stop" : 1625281653142,
          "duration" : 1
        }
      }, {
        "uid" : "ddeb888a200edfd5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625195473294,
          "stop" : 1625195473294,
          "duration" : 0
        }
      }, {
        "uid" : "cec4914210cdc086",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625105316426,
          "stop" : 1625105316426,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "nat", "openRoaming", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "fiveg", "ios" ]
  },
  "source" : "21c99d304d1cefeb.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}", "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-NAT', 'mode': 'NAT', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-NAT', 'mode': 'NAT', 'vlan': 1}]}}" ]
}
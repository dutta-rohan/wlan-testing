{
  "uid" : "940a48ec6720eeb3",
  "name" : "test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN#test_wpa2_only_eap_5g_VLAN",
  "historyId" : "269e31b86b8ba0e5fabe797e1ab15431",
  "time" : {
    "start" : 1627359119089,
    "stop" : 1627359162931,
    "duration" : 43842
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30fb92c8e0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n>               elementWifName = driver.find_element_by_xpath(WifiXpath)\n\n../libs/perfecto_libs/iOS_lib.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>\nxpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element_by_xpath(self, xpath):\n        \"\"\"\n        Finds an element by xpath.\n    \n        :Args:\n         - xpath - The xpath locator of the element to find.\n    \n        :Returns:\n         - WebElement - the element if it was found\n    \n        :Raises:\n         - NoSuchElementException - if the element wasn't found\n    \n        :Usage:\n            element = driver.find_element_by_xpath('//div/td[1]')\n        \"\"\"\n>       return self.find_element(by=By.XPATH, value=xpath)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>\nby = 'xpath'\nvalue = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element(self, by: str = By.ID, value: Union[str, Dict] = None) -> MobileWebElement:\n        \"\"\"'Private' method used by the find_element_by_* methods.\n    \n        Override for Appium\n    \n        Usage:\n            Use the corresponding find_element_by_* instead of this.\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # TODO: If we need, we should enable below converter for Web context\n        # if self.w3c:\n        #     if by == By.ID:\n        #         by = By.CSS_SELECTOR\n        #         value = '[id=\"%s\"]' % value\n        #     elif by == By.TAG_NAME:\n        #         by = By.CSS_SELECTOR\n        #     elif by == By.CLASS_NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = \".%s\" % value\n        #     elif by == By.NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/webdriver.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>\ndriver_command = 'findElement'\nparams = {'sessionId': 'e69a452d-1c03-43d4-a064-149660ec62ed', 'using': 'xpath', 'value': \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f30f867ca60>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"c5864b50-462d-4656-8c6c-d11776611d83\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n            else:\n>               raise wde\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f30f867ca60>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"c5864b50-462d-4656-8c6c-d11776611d83\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f30f867ca60>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"c5864b50-462d-4656-8c6c-d11776611d83\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nE       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nE       Driver info: io.appium.java_client.ios.IOSDriver\nE       Capabilities {accessToken: eyJhbGciOiJSUzI1NiIsInR5cCI..., assert_javascript_enabled: true, authenticationTenant: operator, autoAcceptAlerts: true, browserName: , bundleId: com.apple.mobilesafari, cloud: tip.perfectomobile.com, databaseEnabled: false, deviceName: 00008101-00180D660801401E, deviceSessionId: rajp@perfectomobile.com_Rem..., entityType: remote_web_driver, executionId: rajp@perfectomobile.com_Rem..., executionTenantId: tip-perfectomobile-com, host: tip.perfectomobile.com, javascriptEnabled: true, liveStreamEnabled: false, locationContextEnabled: false, model: iPhone-12, networkConnectionEnabled: false, password: , platform: MAC, platformName: ios, platformVersion: 14.1, reportPdfUrl: https://tip.app.perfectomob..., scriptName: RemoteWebDriver, securityToken: , serverConnector: , serverHost: X.X.X.X:11601, simpleIsVisibleCheck: true, stopUrl: https://tip.perfectomobile...., takesScreenshot: true, testGridReportUrl: https://tip.app.perfectomob..., udid: 00008101-00180D660801401E, useAppiumForHybrid: false, useAppiumForWeb: false, user: , webStorageEnabled: false, xcuitestFindOptimizations: true}\nE       Session ID: 3d13ab0a-7a90-4ee6-82c9-301f24ad439c\nE       *** Element info: {Using=xpath, value=//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']}\nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1868.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f30f8361f40>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [14104, 14105, 14106, 14107], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30fb92c8e0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30fb92c8e0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n>               assert reportFlag\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:108: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_markers",
    "time" : {
      "start" : 1627352460211,
      "stop" : 1627352460212,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fcb42a7b471ff8e3",
      "name" : "Test Cases Requires: ",
      "source" : "fcb42a7b471ff8e3.attach",
      "type" : "text/plain",
      "size" : 385
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1627352458450,
      "stop" : 1627352458451,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8d18261b09e427f2",
      "name" : "Testbed Selected : ",
      "source" : "8d18261b09e427f2.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627357608893,
      "stop" : 1627357630470,
      "duration" : 21577
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2c6eb876c8bd5c18",
      "name" : "RF Profile Created : wifi5",
      "source" : "2c6eb876c8bd5c18.attach",
      "type" : "text/plain",
      "size" : 12264
    }, {
      "uid" : "5ed8b88d07499f50",
      "name" : "Radius Profile Created",
      "source" : "5ed8b88d07499f50.attach",
      "type" : "text/plain",
      "size" : 182
    }, {
      "uid" : "b59f64f55834f864",
      "name" : "SSID Profile Created",
      "source" : "b59f64f55834f864.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "e5d8956698ab6c95",
      "name" : "SSID Profile Created",
      "source" : "e5d8956698ab6c95.attach",
      "type" : "text/plain",
      "size" : 2842
    }, {
      "uid" : "fd3bb64d88cd97b6",
      "name" : "SSID Profile Created",
      "source" : "fd3bb64d88cd97b6.attach",
      "type" : "text/plain",
      "size" : 2838
    }, {
      "uid" : "4644e8ec819d17cf",
      "name" : "SSID Profile Created",
      "source" : "4644e8ec819d17cf.attach",
      "type" : "text/plain",
      "size" : 2856
    }, {
      "uid" : "2de8391c4e55430e",
      "name" : "SSID Profile Created",
      "source" : "2de8391c4e55430e.attach",
      "type" : "text/plain",
      "size" : 2852
    }, {
      "uid" : "bbaccb2e8053a1da",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "bbaccb2e8053a1da.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "8243415a7f4862ce",
      "name" : "Passpoint Operator Profile Created",
      "source" : "8243415a7f4862ce.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "ce58f6676c3b3b94",
      "name" : "Passpoint Venue Profile Created",
      "source" : "ce58f6676c3b3b94.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "2faceef8d45f3404",
      "name" : "Passpoint Profile Created",
      "source" : "2faceef8d45f3404.attach",
      "type" : "text/plain",
      "size" : 2627
    }, {
      "uid" : "9443287124875340",
      "name" : "Updating SSID profile",
      "source" : "9443287124875340.attach",
      "type" : "text/plain",
      "size" : 155
    }, {
      "uid" : "c455e1ce82a87c1f",
      "name" : "Updating SSID profile",
      "source" : "c455e1ce82a87c1f.attach",
      "type" : "text/plain",
      "size" : 151
    }, {
      "uid" : "80a2adcea1fb5baf",
      "name" : "Updating SSID profile",
      "source" : "80a2adcea1fb5baf.attach",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "97582a55d2d976b5",
      "name" : "Updating SSID profile",
      "source" : "97582a55d2d976b5.attach",
      "type" : "text/plain",
      "size" : 161
    }, {
      "uid" : "94a130eee35cb8b1",
      "name" : "Equipment AP Profile Created",
      "source" : "94a130eee35cb8b1.attach",
      "type" : "text/plain",
      "size" : 50
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1627353811867,
      "stop" : 1627353811868,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "17f2986cbac87d8c",
      "name" : "Passpoint profile Info: ",
      "source" : "17f2986cbac87d8c.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1627353811870,
      "stop" : 1627353811870,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d60225a4e87147c6",
      "name" : "Passpoint venue Info: ",
      "source" : "d60225a4e87147c6.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1627352460211,
      "stop" : 1627352460211,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1627352460095,
      "stop" : 1627352460211,
      "duration" : 116
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1627352460211,
      "stop" : 1627352460211,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1627352458451,
      "stop" : 1627352458451,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "534c7437b9ef0847",
      "name" : "Testbed Selected: ",
      "source" : "534c7437b9ef0847.attach",
      "type" : "text/plain",
      "size" : 7
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1627359226941,
      "stop" : 1627359288029,
      "duration" : 61088
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f615124f0fbcd2c2",
      "name" : "RF Profile Created : wifi5",
      "source" : "f615124f0fbcd2c2.attach",
      "type" : "text/plain",
      "size" : 40
    }, {
      "uid" : "8b2f4a204363e17f",
      "name" : "SSID Profile Created",
      "source" : "8b2f4a204363e17f.attach",
      "type" : "text/plain",
      "size" : 2799
    }, {
      "uid" : "f659394d7b4a83e0",
      "name" : "SSID Profile Created",
      "source" : "f659394d7b4a83e0.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "a8abd8e72e0c1ff1",
      "name" : "SSID Profile Created",
      "source" : "a8abd8e72e0c1ff1.attach",
      "type" : "text/plain",
      "size" : 2815
    }, {
      "uid" : "69ade4ef03f9fd8",
      "name" : "SSID Profile Created",
      "source" : "69ade4ef03f9fd8.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "b6cb21130d66da73",
      "name" : "Equipment AP Profile Created",
      "source" : "b6cb21130d66da73.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "9c3588ffed1eaaf1",
      "name" : "APNOS LIbrary: ",
      "source" : "9c3588ffed1eaaf1.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "ff014a051604e37e",
      "name" : "openwrt_ctl Setup",
      "source" : "ff014a051604e37e.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "7b293085dc5da785",
      "name" : "vif config Output Msg: ",
      "source" : "7b293085dc5da785.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "87321671d919655a",
      "name" : "vif config Err Msg: ",
      "source" : "87321671d919655a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3496927214bb02b",
      "name" : "get_vif_config_ssids ",
      "source" : "3496927214bb02b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "c3ce4bfddffde380",
      "name" : "vif config Output Msg: ",
      "source" : "c3ce4bfddffde380.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "1f8f232e54bbe4eb",
      "name" : "vif config Err Msg: ",
      "source" : "1f8f232e54bbe4eb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fadac8d61bc8adf4",
      "name" : "get_vif_config_ssids ",
      "source" : "fadac8d61bc8adf4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "12af8065da565273",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "12af8065da565273.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "f248fb519f7c2ad1",
      "name" : "APNOS LIbrary: ",
      "source" : "f248fb519f7c2ad1.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "3e12559cb0aa9240",
      "name" : "openwrt_ctl Setup",
      "source" : "3e12559cb0aa9240.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "eba15b47e1026952",
      "name" : "vif state Output Msg: ",
      "source" : "eba15b47e1026952.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "ec7455cc4214d751",
      "name" : "vif state Err Msg: ",
      "source" : "ec7455cc4214d751.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e96f5852ff9b4f59",
      "name" : "get_vif_state_ssids ",
      "source" : "e96f5852ff9b4f59.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "718ec42bfd86b578",
      "name" : "vif config Output Msg: ",
      "source" : "718ec42bfd86b578.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "35efc668c82e9d9f",
      "name" : "vif config Err Msg: ",
      "source" : "35efc668c82e9d9f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "85fea11a4ed0bba2",
      "name" : "get_vif_config_ssids ",
      "source" : "85fea11a4ed0bba2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5063578ce5694b0a",
      "name" : "vif state Output Msg: ",
      "source" : "5063578ce5694b0a.attach",
      "type" : "text/plain",
      "size" : 4031
    }, {
      "uid" : "db0e4da4b1aa2517",
      "name" : "vif state Err Msg: ",
      "source" : "db0e4da4b1aa2517.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b1dff965c3c82ebd",
      "name" : "get_vif_state_ssids ",
      "source" : "b1dff965c3c82ebd.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "fd2267c345f319c5",
      "name" : "vif config Output Msg: ",
      "source" : "fd2267c345f319c5.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "702a82af525fed5c",
      "name" : "vif config Err Msg: ",
      "source" : "702a82af525fed5c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bef06cc65670f7b4",
      "name" : "get_vif_config_ssids ",
      "source" : "bef06cc65670f7b4.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "53a2e61b2ece9d04",
      "name" : "vif state Output Msg: ",
      "source" : "53a2e61b2ece9d04.attach",
      "type" : "text/plain",
      "size" : 7394
    }, {
      "uid" : "c1f5c26658259a12",
      "name" : "vif state Err Msg: ",
      "source" : "c1f5c26658259a12.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8c69f4460203844b",
      "name" : "get_vif_state_ssids ",
      "source" : "8c69f4460203844b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7247d7f064a8eb48",
      "name" : "vif config Output Msg: ",
      "source" : "7247d7f064a8eb48.attach",
      "type" : "text/plain",
      "size" : 6878
    }, {
      "uid" : "ee5f3845e81ec18c",
      "name" : "vif config Err Msg: ",
      "source" : "ee5f3845e81ec18c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "7f10bc8898ae22f2",
      "name" : "get_vif_config_ssids ",
      "source" : "7f10bc8898ae22f2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7744a6d7aa61ab02",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "7744a6d7aa61ab02.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1627353811869,
      "stop" : 1627353811870,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9185cea3c3f48165",
      "name" : "Passpoint operator Info: ",
      "source" : "9185cea3c3f48165.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1627352458451,
      "stop" : 1627352459958,
      "duration" : 1507
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a1d3134c5d1230f2",
      "name" : "added openwrtctl.py to :",
      "source" : "a1d3134c5d1230f2.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "d8e2c298b9068244",
      "name" : "APNOS LIbrary: ",
      "source" : "d8e2c298b9068244.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "b1a4bbebdf06d8b9",
      "name" : "openwrt_ctl Setup",
      "source" : "b1a4bbebdf06d8b9.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1627359094010,
      "stop" : 1627359094010,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1627359094011,
      "stop" : 1627359119088,
      "duration" : 25077
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1627353811869,
      "stop" : 1627353811869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "568080c5bebe5913",
      "name" : "Passpoint Provider Info: ",
      "source" : "568080c5bebe5913.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1627358837052,
      "stop" : 1627359094010,
      "duration" : 256958
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6810d2881f697a01",
      "name" : "Equipment AP Profile Updated",
      "source" : "6810d2881f697a01.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "6158bb8055157bb5",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "6158bb8055157bb5.attach",
      "type" : "text/plain",
      "size" : 131
    }, {
      "uid" : "84cb6fd1cc112dea",
      "name" : "APNOS LIbrary: ",
      "source" : "84cb6fd1cc112dea.attach",
      "type" : "text/plain",
      "size" : 297
    }, {
      "uid" : "96f7d41c1612faa3",
      "name" : "openwrt_ctl Setup",
      "source" : "96f7d41c1612faa3.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "c223a90529b20004",
      "name" : "vif config Output Msg: ",
      "source" : "c223a90529b20004.attach",
      "type" : "text/plain",
      "size" : 4095
    }, {
      "uid" : "2f59d1b8f077c17b",
      "name" : "vif config Err Msg: ",
      "source" : "2f59d1b8f077c17b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b1f304e7bbe39c19",
      "name" : "get_vif_config_ssids ",
      "source" : "b1f304e7bbe39c19.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "bb9cf67b3db0c99d",
      "name" : "vif state Output Msg: ",
      "source" : "bb9cf67b3db0c99d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "47b1b4a530748c8",
      "name" : "vif state Err Msg: ",
      "source" : "47b1b4a530748c8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1d083f9a01f1f0c0",
      "name" : "get_vif_state_ssids ",
      "source" : "1d083f9a01f1f0c0.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "98260c25c80916a8",
      "name" : "vif config Output Msg: ",
      "source" : "98260c25c80916a8.attach",
      "type" : "text/plain",
      "size" : 7804
    }, {
      "uid" : "c2a7c74ef8d07e5f",
      "name" : "vif config Err Msg: ",
      "source" : "c2a7c74ef8d07e5f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "65cfc49cf4302208",
      "name" : "get_vif_config_ssids ",
      "source" : "65cfc49cf4302208.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "2fb5a9aff9eacea9",
      "name" : "vif state Output Msg: ",
      "source" : "2fb5a9aff9eacea9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "eeef44167070ac67",
      "name" : "vif state Err Msg: ",
      "source" : "eeef44167070ac67.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e0ac5d856c443c04",
      "name" : "get_vif_state_ssids ",
      "source" : "e0ac5d856c443c04.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "bc93e1026e09de52",
      "name" : "vif config Output Msg: ",
      "source" : "bc93e1026e09de52.attach",
      "type" : "text/plain",
      "size" : 7804
    }, {
      "uid" : "c490431f51704ea9",
      "name" : "vif config Err Msg: ",
      "source" : "c490431f51704ea9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a96fd7e572375cff",
      "name" : "get_vif_config_ssids ",
      "source" : "a96fd7e572375cff.attach",
      "type" : "text/plain",
      "size" : 130
    }, {
      "uid" : "6b0c7f889055e37d",
      "name" : "vif state Output Msg: ",
      "source" : "6b0c7f889055e37d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "560f0b8cf263eefd",
      "name" : "vif state Err Msg: ",
      "source" : "560f0b8cf263eefd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1a88f77a3c048deb",
      "name" : "get_vif_state_ssids ",
      "source" : "1a88f77a3c048deb.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "efbfd255bcfd6d5b",
      "name" : "vif config Output Msg: ",
      "source" : "efbfd255bcfd6d5b.attach",
      "type" : "text/plain",
      "size" : 4094
    }, {
      "uid" : "80aaecfd35b4e52e",
      "name" : "vif config Err Msg: ",
      "source" : "80aaecfd35b4e52e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b0d77325e23d3b4c",
      "name" : "get_vif_config_ssids ",
      "source" : "b0d77325e23d3b4c.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "dd406586808ae58b",
      "name" : "vif state Output Msg: ",
      "source" : "dd406586808ae58b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e920fd81631f55bb",
      "name" : "vif state Err Msg: ",
      "source" : "e920fd81631f55bb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "126ecbe1a719ebcc",
      "name" : "get_vif_state_ssids ",
      "source" : "126ecbe1a719ebcc.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "68df63f7ac16f687",
      "name" : "vif config Output Msg: ",
      "source" : "68df63f7ac16f687.attach",
      "type" : "text/plain",
      "size" : 4094
    }, {
      "uid" : "25b742e1b4d675fd",
      "name" : "vif config Err Msg: ",
      "source" : "25b742e1b4d675fd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6212baa50f23c960",
      "name" : "get_vif_config_ssids ",
      "source" : "6212baa50f23c960.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "1e82c8763f92e4b6",
      "name" : "vif state Output Msg: ",
      "source" : "1e82c8763f92e4b6.attach",
      "type" : "text/plain",
      "size" : 4354
    }, {
      "uid" : "2d11f48b9f50e22b",
      "name" : "vif state Err Msg: ",
      "source" : "2d11f48b9f50e22b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "373fdcbea3f8ebe8",
      "name" : "get_vif_state_ssids ",
      "source" : "373fdcbea3f8ebe8.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "c362e1ccae365c41",
      "name" : "vifC status on AP :: ",
      "source" : "c362e1ccae365c41.attach",
      "type" : "text/plain",
      "size" : 65
    }, {
      "uid" : "3665db9f933a9675",
      "name" : "vifS status on AP :: ",
      "source" : "3665db9f933a9675.attach",
      "type" : "text/plain",
      "size" : 65
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1627352459958,
      "stop" : 1627352460094,
      "duration" : 136
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ff18272ddf35ef4",
      "name" : "Controller Instantiated: ",
      "source" : "2ff18272ddf35ef4.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1627353811871,
      "stop" : 1627353811872,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "17abe837c43c5c1d",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "17abe837c43c5c1d.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1627353811870,
      "stop" : 1627353811871,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f8a64e175ef0ddc",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "f8a64e175ef0ddc.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1627352458451,
      "stop" : 1627352458451,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1627352460094,
      "stop" : 1627352460094,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ab3c4a1b4caa90f",
      "name" : "VLAN Created: ",
      "source" : "2ab3c4a1b4caa90f.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30fb92c8e0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n>               elementWifName = driver.find_element_by_xpath(WifiXpath)\n\n../libs/perfecto_libs/iOS_lib.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>\nxpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element_by_xpath(self, xpath):\n        \"\"\"\n        Finds an element by xpath.\n    \n        :Args:\n         - xpath - The xpath locator of the element to find.\n    \n        :Returns:\n         - WebElement - the element if it was found\n    \n        :Raises:\n         - NoSuchElementException - if the element wasn't found\n    \n        :Usage:\n            element = driver.find_element_by_xpath('//div/td[1]')\n        \"\"\"\n>       return self.find_element(by=By.XPATH, value=xpath)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>\nby = 'xpath'\nvalue = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"\n\n    def find_element(self, by: str = By.ID, value: Union[str, Dict] = None) -> MobileWebElement:\n        \"\"\"'Private' method used by the find_element_by_* methods.\n    \n        Override for Appium\n    \n        Usage:\n            Use the corresponding find_element_by_* instead of this.\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # TODO: If we need, we should enable below converter for Web context\n        # if self.w3c:\n        #     if by == By.ID:\n        #         by = By.CSS_SELECTOR\n        #         value = '[id=\"%s\"]' % value\n        #     elif by == By.TAG_NAME:\n        #         by = By.CSS_SELECTOR\n        #     elif by == By.CLASS_NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = \".%s\" % value\n        #     elif by == By.NAME:\n        #         by = By.CSS_SELECTOR\n        #         value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/webdriver.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>\ndriver_command = 'findElement'\nparams = {'sessionId': 'e69a452d-1c03-43d4-a064-149660ec62ed', 'using': 'xpath', 'value': \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']\"}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f30f867ca60>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"c5864b50-462d-4656-8c6c-d11776611d83\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n            else:\n>               raise wde\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f30f867ca60>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"c5864b50-462d-4656-8c6c-d11776611d83\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\n/usr/local/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f30f867ca60>\nresponse = {'status': 500, 'value': '{\\n  \"sessionId\": \"c5864b50-462d-4656-8c6c-d11776611d83\",\\n  \"state\": \"no such element\",\\n  ...8\",\\n      \"releaseLabel\": \"3.141.59\",\\n      \"class\": \"org.openqa.selenium.BuildInfo\"\\n    }\\n  },\\n  \"status\": 7\\n}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nE       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'\nE       Driver info: io.appium.java_client.ios.IOSDriver\nE       Capabilities {accessToken: eyJhbGciOiJSUzI1NiIsInR5cCI..., assert_javascript_enabled: true, authenticationTenant: operator, autoAcceptAlerts: true, browserName: , bundleId: com.apple.mobilesafari, cloud: tip.perfectomobile.com, databaseEnabled: false, deviceName: 00008101-00180D660801401E, deviceSessionId: rajp@perfectomobile.com_Rem..., entityType: remote_web_driver, executionId: rajp@perfectomobile.com_Rem..., executionTenantId: tip-perfectomobile-com, host: tip.perfectomobile.com, javascriptEnabled: true, liveStreamEnabled: false, locationContextEnabled: false, model: iPhone-12, networkConnectionEnabled: false, password: , platform: MAC, platformName: ios, platformVersion: 14.1, reportPdfUrl: https://tip.app.perfectomob..., scriptName: RemoteWebDriver, securityToken: , serverConnector: , serverHost: X.X.X.X:11601, simpleIsVisibleCheck: true, stopUrl: https://tip.perfectomobile...., takesScreenshot: true, testGridReportUrl: https://tip.app.perfectomob..., udid: 00008101-00180D660801401E, useAppiumForHybrid: false, useAppiumForWeb: false, user: , webStorageEnabled: false, xcuitestFindOptimizations: true}\nE       Session ID: 3d13ab0a-7a90-4ee6-82c9-301f24ad439c\nE       *** Element info: {Using=xpath, value=//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='passpoint_profile_download']}\nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1868.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f30f8361f40>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...e': 'Disabled'}, 'allowed_ssids': [14104, 14105, 14106, 14107], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_only_eap_passpoint_5g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30fb92c8e0>)\n\n    @pytest.mark.wpa2_only_eap\n    @pytest.mark.fiveg\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_only_eap_passpoint_5g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_wpa2_only_eap_5g_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_only_eap_passpoint_5g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_only_eap_passpoint_5g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_only_eap\"][1][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_wpa2_only_eap_5g_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"e69a452d-1c03-43d4-a064-149660ec62ed\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f30fb92c8e0>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n>               assert reportFlag\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:108: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e009af8f409eeaf5",
      "name" : "Config push to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "e009af8f409eeaf5.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "4c0883d451da55aa",
      "name" : "Config apply to AP for ssid_wpa2_only_eap_passpoint_5g successful ",
      "source" : "4c0883d451da55aa.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "33fb4a6b35b63b27",
      "name" : "log",
      "source" : "33fb4a6b35b63b27.txt",
      "type" : "text/plain",
      "size" : 1451
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1627360865418,
      "stop" : 1627360865418,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1627360865448,
      "stop" : 1627360865448,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627359201154,
      "stop" : 1627359201154,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627359201154,
      "stop" : 1627359226937,
      "duration" : 25783
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5e7dfd5e9ba9219",
      "name" : "Tear Down in Profiles ",
      "source" : "5e7dfd5e9ba9219.attach",
      "type" : "text/plain",
      "size" : 31
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1627360865460,
      "stop" : 1627360865460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1627360865456,
      "stop" : 1627360865456,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1627360865422,
      "stop" : 1627360865422,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1627360865424,
      "stop" : 1627360865424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1627360865420,
      "stop" : 1627360865421,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1627360865443,
      "stop" : 1627360865443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1627359749686,
      "stop" : 1627359749686,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1627359749686,
      "stop" : 1627359773827,
      "duration" : 24141
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d56cbb670e55162",
      "name" : "Tear Down in Profiles ",
      "source" : "d56cbb670e55162.attach",
      "type" : "text/plain",
      "size" : 25
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1627360865457,
      "stop" : 1627360865457,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1627360865432,
      "stop" : 1627360865432,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1627359201152,
      "stop" : 1627359201152,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1627359163184,
      "stop" : 1627359163184,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1627359163184,
      "stop" : 1627359201151,
      "duration" : 37967
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1627360865458,
      "stop" : 1627360865458,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1627359201153,
      "stop" : 1627359201153,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1627360865429,
      "stop" : 1627360865429,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1627360865429,
      "stop" : 1627360865430,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8c6020748c4ba557",
      "name" : "Controller Teardown: ",
      "source" : "8c6020748c4ba557.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1627360865454,
      "stop" : 1627360865454,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1627360865455,
      "stop" : 1627360865455,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1627360865437,
      "stop" : 1627360865437,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1627360865426,
      "stop" : 1627360865426,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "wpa2_only_eap"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_vlan_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeVLAN"
  }, {
    "name" : "host",
    "value" : "interop-ci-85-ios-h7bxr"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 24,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "e436d770e9edf243",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627270097080,
          "stop" : 1627270141521,
          "duration" : 44441
        }
      }, {
        "uid" : "2238dd5c03be823",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627184421630,
          "stop" : 1627184502486,
          "duration" : 80856
        }
      }, {
        "uid" : "6b9e35642a73483d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1627086632813,
          "stop" : 1627086632813,
          "duration" : 0
        }
      }, {
        "uid" : "5cfe78d3ac7f3a21",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1627012880781,
          "stop" : 1627012960670,
          "duration" : 79889
        }
      }, {
        "uid" : "20f8bfec5137f3b9",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626840956039,
          "stop" : 1626840999743,
          "duration" : 43704
        }
      }, {
        "uid" : "16fde4e14fa0db5d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626749566090,
          "stop" : 1626749609936,
          "duration" : 43846
        }
      }, {
        "uid" : "8d56d450150d6393",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626666974724,
          "stop" : 1626667056456,
          "duration" : 81732
        }
      }, {
        "uid" : "9dc8404adde364ac",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626580611719,
          "stop" : 1626580690093,
          "duration" : 78374
        }
      }, {
        "uid" : "1b421b8a5875a705",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626492193087,
          "stop" : 1626492272330,
          "duration" : 79243
        }
      }, {
        "uid" : "5ea7fb1ed518b72b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1626407967966,
          "stop" : 1626408048759,
          "duration" : 80793
        }
      }, {
        "uid" : "dfb6e8c6b3651f44",
        "status" : "broken",
        "statusDetails" : "OSError: [Errno 99] Cannot assign requested address",
        "time" : {
          "start" : 1626308732297,
          "stop" : 1626308732297,
          "duration" : 0
        }
      }, {
        "uid" : "2ef72281d5915bec",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625801182600,
          "stop" : 1625801182600,
          "duration" : 0
        }
      }, {
        "uid" : "4a7d1bf30570ba2b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625743494132,
          "stop" : 1625743494133,
          "duration" : 1
        }
      }, {
        "uid" : "bbb26229af4b2d12",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625628812804,
          "stop" : 1625628812804,
          "duration" : 0
        }
      }, {
        "uid" : "b38149ded5fd49a6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625542521310,
          "stop" : 1625542521311,
          "duration" : 1
        }
      }, {
        "uid" : "9395567fc9be761",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625455517044,
          "stop" : 1625455517044,
          "duration" : 0
        }
      }, {
        "uid" : "63d56c449186570",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625369560228,
          "stop" : 1625369560228,
          "duration" : 0
        }
      }, {
        "uid" : "330009c1564a2d5d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625283137529,
          "stop" : 1625283137530,
          "duration" : 1
        }
      }, {
        "uid" : "8c47da6429d9dc76",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625196946166,
          "stop" : 1625196946166,
          "duration" : 0
        }
      }, {
        "uid" : "795d05609aca6424",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1625106683545,
          "stop" : 1625106683546,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "wpa2_only_eap", "openRoaming", "vlan", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "fiveg", "ios" ]
  },
  "source" : "940a48ec6720eeb3.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_only_eap_passpoint_5g']}", "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'interop-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}" ]
}
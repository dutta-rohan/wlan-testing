{
  "uid" : "9bb4316480da08f6",
  "name" : "test_client_wpa2_personal_nat[setup_profiles0]",
  "fullName" : "e2e.basic.performance_tests.dual_band_performance_test.wpa2_personal.test_nat_mode.TestDualbandPerformanceNat#test_client_wpa2_personal_nat",
  "historyId" : "252133db074a937cd77c85eee7845297",
  "time" : {
    "start" : 1635331128020,
    "stop" : 1635331128020,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "TypeError: can only concatenate str (not \"bytes\") to str",
  "statusTrace" : "self = <apnos.apnos.APNOS object at 0x7fb932facdf0>\n\n    def get_ucentral_status(self):\n        try:\n            client = self.ssh_cli_connect()\n            cmd = \"ubus call ucentral status\"\n            if self.mode:\n                cmd = f\"cd ~/cicd-git/ && ./openwrt_ctl.py {self.owrt_args} -t {self.tty} --action \" \\\n                      f\"cmd --value \\\"{cmd}\\\" \"\n            stdin, stdout, stderr = client.exec_command(cmd)\n            output = stdout.read()\n            print(output)\n            if 'latest' not in str(output):\n                print(\"ubus call ucentral status: command has invalid output\", str(output))\n                connected, latest, active = \"Error\", \"Error1\", \"Error2\"\n                return connected, latest, active\n            else:\n                connected = False\n                if \"connected\" in output.decode('utf-8').splitlines()[2]:\n                    connected = True\n                # connected = output.decode('utf-8').splitlines()[2]\n>               latest = output.decode('utf-8').splitlines()[3].split(\":\")[1].replace(\" \", \"\").replace(\",\", \"\")\nE               IndexError: list index out of range\n\n../libs/apnos/apnos.py:336: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'setup_profiles' for <Function test_client_wpa2_personal_nat[setup_profiles0]>>\nsetup_controller = <controller.controller_2x.controller.Controller object at 0x7fb933056970>\ntestbed = 'basic-04', get_equipment_ref = ['68215fda456d']\nfixtures_ver = <fixtures_2x.Fixtures_2x object at 0x7fb933056ca0>\ninstantiate_profile = <class 'controller.controller_2x.controller.UProfileUtility'>\nget_markers = {'fiveg': True, 'open': False, 'radius': False, 'twog': True, ...}\ncreate_lanforge_chamberview_dut = 'basic-04'\nlf_tools = <lanforge.lf_tools.ChamberView object at 0x7fb933056cd0>\nget_security_flags = ['open', 'wpa', 'wep', 'wpa2_personal', 'wpa3_personal', 'wpa3_personal_mixed', ...]\nget_configuration = {'access_point': [{'ip': '10.28.3.100', 'jumphost': True, 'jumphost_tty': '/dev/ttyAP5', 'mode': 'wifi5', ...}], 'cont...hy4'], '2.4G-Station-Name': 'wlan0', '5G-Radio': ['1.1.wiphy5'], '5G-Station-Name': 'wlan0', ...}, 'name': 'lanforge'}}\nradius_info = {'ip': '10.10.1.221', 'password': 'password', 'pk_password': 'whatever', 'port': 1812, ...}\nget_apnos = <class 'apnos.apnos.APNOS'>\nradius_accounting_info = {'ip': '10.10.1.221', 'password': 'password', 'pk_password': 'whatever', 'port': 1813, ...}\n\n    @pytest.fixture(scope=\"class\")\n    def setup_profiles(request, setup_controller, testbed, get_equipment_ref, fixtures_ver,\n                       instantiate_profile, get_markers, create_lanforge_chamberview_dut, lf_tools,\n                       get_security_flags, get_configuration, radius_info, get_apnos, radius_accounting_info):\n        lf_tools.reset_scenario()\n        param = dict(request.param)\n    \n        # VLAN Setup\n        if request.param[\"mode\"] == \"VLAN\":\n    \n            vlan_list = list()\n            refactored_vlan_list = list()\n            ssid_modes = request.param[\"ssid_modes\"].keys()\n            for mode in ssid_modes:\n                for ssid in range(len(request.param[\"ssid_modes\"][mode])):\n                    if \"vlan\" in request.param[\"ssid_modes\"][mode][ssid]:\n                        vlan_list.append(request.param[\"ssid_modes\"][mode][ssid][\"vlan\"])\n                    else:\n                        pass\n            if vlan_list:\n                [refactored_vlan_list.append(x) for x in vlan_list if x not in refactored_vlan_list]\n                vlan_list = refactored_vlan_list\n                for i in range(len(vlan_list)):\n                    if vlan_list[i] > 4095 or vlan_list[i] < 1:\n                        vlan_list.pop(i)\n        if request.param[\"mode\"] == \"VLAN\":\n            lf_tools.add_vlan(vlan_ids=vlan_list)\n    \n        # call this, if 1.x\n>       return_var = fixtures_ver.setup_profiles(request, param, setup_controller, testbed, get_equipment_ref,\n                                                 instantiate_profile,\n                                                 get_markers, create_lanforge_chamberview_dut, lf_tools,\n                                                 get_security_flags, get_configuration, radius_info, get_apnos,\n                                                 radius_accounting_info)\n\ne2e/basic/conftest.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures_2x.py:559: in setup_profiles\n    connected, latest, active = ap_ssh.get_ucentral_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <apnos.apnos.APNOS object at 0x7fb932facdf0>\n\n    def get_ucentral_status(self):\n        try:\n            client = self.ssh_cli_connect()\n            cmd = \"ubus call ucentral status\"\n            if self.mode:\n                cmd = f\"cd ~/cicd-git/ && ./openwrt_ctl.py {self.owrt_args} -t {self.tty} --action \" \\\n                      f\"cmd --value \\\"{cmd}\\\" \"\n            stdin, stdout, stderr = client.exec_command(cmd)\n            output = stdout.read()\n            print(output)\n            if 'latest' not in str(output):\n                print(\"ubus call ucentral status: command has invalid output\", str(output))\n                connected, latest, active = \"Error\", \"Error1\", \"Error2\"\n                return connected, latest, active\n            else:\n                connected = False\n                if \"connected\" in output.decode('utf-8').splitlines()[2]:\n                    connected = True\n                # connected = output.decode('utf-8').splitlines()[2]\n                latest = output.decode('utf-8').splitlines()[3].split(\":\")[1].replace(\" \", \"\").replace(\",\", \"\")\n                active = output.decode('utf-8').splitlines()[4].split(\":\")[1].replace(\" \", \"\").replace(\",\", \"\")\n            client.close()\n        except Exception as e:\n>           pytest.exit(\"ubus call ucentral status: error\" + output)\nE           TypeError: can only concatenate str (not \"bytes\") to str\n\n../libs/apnos/apnos.py:340: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_configuration",
    "time" : {
      "start" : 1635330723573,
      "stop" : 1635330723573,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1635330723913,
      "stop" : 1635330726906,
      "duration" : 2993
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1635331128021,
      "stop" : 1635331204703,
      "duration" : 76682
    },
    "status" : "broken",
    "statusMessage" : "TypeError: can only concatenate str (not \"bytes\") to str\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 78, in setup_profiles\n    return_var = fixtures_ver.setup_profiles(request, param, setup_controller, testbed, get_equipment_ref,\n  File \"/wlan-testing/tests/fixtures_2x.py\", line 559, in setup_profiles\n    connected, latest, active = ap_ssh.get_ucentral_status()\n  File \"/wlan-testing/tests/../libs/apnos/apnos.py\", line 340, in get_ucentral_status\n    pytest.exit(\"ubus call ucentral status: error\" + output)\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5abd9dfcc25d05cc",
      "name" : "ucentral_config: ",
      "source" : "5abd9dfcc25d05cc.json",
      "type" : "application/json",
      "size" : 1242
    }, {
      "uid" : "b39c0e9001661289",
      "name" : "/configure response: 200",
      "source" : "b39c0e9001661289.json",
      "type" : "application/json",
      "size" : 1668
    }, {
      "uid" : "a47c7f80bec8ce57",
      "name" : "Config Sent from API: ",
      "source" : "a47c7f80bec8ce57.json",
      "type" : "application/json",
      "size" : 1241
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1635330723573,
      "stop" : 1635330723913,
      "duration" : 340
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_sdk_version",
    "time" : {
      "start" : 1635330726949,
      "stop" : 1635330726981,
      "duration" : 32
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_accounting_info",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1635330723573,
      "stop" : 1635330723573,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fixtures_ver",
    "time" : {
      "start" : 1635330726907,
      "stop" : 1635330726949,
      "duration" : 42
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1635330726982,
      "stop" : 1635330726982,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_test",
    "time" : {
      "start" : 1635330726907,
      "stop" : 1635330726907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_influx",
    "time" : {
      "start" : 1635330726907,
      "stop" : 1635330726907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_ref",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "add_allure_environment_property",
    "time" : {
      "start" : 1635330723572,
      "stop" : 1635330723572,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "add_env_properties",
    "time" : {
      "start" : 1635330726982,
      "stop" : 1635330730247,
      "duration" : 3265
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1635330730248,
      "stop" : 1635330730248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1635331204977,
      "stop" : 1635331204977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1635331204948,
      "stop" : 1635331204948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1635331204949,
      "stop" : 1635331204949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1635331204976,
      "stop" : 1635331204976,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_sdk_version::0",
    "time" : {
      "start" : 1635331204974,
      "stop" : 1635331204974,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_accounting_info::0",
    "time" : {
      "start" : 1635331204947,
      "stop" : 1635331204947,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1635331204978,
      "stop" : 1635331204978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1635331204949,
      "stop" : 1635331204949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::disconnect",
    "time" : {
      "start" : 1635331204950,
      "stop" : 1635331204973,
      "duration" : 23
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fixtures_ver::0",
    "time" : {
      "start" : 1635331204975,
      "stop" : 1635331204975,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1635331204974,
      "stop" : 1635331204974,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_test::0",
    "time" : {
      "start" : 1635331204975,
      "stop" : 1635331204975,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_influx::0",
    "time" : {
      "start" : 1635331204976,
      "stop" : 1635331204976,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_ref::0",
    "time" : {
      "start" : 1635331204949,
      "stop" : 1635331204949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "add_allure_environment_property::0",
    "time" : {
      "start" : 1635331204978,
      "stop" : 1635331204978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1635331204948,
      "stop" : 1635331204948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1635331204948,
      "stop" : 1635331204948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "performance"
  }, {
    "name" : "tag",
    "value" : "wifi5"
  }, {
    "name" : "tag",
    "value" : "dual_band_test"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "single_station_dual_band_throughput"
  }, {
    "name" : "tag",
    "value" : "nat"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "wifi6"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "wpa2_personal"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.performance_tests.dual_band_performance_test.wpa2_personal"
  }, {
    "name" : "suite",
    "value" : "test_nat_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestDualbandPerformanceNat"
  }, {
    "name" : "host",
    "value" : "perf-1389437946-6lhz6"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.performance_tests.dual_band_performance_test.wpa2_personal.test_nat_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'NAT', 'ssid_modes': {'wpa2_personal': [{'ssid_name': 'ssid_wpa2_personal_dual_band', 'appliedRadios': ['5G', '2G'], 'security_key': 'something', 'security': 'psk2'}]}, 'rf': {}, 'radius': False}"
  } ],
  "links" : [ {
    "name" : "WIFI-3918",
    "url" : "https://telecominfraproject.atlassian.net/browse/WIFI-3918",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "cdccb3ad8d5297e5",
        "status" : "passed",
        "time" : {
          "start" : 1633515004194,
          "stop" : 1633515238787,
          "duration" : 234593
        }
      }, {
        "uid" : "42984886a4b4bf0",
        "status" : "passed",
        "time" : {
          "start" : 1633006265804,
          "stop" : 1633006499353,
          "duration" : 233549
        }
      }, {
        "uid" : "c765df73000422c0",
        "status" : "passed",
        "time" : {
          "start" : 1632488537073,
          "stop" : 1632488771389,
          "duration" : 234316
        }
      }, {
        "uid" : "bbf2ad3b92151b79",
        "status" : "passed",
        "time" : {
          "start" : 1632393918367,
          "stop" : 1632394146439,
          "duration" : 228072
        }
      } ]
    },
    "tags" : [ "nat", "dual_band_test", "@pytest.mark.usefixtures('setup_profiles')", "performance", "single_station_dual_band_throughput", "wpa2_personal", "fiveg", "twog", "wifi5", "wifi6" ]
  },
  "source" : "9bb4316480da08f6.json",
  "parameterValues" : [ "{'mode': 'NAT', 'ssid_modes': {'wpa2_personal': [{'ssid_name': 'ssid_wpa2_personal_dual_band', 'appliedRadios': ['5G', '2G'], 'security_key': 'something', 'security': 'psk2'}]}, 'rf': {}, 'radius': False}" ]
}
{"name": "test_nss1_wpa2_personal_5g_10db_120degree[setup_profiles0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <tests.e2e.advanced.spatial_consistency.wpa2_personal.test_bridge_spatial.Test_SpatialConsistency_Bridge object at 0x7f3f296b7f10>\nsetup_profiles = {'wpa_2g': True}\nlf_tools = <lanforge.lf_tools.ChamberView object at 0x7f3f2c2f0850>\nlf_test = <lanforge.lf_tests.RunTest object at 0x7f3f2c2f0cd0>\nstation_names_fiveg = ['wlan000']\ncreate_lanforge_chamberview_dut = 'advanced-01'\nget_configuration = {'access_point': [{'ip': '10.28.3.102', 'jumphost': True, 'jumphost_tty': '/dev/ttyAP2', 'mode': 'wifi6', ...}], 'cont...'wlan0', '5G-Radio': ['1.1.wiphy1', '1.1.wiphy3', '1.1.wiphy5'], '5G-Station-Name': 'wlan0', ...}, 'name': 'lanforge'}}\n\n    @allure.testcase(url=\"https://telecominfraproject.atlassian.net/browse/WIFI-5059\", name=\"WIFI-5059\")\n    @pytest.mark.wpa2_personal\n    @pytest.mark.fiveg\n    @pytest.mark.degree120_nss1_10db\n    def test_nss1_wpa2_personal_5g_10db_120degree(self, setup_profiles, lf_tools, lf_test, station_names_fiveg,\n                                                 create_lanforge_chamberview_dut, get_configuration):\n        profile_data = setup_params_general[\"ssid_modes\"][\"wpa2_personal\"][1]\n        ssid_name = profile_data[\"ssid_name\"]\n        security_key = profile_data[\"security_key\"]\n        security = \"wpa2\"\n        mode = \"BRIDGE\"\n        band = \"fiveg\"\n        vlan = 1\n        dut_name = create_lanforge_chamberview_dut\n        station = lf_test.Client_Connect(ssid=ssid_name, security=security,\n                                         passkey=security_key, mode=mode, band=band,\n                                         station_name=station_names_fiveg, vlan_id=vlan)\n        print(\"station\", station)\n        ser_no = lf_test.attenuator_serial()\n        print(ser_no)\n        val = [['modes: Auto'], ['pkts: MTU'], ['directions: DUT Transmit'], ['traffic_types:UDP'],\n               ['bandw_options: AUTO'], ['spatial_streams: 1'], ['attenuator: ' + str(ser_no[0])], ['attenuator2: ' + str(ser_no[1])],\n               ['attenuations: 100'], ['attenuations2: 100'], ['chamber: DUT-Chamber'], ['tt_deg: 120']]\n        if station:\n            time.sleep(3)\n            rvr_o = lf_test.ratevsrange(station_name=station_names_fiveg, mode=mode,\n                                        instance_name=\"SPATIAL_NSS1_RVR1_Degree120_fiveg_10db\",\n                                        vlan_id=vlan, dut_name=dut_name, raw_lines=val)\n            report_name = rvr_o.report_name[0]['LAST'][\"response\"].split(\":::\")[1].split(\"/\")[-1]\n            print(\"report name \", report_name)\n            entries = os.listdir(\"../reports/\" + report_name + '/')\n            print(\"entries\", entries)\n            lf_tools.attach_report_graphs(report_name=report_name,\n                                          pdf_name=\"Rate vs Range \")\n            kpi = False\n            for i in entries:\n                if \"kpi.csv\" in i:\n                    kpi = i\n            if kpi:\n                allure.attach.file(source=\"../reports/\" + report_name + \"/\" + kpi,\n                                   name=\"kpi.csv\")\n    \n            print(\"Test Completed... Cleaning up Stations\")\n            lf_test.Client_disconnect(station_name=station_names_fiveg)\n    \n            kpi_val = lf_tools.read_kpi_file(column_name=[\"numeric-score\"], dir_name=report_name)\n            print(type(kpi_val))\n            print(kpi_val)\n            print(str(kpi_val[0])[1:-1])\n            if str(kpi_val) == \"empty\":\n                print(\"kpi is empty, station did not got ip, Test failed\")\n                allure.attach(name=\"Kpi Data\", body=\"station did not got ip Test failed.\")\n                assert False\n            else:\n                if float(str(kpi_val[0])[1:-1]) > float(250):\n                    print(\"Test passed successfully\")\n                    allure.attach(name=\"Kpi Data\", body=str(kpi_val))\n                    assert True\n                else:\n                    print(\" valueTest faled due to lesser\")\n                    allure.attach(name=\"Kpi Data\", body=str(kpi_val))\n>                   assert False\nE                   assert False\n\ne2e/advanced/spatial_consistency/wpa2_personal/test_bridge_spatial.py:881: AssertionError"}, "attachments": [{"name": "Rate vs Range ", "source": "e3ff4837-3958-44af-a3a9-48a5e38e3cbb-attachment.attach"}, {"name": "chart-1.png", "source": "8a610297-3618-43a6-8bd8-9668a7e147f4-attachment.attach", "type": "image/png"}, {"name": "chart-2.png", "source": "ca74ca38-b400-4793-b8b0-5eb3cb00ea98-attachment.attach", "type": "image/png"}, {"name": "chart-3.png", "source": "9a1f7270-5091-4fea-8eae-5c5745fbb186-attachment.attach", "type": "image/png"}, {"name": "chart-4.png", "source": "f203e210-0969-4eae-a1e1-2bf0e46e7392-attachment.attach", "type": "image/png"}, {"name": "kpi-chart-0.png", "source": "62cd46b2-eff6-44c6-94a0-2e52d62dec00-attachment.attach", "type": "image/png"}, {"name": "kpi.csv", "source": "e27a00ed-9d0a-4ac6-a3b2-2facdde9ed83-attachment.attach"}, {"name": "Kpi Data", "source": "2015317a-152c-452d-ae8d-cd401ae61767-attachment.attach"}], "parameters": [{"name": "setup_profiles", "value": "{'mode': 'BRIDGE', 'ssid_modes': {'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['2G'], 'security_key': 'something', 'security': 'psk2'}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['5G'], 'security_key': 'something', 'security': 'psk2'}]}, 'rf': {}, 'radius': False}"}], "start": 1639372145468, "stop": 1639372279221, "uuid": "c368d707-eee5-47fe-a48c-388f8978ba76", "historyId": "78552c8df7b1aa56c60f38ef2f97e5c8", "testCaseId": "d8128be52e399b17034e381ae2abf309", "fullName": "e2e.advanced.spatial_consistency.wpa2_personal.test_bridge_spatial.Test_SpatialConsistency_Bridge#test_nss1_wpa2_personal_5g_10db_120degree", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "degree120_nss1_10db"}, {"name": "tag", "value": "advance"}, {"name": "tag", "value": "spatial_consistency"}, {"name": "tag", "value": "bridge"}, {"name": "tag", "value": "wpa2_personal"}, {"name": "tag", "value": "fiveg"}, {"name": "parentSuite", "value": "e2e.advanced.spatial_consistency.wpa2_personal"}, {"name": "suite", "value": "test_bridge_spatial"}, {"name": "subSuite", "value": "Test_SpatialConsistency_Bridge"}, {"name": "host", "value": "advanced-ci-37-77bsb"}, {"name": "thread", "value": "7-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.advanced.spatial_consistency.wpa2_personal.test_bridge_spatial"}], "links": [{"type": "test_case", "url": "https://telecominfraproject.atlassian.net/browse/WIFI-5059", "name": "WIFI-5059"}]}
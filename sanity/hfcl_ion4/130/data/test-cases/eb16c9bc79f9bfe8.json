{
  "uid" : "eb16c9bc79f9bfe8",
  "name" : "test_controller_connectivity",
  "fullName" : "test_connectivity.TestResources#test_controller_connectivity",
  "historyId" : "29ddc2cc8da971f63eac960bf88db5ea",
  "time" : {
    "start" : 1639140134754,
    "stop" : 1639140134754,
    "duration" : 0
  },
  "description" : "Test case to verify cloud Controller Connectivity",
  "descriptionHtml" : "<p>Test case to verify cloud Controller Connectivity</p>\n",
  "status" : "broken",
  "statusMessage" : "NameError: Invalid response code.",
  "statusTrace" : "fixtures_ver = <fixtures_2x.Fixtures_2x object at 0x7fef6bc5cbe0>\n\n    @pytest.fixture(scope=\"session\")\n    def get_sdk_version(fixtures_ver):\n>       version = fixtures_ver.get_sdk_version()\n\nconftest.py:264: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures_2x.py:355: in get_sdk_version\n    version = self.controller_obj.get_sdk_version()\n../libs/controller/controller_2x/controller.py:182: in get_sdk_version\n    self.check_response(\"GET\", resp, self.make_headers(), \"\", uri)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <controller.controller_2x.controller.Controller object at 0x7fef6bc5c9d0>\ncmd = 'GET', response = <Response [403]>\nheaders = {'Authorization': 'Bearer d085436adcbde2d505800ff009750d165e8ff2d16fe95de0f8d3ed3638c30631', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=10, max=1000'}\ndata_str = ''\nurl = 'https://gw-8d7b7494.cicd.lab.wlan.tip.build:16002/api/v1/system/?command=info'\n\n    def check_response(self, cmd, response, headers, data_str, url):\n        if response.status_code >= 400:\n            if response.status_code >= 400:\n                print(\"check-response: ERROR, url: \", url)\n            else:\n                print(\"check-response: url: \", url)\n            print(\"Command: \", cmd)\n            print(\"response-status: \", response.status_code)\n            print(\"response-headers: \", response.headers)\n            print(\"response-content: \", response.content)\n            print(\"headers: \", headers)\n            print(\"data-str: \", data_str)\n    \n        if response.status_code >= 400:\n            # if True:\n>           raise NameError(\"Invalid response code.\")\nE           NameError: Invalid response code.\n\n../libs/controller/controller_2x/controller.py:154: NameError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "testbed",
    "time" : {
      "start" : 1639140134760,
      "stop" : 1639140134760,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1639140134760,
      "stop" : 1639140134760,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_sdk_version",
    "time" : {
      "start" : 1639140134825,
      "stop" : 1639140134867,
      "duration" : 42
    },
    "status" : "broken",
    "statusMessage" : "NameError: Invalid response code.\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/wlan-testing/tests/conftest.py\", line 264, in get_sdk_version\n    version = fixtures_ver.get_sdk_version()\n  File \"/wlan-testing/tests/fixtures_2x.py\", line 355, in get_sdk_version\n    version = self.controller_obj.get_sdk_version()\n  File \"/wlan-testing/tests/../libs/controller/controller_2x/controller.py\", line 182, in get_sdk_version\n    self.check_response(\"GET\", resp, self.make_headers(), \"\", uri)\n  File \"/wlan-testing/tests/../libs/controller/controller_2x/controller.py\", line 154, in check_response\n    raise NameError(\"Invalid response code.\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "add_allure_environment_property",
    "time" : {
      "start" : 1639140134759,
      "stop" : 1639140134760,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fixtures_ver",
    "time" : {
      "start" : 1639140134761,
      "stop" : 1639140134825,
      "duration" : 64
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1639140137049,
      "stop" : 1639140137049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "testbed::0",
    "time" : {
      "start" : 1639140250365,
      "stop" : 1639140250365,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1639140250352,
      "stop" : 1639140250353,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "add_allure_environment_property::0",
    "time" : {
      "start" : 1639140250366,
      "stop" : 1639140250366,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fixtures_ver::0",
    "time" : {
      "start" : 1639140250160,
      "stop" : 1639140250160,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1639140250557,
      "stop" : 1639140250557,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "sanity_55"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "test_cloud_controller"
  }, {
    "name" : "tag",
    "value" : "test_resources"
  }, {
    "name" : "tag",
    "value" : "uc_sanity"
  }, {
    "name" : "suite",
    "value" : "test_connectivity"
  }, {
    "name" : "subSuite",
    "value" : "TestResources"
  }, {
    "name" : "host",
    "value" : "testing-130-9s574"
  }, {
    "name" : "thread",
    "value" : "14-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_connectivity"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "test_controller_connectivity",
    "type" : "test_case"
  }, {
    "name" : "Test Resources",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "ed647b6922f5b4c0",
        "status" : "passed",
        "time" : {
          "start" : 1639083662157,
          "stop" : 1639083662232,
          "duration" : 75
        }
      }, {
        "uid" : "487dad67832d9d2f",
        "status" : "passed",
        "time" : {
          "start" : 1638911431215,
          "stop" : 1638911431269,
          "duration" : 54
        }
      }, {
        "uid" : "885e8c3d745af389",
        "status" : "broken",
        "statusDetails" : "NameError: Invalid response code.",
        "time" : {
          "start" : 1638875788332,
          "stop" : 1638875788332,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "sanity_55", "test_resources", "sanity", "uc_sanity", "test_cloud_controller" ]
  },
  "source" : "eb16c9bc79f9bfe8.json",
  "parameterValues" : [ ]
}
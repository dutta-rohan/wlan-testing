{"name": "test_secservice_get_uptime", "status": "broken", "statusDetails": {"message": "NameError: Invalid response code.", "trace": "fixtures_ver = <fixtures_2x.Fixtures_2x object at 0x7feaf0db2be0>\n\n    @pytest.fixture(scope=\"session\")\n    def get_sdk_version(fixtures_ver):\n>       version = fixtures_ver.get_sdk_version()\n\nconftest.py:264: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures_2x.py:355: in get_sdk_version\n    version = self.controller_obj.get_sdk_version()\n../libs/controller/controller_2x/controller.py:182: in get_sdk_version\n    self.check_response(\"GET\", resp, self.make_headers(), \"\", uri)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <controller.controller_2x.controller.Controller object at 0x7feaf0db2bb0>\ncmd = 'GET', response = <Response [403]>\nheaders = {'Authorization': 'Bearer 0976038c544e8e32f8b07a3345dc4a2eb76cf108c7ad95c442ef8206a7e974c6', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=10, max=1000'}\ndata_str = ''\nurl = 'https://gw-42841568.cicd.lab.wlan.tip.build:16002/api/v1/system/?command=info'\n\n    def check_response(self, cmd, response, headers, data_str, url):\n        if response.status_code >= 400:\n            if response.status_code >= 400:\n                print(\"check-response: ERROR, url: \", url)\n            else:\n                print(\"check-response: url: \", url)\n            print(\"Command: \", cmd)\n            print(\"response-status: \", response.status_code)\n            print(\"response-headers: \", response.headers)\n            print(\"response-content: \", response.content)\n            print(\"headers: \", headers)\n            print(\"data-str: \", data_str)\n    \n        if response.status_code >= 400:\n            # if True:\n>           raise NameError(\"Invalid response code.\")\nE           NameError: Invalid response code.\n\n../libs/controller/controller_2x/controller.py:154: NameError"}, "description": "\n            Test the system endpoint to verify the uptime of the service\n            WIFI-3451\n        ", "start": 1639138310571, "stop": 1639138310571, "uuid": "e5b26869-6549-41b0-a349-b649a961f043", "historyId": "2301fd30153465ee777705841e9dffb1", "testCaseId": "7570d01ec36911de75a6f4f9dd92e74d", "fullName": "controller_tests.ucentral_gateway.test_securityservice.TestUcentralSecService#test_secservice_get_uptime", "labels": [{"name": "feature", "value": "SDK REST API"}, {"name": "tag", "value": "sdk_restapi"}, {"name": "tag", "value": "uc_sanity"}, {"name": "parentSuite", "value": "controller_tests.ucentral_gateway"}, {"name": "suite", "value": "test_securityservice"}, {"name": "subSuite", "value": "TestUcentralSecService"}, {"name": "host", "value": "testing-130-j8nb6"}, {"name": "thread", "value": "14-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "controller_tests.ucentral_gateway.test_securityservice"}]}
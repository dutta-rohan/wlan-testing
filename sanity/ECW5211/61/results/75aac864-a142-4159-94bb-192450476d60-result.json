{"name": "test_firmware_upgrade_status_gateway", "status": "broken", "statusDetails": {"message": "NameError: Invalid response code.", "trace": "fixtures_ver = <fixtures_2x.Fixtures_2x object at 0x7f6fd53be9a0>\n\n    @pytest.fixture(scope=\"session\")\n    def get_sdk_version(fixtures_ver):\n>       version = fixtures_ver.get_sdk_version()\n\nconftest.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures_2x.py:322: in get_sdk_version\n    version = self.controller_obj.get_sdk_version()\n../libs/controller/controller_2x/controller.py:181: in get_sdk_version\n    self.check_response(\"GET\", resp, self.make_headers(), \"\", uri)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <controller.controller_2x.controller.Controller object at 0x7f6fd53bea30>\ncmd = 'GET', response = <Response [403]>\nheaders = {'Authorization': 'Bearer 31f5c74a1f369cb341b482c7b2b1490420ca9cb5e2ac4731132438a14937339e', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=10, max=1000'}\ndata_str = ''\nurl = 'https://gw-0b55cad2.cicd.lab.wlan.tip.build:16002/api/v1/system/?command=info'\n\n    def check_response(self, cmd, response, headers, data_str, url):\n        if response.status_code >= 400:\n            if response.status_code >= 400:\n                print(\"check-response: ERROR, url: \", url)\n            else:\n                print(\"check-response: url: \", url)\n            print(\"Command: \", cmd)\n            print(\"response-status: \", response.status_code)\n            print(\"response-headers: \", response.headers)\n            print(\"response-content: \", response.content)\n            print(\"headers: \", headers)\n            print(\"data-str: \", data_str)\n    \n        if response.status_code >= 400:\n            # if True:\n>           raise NameError(\"Invalid response code.\")\nE           NameError: Invalid response code.\n\n../libs/controller/controller_2x/controller.py:153: NameError"}, "start": 1636665910957, "stop": 1636665910957, "uuid": "b7f11883-7d2d-417c-ad6b-b5046f4bb4d7", "historyId": "9317dff433bd6cfcbbbf4023245d7067", "testCaseId": "9083a4c43940d88d440139b6c4f5411e", "fullName": "test_connectivity.TestFMS#test_firmware_upgrade_status_gateway", "labels": [{"name": "tag", "value": "test_firmware_gw"}, {"name": "tag", "value": "uc_sanity"}, {"name": "tag", "value": "uc_firmware"}, {"name": "tag", "value": "sanity_55"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "test_resources"}, {"name": "suite", "value": "test_connectivity"}, {"name": "subSuite", "value": "TestFMS"}, {"name": "host", "value": "testing-61-vnkrt"}, {"name": "thread", "value": "387-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_connectivity"}], "links": [{"type": "test_case", "name": "Firmware Management"}]}
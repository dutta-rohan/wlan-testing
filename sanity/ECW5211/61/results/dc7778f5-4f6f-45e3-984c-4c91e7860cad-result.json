{"name": "test_wpa_enterprise_5g[setup_profiles0]", "status": "broken", "statusDetails": {"message": "NameError: Invalid response code.", "trace": "fixtures_ver = <fixtures_2x.Fixtures_2x object at 0x7f6fd53be9a0>\n\n    @pytest.fixture(scope=\"session\")\n    def get_sdk_version(fixtures_ver):\n>       version = fixtures_ver.get_sdk_version()\n\nconftest.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures_2x.py:322: in get_sdk_version\n    version = self.controller_obj.get_sdk_version()\n../libs/controller/controller_2x/controller.py:181: in get_sdk_version\n    self.check_response(\"GET\", resp, self.make_headers(), \"\", uri)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <controller.controller_2x.controller.Controller object at 0x7f6fd53bea30>\ncmd = 'GET', response = <Response [403]>\nheaders = {'Authorization': 'Bearer 31f5c74a1f369cb341b482c7b2b1490420ca9cb5e2ac4731132438a14937339e', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=10, max=1000'}\ndata_str = ''\nurl = 'https://gw-0b55cad2.cicd.lab.wlan.tip.build:16002/api/v1/system/?command=info'\n\n    def check_response(self, cmd, response, headers, data_str, url):\n        if response.status_code >= 400:\n            if response.status_code >= 400:\n                print(\"check-response: ERROR, url: \", url)\n            else:\n                print(\"check-response: url: \", url)\n            print(\"Command: \", cmd)\n            print(\"response-status: \", response.status_code)\n            print(\"response-headers: \", response.headers)\n            print(\"response-content: \", response.content)\n            print(\"headers: \", headers)\n            print(\"data-str: \", data_str)\n    \n        if response.status_code >= 400:\n            # if True:\n>           raise NameError(\"Invalid response code.\")\nE           NameError: Invalid response code.\n\n../libs/controller/controller_2x/controller.py:153: NameError"}, "parameters": [{"name": "setup_profiles", "value": "{'mode': 'NAT', 'ssid_modes': {'wpa_enterprise': [{'ssid_name': 'ssid_wpa_eap_2g', 'appliedRadios': ['2G']}, {'ssid_name': 'ssid_wpa_eap_5g', 'appliedRadios': ['5G']}], 'wpa2_enterprise': [{'ssid_name': 'ssid_wpa2_eap_2g', 'appliedRadios': ['2G']}, {'ssid_name': 'ssid_wpa2_eap_5g', 'appliedRadios': ['5G']}], 'wpa3_enterprise': [{'ssid_name': 'ssid_wpa3_eap_2g', 'appliedRadios': ['2G']}, {'ssid_name': 'ssid_wpa3_eap_5g', 'appliedRadios': ['5G']}]}, 'rf': {}, 'radius': True}"}], "start": 1636665923336, "stop": 1636665923336, "uuid": "e5969b81-a9c2-4242-8dfb-91fbd973ee89", "historyId": "e64044a3057b06e78b02bd5d11336ce8", "testCaseId": "1837a5fd7639c4e00d4e62c9f73bba8c", "fullName": "e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity.test_enterprise_ttls.TestNATModeEnterpriseTTLSSuiteOne#test_wpa_enterprise_5g", "labels": [{"name": "tag", "value": "client_connectivity"}, {"name": "tag", "value": "uc_sanity"}, {"name": "tag", "value": "wpa_enterprise"}, {"name": "tag", "value": "nat"}, {"name": "tag", "value": "ucentral"}, {"name": "tag", "value": "fiveg"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "enterprise"}, {"name": "tag", "value": "ttls"}, {"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity"}, {"name": "suite", "value": "test_enterprise_ttls"}, {"name": "subSuite", "value": "TestNATModeEnterpriseTTLSSuiteOne"}, {"name": "host", "value": "testing-61-vnkrt"}, {"name": "thread", "value": "387-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity.test_enterprise_ttls"}]}
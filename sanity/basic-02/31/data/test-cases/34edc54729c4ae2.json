{
  "uid" : "34edc54729c4ae2",
  "name" : "test_wpa2_personal_ssid_5g[setup_profiles0]",
  "fullName" : "e2e.basic.validation_of_operating_modes.vlan_mode.client_connectivity.test_general_security_modes.TestvlanModeConnectivitySuiteA#test_wpa2_personal_ssid_5g",
  "historyId" : "b69344e8483d7250fac8d11bd729add7",
  "time" : {
    "start" : 1624570911441,
    "stop" : 1624570989419,
    "duration" : 77978
  },
  "description" : "Client Connectivity wpa2_personal ssid 5G\n           pytest -m \"client_connectivity and vlan and general and wpa2_personal and fiveg\"\n        ",
  "descriptionHtml" : "<p>Client Connectivity wpa2_personal ssid 5G\npytest -m &quot;client_connectivity and vlan and general and wpa2_personal and fiveg&quot;</p>\n",
  "status" : "broken",
  "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 21:43:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=2029\",\n  \"timestamp\" : 1624570993048\n}",
  "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7efe383a26d0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:612: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7efe380fb130>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=2029'\nquery_params = [('profileId', 2029)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiJlZDkwMDM1Mi1jMTk2LTQ1OWItYmFkMi1mMT...xcDp/BPtepNln4fRd4RVS.ayp6odpoFauS.', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 21:43:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=2029\",\nE             \"timestamp\" : 1624570993048\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "radius_info",
    "time" : {
      "start" : 1624562963138,
      "stop" : 1624562963138,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d52cec00bc62d32b",
      "name" : "Radius server Info: ",
      "source" : "d52cec00bc62d32b.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1624562959306,
      "stop" : 1624562959792,
      "duration" : 486
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_lanforge_data",
    "time" : {
      "start" : 1624566087760,
      "stop" : 1624566087760,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_influx",
    "time" : {
      "start" : 1624566087760,
      "stop" : 1624566087760,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud",
    "time" : {
      "start" : 1624562943876,
      "stop" : 1624562944015,
      "duration" : 139
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624562941393,
      "stop" : 1624562941393,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware",
    "time" : {
      "start" : 1624562944015,
      "stop" : 1624562944015,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware",
    "time" : {
      "start" : 1624562944016,
      "stop" : 1624562947598,
      "duration" : 3582
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d3fdad7caebe1298",
      "name" : "APNOS LIbrary: ",
      "source" : "d3fdad7caebe1298.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "b14696385b7a4377",
      "name" : "openwrt_ctl Setup",
      "source" : "b14696385b7a4377.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "aa1daa18f07cdb09",
      "name" : "get_active_firmware ",
      "source" : "aa1daa18f07cdb09.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_vif_state",
    "time" : {
      "start" : 1624570430787,
      "stop" : 1624570436839,
      "duration" : 6052
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "81fe539e1cc172cb",
      "name" : "APNOS LIbrary: ",
      "source" : "81fe539e1cc172cb.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "1e977ff14a36733",
      "name" : "openwrt_ctl Setup",
      "source" : "1e977ff14a36733.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "1d095a8945766f5d",
      "name" : "vif config Output Msg: ",
      "source" : "1d095a8945766f5d.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "e830e6e1e1b54fd8",
      "name" : "vif config Err Msg: ",
      "source" : "e830e6e1e1b54fd8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "61154c21e1b593eb",
      "name" : "get_vif_config_ssids ",
      "source" : "61154c21e1b593eb.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "9c5583f10fae9ae6",
      "name" : "vif state Output Msg: ",
      "source" : "9c5583f10fae9ae6.attach",
      "type" : "text/plain",
      "size" : 11376
    }, {
      "uid" : "e3117b8a5cfa44a0",
      "name" : "vif state Err Msg: ",
      "source" : "e3117b8a5cfa44a0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5bb6acc5d142e543",
      "name" : "get_vif_state_ssids ",
      "source" : "5bb6acc5d142e543.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "38040d3f0646669a",
      "name" : "vif_state",
      "source" : "38040d3f0646669a.attach",
      "type" : "text/plain",
      "size" : 94
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 9,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624562959303,
      "stop" : 1624562959303,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624562959303,
      "stop" : 1624562959305,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "967743d3b710bfd8",
      "name" : "Test Cases Requires: ",
      "source" : "967743d3b710bfd8.attach",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624562941392,
      "stop" : 1624562941392,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f5177fb3b56a0753",
      "name" : "Testbed Selected: ",
      "source" : "f5177fb3b56a0753.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_firmware",
    "time" : {
      "start" : 1624562943788,
      "stop" : 1624562943789,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624562943567,
      "stop" : 1624562943788,
      "duration" : 221
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ce4d764cd9926768",
      "name" : "Controller Instantiated: ",
      "source" : "ce4d764cd9926768.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "station_names_fiveg",
    "time" : {
      "start" : 1624566276142,
      "stop" : 1624566276142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624562941392,
      "stop" : 1624562941392,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e6608819254b7a34",
      "name" : "Testbed Selected : ",
      "source" : "e6608819254b7a34.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624562943789,
      "stop" : 1624562943876,
      "duration" : 87
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624562941393,
      "stop" : 1624562943567,
      "duration" : 2174
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8c22912a269593af",
      "name" : "added openwrtctl.py to :",
      "source" : "8c22912a269593af.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "48e9517a392c299e",
      "name" : "APNOS LIbrary: ",
      "source" : "48e9517a392c299e.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "9954e97dd8aa1491",
      "name" : "openwrt_ctl Setup",
      "source" : "9954e97dd8aa1491.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "should_upload_firmware",
    "time" : {
      "start" : 1624562944016,
      "stop" : 1624562944016,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware",
    "time" : {
      "start" : 1624562944015,
      "stop" : 1624562944015,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624570317882,
      "stop" : 1624570430786,
      "duration" : 112904
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e864d225addfc837",
      "name" : "RF Profile Created : wifi6",
      "source" : "e864d225addfc837.attach",
      "type" : "text/plain",
      "size" : 42
    }, {
      "uid" : "bff8a3980095080e",
      "name" : "SSID Profile Created",
      "source" : "bff8a3980095080e.attach",
      "type" : "text/plain",
      "size" : 2808
    }, {
      "uid" : "de21fc2f114387d3",
      "name" : "SSID Profile Created",
      "source" : "de21fc2f114387d3.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "3913913cc58af83",
      "name" : "SSID Profile Created",
      "source" : "3913913cc58af83.attach",
      "type" : "text/plain",
      "size" : 2801
    }, {
      "uid" : "1d9de98398931097",
      "name" : "SSID Profile Created",
      "source" : "1d9de98398931097.attach",
      "type" : "text/plain",
      "size" : 2819
    }, {
      "uid" : "2e565c7b6596be8d",
      "name" : "SSID Profile Created",
      "source" : "2e565c7b6596be8d.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "f1c38f7d6d5aaa00",
      "name" : "SSID Profile Created",
      "source" : "f1c38f7d6d5aaa00.attach",
      "type" : "text/plain",
      "size" : 2835
    }, {
      "uid" : "5da90918b1476c3f",
      "name" : "Equipment AP Profile Created",
      "source" : "5da90918b1476c3f.attach",
      "type" : "text/plain",
      "size" : 46
    }, {
      "uid" : "24154e2ec22d1fb4",
      "name" : "APNOS LIbrary: ",
      "source" : "24154e2ec22d1fb4.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "a4234b524b67f65e",
      "name" : "openwrt_ctl Setup",
      "source" : "a4234b524b67f65e.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "5046ac7a4a0d4da5",
      "name" : "vif config Output Msg: ",
      "source" : "5046ac7a4a0d4da5.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "c6042e2366b59285",
      "name" : "vif config Err Msg: ",
      "source" : "c6042e2366b59285.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a678915b1a06fb5e",
      "name" : "get_vif_config_ssids ",
      "source" : "a678915b1a06fb5e.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "50d3ecbf8729538b",
      "name" : "vif config Output Msg: ",
      "source" : "50d3ecbf8729538b.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "be950ae132b937b9",
      "name" : "vif config Err Msg: ",
      "source" : "be950ae132b937b9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e2a7310b6f4bfa39",
      "name" : "get_vif_config_ssids ",
      "source" : "e2a7310b6f4bfa39.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "7bef762a3bd69dd9",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "7bef762a3bd69dd9.attach",
      "type" : "text/plain",
      "size" : 230
    }, {
      "uid" : "3724a03c3866d50",
      "name" : "APNOS LIbrary: ",
      "source" : "3724a03c3866d50.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "8acbf20b327d922c",
      "name" : "openwrt_ctl Setup",
      "source" : "8acbf20b327d922c.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "68c338ed6a43c376",
      "name" : "vif state Output Msg: ",
      "source" : "68c338ed6a43c376.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "3f60af60d883a4bb",
      "name" : "vif state Err Msg: ",
      "source" : "3f60af60d883a4bb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "69992fc0e96a4c9",
      "name" : "get_vif_state_ssids ",
      "source" : "69992fc0e96a4c9.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b86988bb56d5bee1",
      "name" : "vif config Output Msg: ",
      "source" : "b86988bb56d5bee1.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "a01ba759d30e634",
      "name" : "vif config Err Msg: ",
      "source" : "a01ba759d30e634.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8d0f9ad6e28d5863",
      "name" : "get_vif_config_ssids ",
      "source" : "8d0f9ad6e28d5863.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "351a20035d39ab7a",
      "name" : "vif state Output Msg: ",
      "source" : "351a20035d39ab7a.attach",
      "type" : "text/plain",
      "size" : 7712
    }, {
      "uid" : "b53bee0916dcb8b1",
      "name" : "vif state Err Msg: ",
      "source" : "b53bee0916dcb8b1.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "85bc89acf9504839",
      "name" : "get_vif_state_ssids ",
      "source" : "85bc89acf9504839.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "d45413cd10f9526f",
      "name" : "vif config Output Msg: ",
      "source" : "d45413cd10f9526f.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "d15e315d2dd6f931",
      "name" : "vif config Err Msg: ",
      "source" : "d15e315d2dd6f931.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "72b18ac17e3296de",
      "name" : "get_vif_config_ssids ",
      "source" : "72b18ac17e3296de.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "de944205a4e6a5d5",
      "name" : "vif state Output Msg: ",
      "source" : "de944205a4e6a5d5.attach",
      "type" : "text/plain",
      "size" : 7712
    }, {
      "uid" : "b6303bccc06159c8",
      "name" : "vif state Err Msg: ",
      "source" : "b6303bccc06159c8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d8bf675d9c74bf03",
      "name" : "get_vif_state_ssids ",
      "source" : "d8bf675d9c74bf03.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "9dc23668b9eb4365",
      "name" : "vif config Output Msg: ",
      "source" : "9dc23668b9eb4365.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "c8b60f844d536a96",
      "name" : "vif config Err Msg: ",
      "source" : "c8b60f844d536a96.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "57a18514a41f27b5",
      "name" : "get_vif_config_ssids ",
      "source" : "57a18514a41f27b5.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "e94599d2fb3ccc2c",
      "name" : "vif state Output Msg: ",
      "source" : "e94599d2fb3ccc2c.attach",
      "type" : "text/plain",
      "size" : 4047
    }, {
      "uid" : "559b30e4a9f191ea",
      "name" : "vif state Err Msg: ",
      "source" : "559b30e4a9f191ea.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a68140145044f96b",
      "name" : "get_vif_state_ssids ",
      "source" : "a68140145044f96b.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "1163a02683f47e1e",
      "name" : "vif config Output Msg: ",
      "source" : "1163a02683f47e1e.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "7137732d1de5bc88",
      "name" : "vif config Err Msg: ",
      "source" : "7137732d1de5bc88.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8c134c86754b8416",
      "name" : "get_vif_config_ssids ",
      "source" : "8c134c86754b8416.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "a69107e4775f86f7",
      "name" : "vif state Output Msg: ",
      "source" : "a69107e4775f86f7.attach",
      "type" : "text/plain",
      "size" : 4047
    }, {
      "uid" : "3c08dbae6edcb13f",
      "name" : "vif state Err Msg: ",
      "source" : "3c08dbae6edcb13f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "9c90d63723d0714b",
      "name" : "get_vif_state_ssids ",
      "source" : "9c90d63723d0714b.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "585168ed331c876a",
      "name" : "vif config Output Msg: ",
      "source" : "585168ed331c876a.attach",
      "type" : "text/plain",
      "size" : 10262
    }, {
      "uid" : "fd2c30b3bae5151a",
      "name" : "vif config Err Msg: ",
      "source" : "fd2c30b3bae5151a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3d7e9d2ed5a7afa7",
      "name" : "get_vif_config_ssids ",
      "source" : "3d7e9d2ed5a7afa7.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "e2ebbb73d640eb6",
      "name" : "vif state Output Msg: ",
      "source" : "e2ebbb73d640eb6.attach",
      "type" : "text/plain",
      "size" : 11376
    }, {
      "uid" : "25cec0d0ddd7bc2d",
      "name" : "vif state Err Msg: ",
      "source" : "25cec0d0ddd7bc2d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "77873b02a8e929f9",
      "name" : "get_vif_state_ssids ",
      "source" : "77873b02a8e929f9.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "e19c900c611e23f",
      "name" : "vif config Output Msg: ",
      "source" : "e19c900c611e23f.attach",
      "type" : "text/plain",
      "size" : 10106
    }, {
      "uid" : "41fc38d30df9c9a0",
      "name" : "vif config Err Msg: ",
      "source" : "41fc38d30df9c9a0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bbcc70833ecb75f3",
      "name" : "get_vif_config_ssids ",
      "source" : "bbcc70833ecb75f3.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "7cd1034f56936dda",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "7cd1034f56936dda.attach",
      "type" : "text/plain",
      "size" : 212
    }, {
      "uid" : "9bb1bff43ea1318b",
      "name" : "AP LOgs: ",
      "source" : "9bb1bff43ea1318b.attach",
      "type" : "text/plain",
      "size" : 70145
    }, {
      "uid" : "4e918223032542e",
      "name" : "vif state Output Msg: ",
      "source" : "4e918223032542e.attach",
      "type" : "text/plain",
      "size" : 11376
    }, {
      "uid" : "8204fbebd0e7667b",
      "name" : "vif state Err Msg: ",
      "source" : "8204fbebd0e7667b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bb58a9bd456a7d0f",
      "name" : "SSID DATA IN LF DUT",
      "source" : "bb58a9bd456a7d0f.attach",
      "type" : "text/plain",
      "size" : 524
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 60,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_test",
    "time" : {
      "start" : 1624566087761,
      "stop" : 1624566087761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624562959303,
      "stop" : 1624562959303,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report",
    "time" : {
      "start" : 1624562951214,
      "stop" : 1624562951214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624562959302,
      "stop" : 1624562959303,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "52a3184df5b48496",
      "name" : "VLAN Created: ",
      "source" : "52a3184df5b48496.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "test_cases",
    "time" : {
      "start" : 1624562951214,
      "stop" : 1624562951214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1624562959792,
      "stop" : 1624562963138,
      "duration" : 3346
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run",
    "time" : {
      "start" : 1624562947599,
      "stop" : 1624562951213,
      "duration" : 3614
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5d9542fb2634a1d8",
      "name" : "APNOS LIbrary: ",
      "source" : "5d9542fb2634a1d8.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "bde95d191d80adbe",
      "name" : "openwrt_ctl Setup",
      "source" : "bde95d191d80adbe.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "86b525e6a243f1c8",
      "name" : "get_active_firmware ",
      "source" : "86b525e6a243f1c8.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "Client Connectivity wpa2_personal ssid 5G\n           pytest -m \"client_connectivity and vlan and general and wpa2_personal and fiveg\"\n        ",
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 21:43:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=2029\",\n  \"timestamp\" : 1624570993048\n}",
    "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7efe383a26d0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:612: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7efe380fb130>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=2029'\nquery_params = [('profileId', 2029)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiJlZDkwMDM1Mi1jMTk2LTQ1OWItYmFkMi1mMT...xcDp/BPtepNln4fRd4RVS.ayp6odpoFauS.', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 21:43:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=2029\",\nE             \"timestamp\" : 1624570993048\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "80fa2d5f2744dca",
      "name" : "wlan000",
      "source" : "80fa2d5f2744dca.attach",
      "type" : "text/plain",
      "size" : 1388
    }, {
      "uid" : "d3579bac96f727f",
      "name" : "5G WPA2 Client Connectivity Passed successfully - vlan modeTrue",
      "source" : "d3579bac96f727f.attach",
      "type" : "application/octet-stream",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624571333674,
      "stop" : 1624571333675,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1624571333690,
      "stop" : 1624571333690,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_lanforge_data::0",
    "time" : {
      "start" : 1624571333724,
      "stop" : 1624571333724,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_influx::0",
    "time" : {
      "start" : 1624571333723,
      "stop" : 1624571333723,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud::0",
    "time" : {
      "start" : 1624571333761,
      "stop" : 1624571333761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624571333923,
      "stop" : 1624571333923,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware::0",
    "time" : {
      "start" : 1624571333744,
      "stop" : 1624571333744,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware::0",
    "time" : {
      "start" : 1624571333731,
      "stop" : 1624571333731,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_vif_state::0",
    "time" : {
      "start" : 1624570989421,
      "stop" : 1624570989421,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624571333710,
      "stop" : 1624571333710,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624571333695,
      "stop" : 1624571333695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624571333980,
      "stop" : 1624571333980,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware::0",
    "time" : {
      "start" : 1624571333804,
      "stop" : 1624571333804,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624571333853,
      "stop" : 1624571333853,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624571333853,
      "stop" : 1624571333856,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a686b5ed0c53f3da",
      "name" : "Controller Teardown: ",
      "source" : "a686b5ed0c53f3da.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "station_names_fiveg::0",
    "time" : {
      "start" : 1624571333724,
      "stop" : 1624571333724,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624571334011,
      "stop" : 1624571334011,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624571333781,
      "stop" : 1624571333781,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624571333871,
      "stop" : 1624571333871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware::0",
    "time" : {
      "start" : 1624571333738,
      "stop" : 1624571333738,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware::0",
    "time" : {
      "start" : 1624571333755,
      "stop" : 1624571333755,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624570989422,
      "stop" : 1624570989422,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624570989422,
      "stop" : 1624570993051,
      "duration" : 3629
    },
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 21:43:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=2029\",\n  \"timestamp\" : 1624570993048\n}\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 612, in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n  File \"/wlan-testing/tests/../libs/controller/controller.py\", line 1254, in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 150, in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 209, in delete_profile_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 316, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 148, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 382, in request\n    return self.rest_client.DELETE(url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 259, in DELETE\n    return self.request(\"DELETE\", url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 227, in request\n    raise ApiException(http_resp=r)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "lf_test::0",
    "time" : {
      "start" : 1624571333720,
      "stop" : 1624571333720,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624571333705,
      "stop" : 1624571333705,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report::0",
    "time" : {
      "start" : 1624571333719,
      "stop" : 1624571333719,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624571333718,
      "stop" : 1624571333718,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases::0",
    "time" : {
      "start" : 1624571333719,
      "stop" : 1624571333720,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run::0",
    "time" : {
      "start" : 1624571333725,
      "stop" : 1624571333725,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "wpa2_personal 5 GHZ Band"
  }, {
    "name" : "feature",
    "value" : "vlan MODE CLIENT CONNECTIVITY"
  }, {
    "name" : "tag",
    "value" : "wpa2_personal"
  }, {
    "name" : "tag",
    "value" : "sanity_light"
  }, {
    "name" : "tag",
    "value" : "client_connectivity"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "general"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "suiteA"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.validation_of_operating_modes.vlan_mode.client_connectivity"
  }, {
    "name" : "suite",
    "value" : "test_general_security_modes"
  }, {
    "name" : "subSuite",
    "value" : "TestvlanModeConnectivitySuiteA"
  }, {
    "name" : "host",
    "value" : "testing-31-r86zk"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.validation_of_operating_modes.vlan_mode.client_connectivity.test_general_security_modes"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_open_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-open-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}, 'rf': {}, 'radius': False}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "f18252a5d41fb409",
        "status" : "passed",
        "time" : {
          "start" : 1624548673764,
          "stop" : 1624548749400,
          "duration" : 75636
        }
      } ]
    },
    "tags" : [ "general", "@pytest.mark.usefixtures('setup_profiles')", "vlan", "suiteA", "sanity", "wpa2_personal", "sanity_light", "client_connectivity", "fiveg" ]
  },
  "source" : "34edc54729c4ae2.json",
  "parameterValues" : [ "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_open_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-open-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}, 'rf': {}, 'radius': False}" ]
}
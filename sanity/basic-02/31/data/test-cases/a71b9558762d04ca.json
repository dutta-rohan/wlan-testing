{
  "uid" : "a71b9558762d04ca",
  "name" : "test_verify_vif_state[setup_profiles0]",
  "fullName" : "e2e.basic.configuration_tests.bridge_mode.test_enterprise_security_modes_configuration.TestSetupBridgeEnterpriseSuiteA#test_verify_vif_state",
  "historyId" : "87ad7779af7af3d867ca3d116944405f",
  "time" : {
    "start" : 1624563082403,
    "stop" : 1624563282504,
    "duration" : 200101
  },
  "description" : " VIF Config Suite B Enterprise ",
  "descriptionHtml" : "<p>VIF Config Suite B Enterprise</p>\n",
  "status" : "broken",
  "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 19:34:42 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1648\",\n  \"timestamp\" : 1624563282777\n}",
  "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7efe7c27dbe0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:612: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7efe7f7567f0>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=1648'\nquery_params = [('profileId', 1648)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiJiYmMyMGFhYi1iY2Q0LTQxOGItYTgwOS0zYT...ugedOM85LhKi.P0N9SwbC1rrgo.JC1YGrs1', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 19:34:42 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=1648\",\nE             \"timestamp\" : 1624563282777\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "radius_info",
    "time" : {
      "start" : 1624562963138,
      "stop" : 1624562963138,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d52cec00bc62d32b",
      "name" : "Radius server Info: ",
      "source" : "d52cec00bc62d32b.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1624562959306,
      "stop" : 1624562959792,
      "duration" : 486
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud",
    "time" : {
      "start" : 1624562943876,
      "stop" : 1624562944015,
      "duration" : 139
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624562941393,
      "stop" : 1624562941393,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware",
    "time" : {
      "start" : 1624562944015,
      "stop" : 1624562944015,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware",
    "time" : {
      "start" : 1624562944016,
      "stop" : 1624562947598,
      "duration" : 3582
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d3fdad7caebe1298",
      "name" : "APNOS LIbrary: ",
      "source" : "d3fdad7caebe1298.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "b14696385b7a4377",
      "name" : "openwrt_ctl Setup",
      "source" : "b14696385b7a4377.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "aa1daa18f07cdb09",
      "name" : "get_active_firmware ",
      "source" : "aa1daa18f07cdb09.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624562959303,
      "stop" : 1624562959303,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624562959303,
      "stop" : 1624562959305,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "967743d3b710bfd8",
      "name" : "Test Cases Requires: ",
      "source" : "967743d3b710bfd8.attach",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624562941392,
      "stop" : 1624562941392,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f5177fb3b56a0753",
      "name" : "Testbed Selected: ",
      "source" : "f5177fb3b56a0753.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_firmware",
    "time" : {
      "start" : 1624562943788,
      "stop" : 1624562943789,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624562943567,
      "stop" : 1624562943788,
      "duration" : 221
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ce4d764cd9926768",
      "name" : "Controller Instantiated: ",
      "source" : "ce4d764cd9926768.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624562941392,
      "stop" : 1624562941392,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e6608819254b7a34",
      "name" : "Testbed Selected : ",
      "source" : "e6608819254b7a34.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624562943789,
      "stop" : 1624562943876,
      "duration" : 87
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624562941393,
      "stop" : 1624562943567,
      "duration" : 2174
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8c22912a269593af",
      "name" : "added openwrtctl.py to :",
      "source" : "8c22912a269593af.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "48e9517a392c299e",
      "name" : "APNOS LIbrary: ",
      "source" : "48e9517a392c299e.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "9954e97dd8aa1491",
      "name" : "openwrt_ctl Setup",
      "source" : "9954e97dd8aa1491.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "should_upload_firmware",
    "time" : {
      "start" : 1624562944016,
      "stop" : 1624562944016,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware",
    "time" : {
      "start" : 1624562944015,
      "stop" : 1624562944015,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624562963138,
      "stop" : 1624563082373,
      "duration" : 119235
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2116edc4e8f7675c",
      "name" : "RF Profile Created : wifi6",
      "source" : "2116edc4e8f7675c.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "2b4a38cfcb494905",
      "name" : "Radius Profile Created",
      "source" : "2b4a38cfcb494905.attach",
      "type" : "text/plain",
      "size" : 179
    }, {
      "uid" : "d1a2e7640e26842",
      "name" : "SSID Profile Created",
      "source" : "d1a2e7640e26842.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "cd431bcab5edead5",
      "name" : "SSID Profile Created",
      "source" : "cd431bcab5edead5.attach",
      "type" : "text/plain",
      "size" : 2851
    }, {
      "uid" : "3c048193c0ea7f26",
      "name" : "SSID Profile Created",
      "source" : "3c048193c0ea7f26.attach",
      "type" : "text/plain",
      "size" : 2840
    }, {
      "uid" : "8e33a8b85d76dfd5",
      "name" : "SSID Profile Created",
      "source" : "8e33a8b85d76dfd5.attach",
      "type" : "text/plain",
      "size" : 2858
    }, {
      "uid" : "a89079ed95db44d8",
      "name" : "SSID Profile Created",
      "source" : "a89079ed95db44d8.attach",
      "type" : "text/plain",
      "size" : 2837
    }, {
      "uid" : "3f78c96e98358f09",
      "name" : "SSID Profile Created",
      "source" : "3f78c96e98358f09.attach",
      "type" : "text/plain",
      "size" : 2855
    }, {
      "uid" : "93c72c524b68928b",
      "name" : "Equipment AP Profile Created",
      "source" : "93c72c524b68928b.attach",
      "type" : "text/plain",
      "size" : 48
    }, {
      "uid" : "2389bf8cc3126aa8",
      "name" : "APNOS LIbrary: ",
      "source" : "2389bf8cc3126aa8.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "cc01913656b4d412",
      "name" : "openwrt_ctl Setup",
      "source" : "cc01913656b4d412.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "e2e326fc90b35c04",
      "name" : "vif config Output Msg: ",
      "source" : "e2e326fc90b35c04.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "c53cea934da24e69",
      "name" : "vif config Err Msg: ",
      "source" : "c53cea934da24e69.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "864d4512ff161cdb",
      "name" : "get_vif_config_ssids ",
      "source" : "864d4512ff161cdb.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "78785b1e347d743f",
      "name" : "vif config Output Msg: ",
      "source" : "78785b1e347d743f.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "e511a808ae60def7",
      "name" : "vif config Err Msg: ",
      "source" : "e511a808ae60def7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cec7c0b95902d771",
      "name" : "get_vif_config_ssids ",
      "source" : "cec7c0b95902d771.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "7cbc91f46112418e",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "7cbc91f46112418e.attach",
      "type" : "text/plain",
      "size" : 278
    }, {
      "uid" : "a1b26494a00c6d51",
      "name" : "APNOS LIbrary: ",
      "source" : "a1b26494a00c6d51.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "b545d77fae19e1bc",
      "name" : "openwrt_ctl Setup",
      "source" : "b545d77fae19e1bc.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "1f5be976a6e7cbc3",
      "name" : "vif state Output Msg: ",
      "source" : "1f5be976a6e7cbc3.attach",
      "type" : "text/plain",
      "size" : 4391
    }, {
      "uid" : "cd3f889eeaf6c147",
      "name" : "vif state Err Msg: ",
      "source" : "cd3f889eeaf6c147.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "88b4231cf5447e45",
      "name" : "get_vif_state_ssids ",
      "source" : "88b4231cf5447e45.attach",
      "type" : "text/plain",
      "size" : 38
    }, {
      "uid" : "85c10a79450e9bf",
      "name" : "vif config Output Msg: ",
      "source" : "85c10a79450e9bf.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "5f17c465bf4363f7",
      "name" : "vif config Err Msg: ",
      "source" : "5f17c465bf4363f7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5215711b83cb0404",
      "name" : "get_vif_config_ssids ",
      "source" : "5215711b83cb0404.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "351478e8e785a7a6",
      "name" : "vif state Output Msg: ",
      "source" : "351478e8e785a7a6.attach",
      "type" : "text/plain",
      "size" : 4391
    }, {
      "uid" : "e546358cc6eb095d",
      "name" : "vif state Err Msg: ",
      "source" : "e546358cc6eb095d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f2e99ba5365890f1",
      "name" : "get_vif_state_ssids ",
      "source" : "f2e99ba5365890f1.attach",
      "type" : "text/plain",
      "size" : 38
    }, {
      "uid" : "552305cde8e7942b",
      "name" : "vif config Output Msg: ",
      "source" : "552305cde8e7942b.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "81337db533c37050",
      "name" : "vif config Err Msg: ",
      "source" : "81337db533c37050.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "23e369f6b0c46524",
      "name" : "get_vif_config_ssids ",
      "source" : "23e369f6b0c46524.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "fbaa1427bc039b66",
      "name" : "vif state Output Msg: ",
      "source" : "fbaa1427bc039b66.attach",
      "type" : "text/plain",
      "size" : 4391
    }, {
      "uid" : "c819cd4e07cdaeef",
      "name" : "vif state Err Msg: ",
      "source" : "c819cd4e07cdaeef.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1829446444726b84",
      "name" : "get_vif_state_ssids ",
      "source" : "1829446444726b84.attach",
      "type" : "text/plain",
      "size" : 38
    }, {
      "uid" : "c6f7aa0cae35d363",
      "name" : "vif config Output Msg: ",
      "source" : "c6f7aa0cae35d363.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "3778600cf4ab753d",
      "name" : "vif config Err Msg: ",
      "source" : "3778600cf4ab753d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "710e17d308419a4e",
      "name" : "get_vif_config_ssids ",
      "source" : "710e17d308419a4e.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "21ad176231e6ce58",
      "name" : "vif state Output Msg: ",
      "source" : "21ad176231e6ce58.attach",
      "type" : "text/plain",
      "size" : 8328
    }, {
      "uid" : "963c997680775bb9",
      "name" : "vif state Err Msg: ",
      "source" : "963c997680775bb9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b0cd805f0aa7ecc5",
      "name" : "get_vif_state_ssids ",
      "source" : "b0cd805f0aa7ecc5.attach",
      "type" : "text/plain",
      "size" : 78
    }, {
      "uid" : "2ffe8d2910ce5060",
      "name" : "vif config Output Msg: ",
      "source" : "2ffe8d2910ce5060.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "53a7ab99284d3037",
      "name" : "vif config Err Msg: ",
      "source" : "53a7ab99284d3037.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8934b4672b4f3218",
      "name" : "get_vif_config_ssids ",
      "source" : "8934b4672b4f3218.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "e757b7cacc6ded51",
      "name" : "vif state Output Msg: ",
      "source" : "e757b7cacc6ded51.attach",
      "type" : "text/plain",
      "size" : 8894
    }, {
      "uid" : "61504a2cdf3e0266",
      "name" : "vif state Err Msg: ",
      "source" : "61504a2cdf3e0266.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4b7822b561f87427",
      "name" : "get_vif_state_ssids ",
      "source" : "4b7822b561f87427.attach",
      "type" : "text/plain",
      "size" : 78
    }, {
      "uid" : "2a466ebea9497da4",
      "name" : "vif config Output Msg: ",
      "source" : "2a466ebea9497da4.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "531375349ad89aa5",
      "name" : "vif config Err Msg: ",
      "source" : "531375349ad89aa5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f993227877e95508",
      "name" : "get_vif_config_ssids ",
      "source" : "f993227877e95508.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "9a8f62c9b544eac5",
      "name" : "vif state Output Msg: ",
      "source" : "9a8f62c9b544eac5.attach",
      "type" : "text/plain",
      "size" : 12263
    }, {
      "uid" : "a8b182658208eeed",
      "name" : "vif state Err Msg: ",
      "source" : "a8b182658208eeed.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a76f23a4615bad37",
      "name" : "get_vif_state_ssids ",
      "source" : "a76f23a4615bad37.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "3d1e1c795b6de70a",
      "name" : "vif config Output Msg: ",
      "source" : "3d1e1c795b6de70a.attach",
      "type" : "text/plain",
      "size" : 11145
    }, {
      "uid" : "fbf0211bb06e20d7",
      "name" : "vif config Err Msg: ",
      "source" : "fbf0211bb06e20d7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2fc201cbf2de176",
      "name" : "get_vif_config_ssids ",
      "source" : "2fc201cbf2de176.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "2aecc3058134bca",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "2aecc3058134bca.attach",
      "type" : "text/plain",
      "size" : 260
    }, {
      "uid" : "39744a9f4906f8ef",
      "name" : "AP LOgs: ",
      "source" : "39744a9f4906f8ef.attach",
      "type" : "text/plain",
      "size" : 70906
    }, {
      "uid" : "8877cdb0a6a99899",
      "name" : "vif state Output Msg: ",
      "source" : "8877cdb0a6a99899.attach",
      "type" : "text/plain",
      "size" : 12263
    }, {
      "uid" : "678dda26f861de56",
      "name" : "vif state Err Msg: ",
      "source" : "678dda26f861de56.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4d3d9e9510ea73f0",
      "name" : "SSID DATA IN LF DUT",
      "source" : "4d3d9e9510ea73f0.attach",
      "type" : "text/plain",
      "size" : 544
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 61,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624562959303,
      "stop" : 1624562959303,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report",
    "time" : {
      "start" : 1624562951214,
      "stop" : 1624562951214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624562959302,
      "stop" : 1624562959303,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "52a3184df5b48496",
      "name" : "VLAN Created: ",
      "source" : "52a3184df5b48496.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "test_cases",
    "time" : {
      "start" : 1624562951214,
      "stop" : 1624562951214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1624562959792,
      "stop" : 1624562963138,
      "duration" : 3346
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run",
    "time" : {
      "start" : 1624562947599,
      "stop" : 1624562951213,
      "duration" : 3614
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5d9542fb2634a1d8",
      "name" : "APNOS LIbrary: ",
      "source" : "5d9542fb2634a1d8.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "bde95d191d80adbe",
      "name" : "openwrt_ctl Setup",
      "source" : "bde95d191d80adbe.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "86b525e6a243f1c8",
      "name" : "get_active_firmware ",
      "source" : "86b525e6a243f1c8.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : " VIF Config Suite B Enterprise ",
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 19:34:42 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1648\",\n  \"timestamp\" : 1624563282777\n}",
    "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7efe7c27dbe0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:612: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7efe7f7567f0>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=1648'\nquery_params = [('profileId', 1648)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiJiYmMyMGFhYi1iY2Q0LTQxOGItYTgwOS0zYT...ugedOM85LhKi.P0N9SwbC1rrgo.JC1YGrs1', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 19:34:42 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=1648\",\nE             \"timestamp\" : 1624563282777\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "897c489018dd7433",
      "name" : "profile pushed successfully",
      "source" : "897c489018dd7433.attach",
      "type" : "application/octet-stream",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624571333674,
      "stop" : 1624571333675,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1624571333690,
      "stop" : 1624571333690,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud::0",
    "time" : {
      "start" : 1624571333761,
      "stop" : 1624571333761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624571333923,
      "stop" : 1624571333923,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware::0",
    "time" : {
      "start" : 1624571333744,
      "stop" : 1624571333744,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware::0",
    "time" : {
      "start" : 1624571333731,
      "stop" : 1624571333731,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624571333710,
      "stop" : 1624571333710,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624571333695,
      "stop" : 1624571333695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624571333980,
      "stop" : 1624571333980,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware::0",
    "time" : {
      "start" : 1624571333804,
      "stop" : 1624571333804,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624571333853,
      "stop" : 1624571333853,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624571333853,
      "stop" : 1624571333856,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a686b5ed0c53f3da",
      "name" : "Controller Teardown: ",
      "source" : "a686b5ed0c53f3da.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624571334011,
      "stop" : 1624571334011,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624571333781,
      "stop" : 1624571333781,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624571333871,
      "stop" : 1624571333871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware::0",
    "time" : {
      "start" : 1624571333738,
      "stop" : 1624571333738,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware::0",
    "time" : {
      "start" : 1624571333755,
      "stop" : 1624571333755,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624563282505,
      "stop" : 1624563282505,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624563282505,
      "stop" : 1624563282782,
      "duration" : 277
    },
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 19:34:42 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1648\",\n  \"timestamp\" : 1624563282777\n}\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 612, in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n  File \"/wlan-testing/tests/../libs/controller/controller.py\", line 1254, in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 150, in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 209, in delete_profile_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 316, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 148, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 382, in request\n    return self.rest_client.DELETE(url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 259, in DELETE\n    return self.request(\"DELETE\", url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 227, in request\n    raise ApiException(http_resp=r)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624571333705,
      "stop" : 1624571333705,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report::0",
    "time" : {
      "start" : 1624571333719,
      "stop" : 1624571333719,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624571333718,
      "stop" : 1624571333718,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases::0",
    "time" : {
      "start" : 1624571333719,
      "stop" : 1624571333720,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run::0",
    "time" : {
      "start" : 1624571333725,
      "stop" : 1624571333725,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "BRIDGE MODE ENTERPRISE SETUP"
  }, {
    "name" : "tag",
    "value" : "enterprise"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "sanity_light"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "suiteA"
  }, {
    "name" : "tag",
    "value" : "setup"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.configuration_tests.bridge_mode"
  }, {
    "name" : "suite",
    "value" : "test_enterprise_security_modes_configuration"
  }, {
    "name" : "subSuite",
    "value" : "TestSetupBridgeEnterpriseSuiteA"
  }, {
    "name" : "host",
    "value" : "testing-31-r86zk"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.configuration_tests.bridge_mode.test_enterprise_security_modes_configuration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'wpa_enterprise': [{'ssid_name': 'ssid_wpa_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_enterprise': [{'ssid_name': 'ssid_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa3_enterprise': [{'ssid_name': 'ssid_wpa3_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa3_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': True}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "5c9d995d7f0565dc",
        "status" : "passed",
        "time" : {
          "start" : 1624539666377,
          "stop" : 1624539866477,
          "duration" : 200100
        }
      } ]
    },
    "tags" : [ "@pytest.mark.usefixtures('setup_profiles')", "enterprise", "suiteA", "sanity", "setup", "sanity_light", "bridge" ]
  },
  "source" : "a71b9558762d04ca.json",
  "parameterValues" : [ "{'mode': 'BRIDGE', 'ssid_modes': {'wpa_enterprise': [{'ssid_name': 'ssid_wpa_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_enterprise': [{'ssid_name': 'ssid_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa3_enterprise': [{'ssid_name': 'ssid_wpa3_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa3_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': True}" ]
}
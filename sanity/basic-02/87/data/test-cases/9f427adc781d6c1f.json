{
  "uid" : "9f427adc781d6c1f",
  "name" : "test_firmware_create",
  "fullName" : "e2e.basic.test_firmware.TestFirmware#test_firmware_create",
  "historyId" : "a732af8db416058319e131714d472f16",
  "time" : {
    "start" : 1626926363157,
    "stop" : 1626926363157,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "socket.timeout: timed out",
  "statusTrace" : "testbed = 'basic-02', get_apnos = <class 'apnos.apnos.APNOS'>\nget_configuration = {'access_point': [{'ip': '10.28.3.100', 'jumphost': True, 'jumphost_tty': '/dev/ttyAP2', 'mode': 'wifi6', ...}], 'cont... '2.4G-Station-Name': 'wlan0', '5G-Radio': ['wiphy0', 'wiphy5'], '5G-Station-Name': 'wlan0', ...}, 'name': 'lanforge'}}\n\n    @pytest.fixture(scope=\"session\")\n    def instantiate_access_point(testbed, get_apnos, get_configuration):\n        \"\"\"setup the access point connectivity\"\"\"\n        for access_point_info in get_configuration['access_point']:\n            if access_point_info[\"jumphost\"]:\n                allure.attach(name=\"added openwrtctl.py to :\",\n                              body=access_point_info['ip'] + \":\" + str(access_point_info[\"port\"]))\n>               get_apnos(access_point_info, pwd=\"../libs/apnos/\")\n\nconftest.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../libs/apnos/apnos.py:34: in __init__\n    client = self.ssh_cli_connect()\n../libs/apnos/apnos.py:65: in ssh_cli_connect\n    client.connect(self.ip, username=self.username, password=self.password,\n/usr/local/lib/python3.8/site-packages/paramiko/client.py:349: in connect\n    retry_on_signal(lambda: sock.connect(addr))\n/usr/local/lib/python3.8/site-packages/paramiko/util.py:283: in retry_on_signal\n    return function()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   retry_on_signal(lambda: sock.connect(addr))\nE   socket.timeout: timed out\n\n/usr/local/lib/python3.8/site-packages/paramiko/client.py:349: timeout",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1626926352589,
      "stop" : 1626926362598,
      "duration" : 10009
    },
    "status" : "broken",
    "statusMessage" : "socket.timeout: timed out\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/wlan-testing/tests/conftest.py\", line 219, in instantiate_access_point\n    get_apnos(access_point_info, pwd=\"../libs/apnos/\")\n  File \"/wlan-testing/tests/../libs/apnos/apnos.py\", line 34, in __init__\n    client = self.ssh_cli_connect()\n  File \"/wlan-testing/tests/../libs/apnos/apnos.py\", line 65, in ssh_cli_connect\n    client.connect(self.ip, username=self.username, password=self.password,\n  File \"/usr/local/lib/python3.8/site-packages/paramiko/client.py\", line 349, in connect\n    retry_on_signal(lambda: sock.connect(addr))\n  File \"/usr/local/lib/python3.8/site-packages/paramiko/util.py\", line 283, in retry_on_signal\n    return function()\n  File \"/usr/local/lib/python3.8/site-packages/paramiko/client.py\", line 349, in <lambda>\n    retry_on_signal(lambda: sock.connect(addr))\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b8e8cf66db9a6216",
      "name" : "added openwrtctl.py to :",
      "source" : "b8e8cf66db9a6216.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "9e5b8319fb609c2a",
      "name" : "APNOS LIbrary: ",
      "source" : "9e5b8319fb609c2a.attach",
      "type" : "text/plain",
      "size" : 313
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1626926352588,
      "stop" : 1626926352589,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8723ddc54a0a6693",
      "name" : "Testbed Selected: ",
      "source" : "8723ddc54a0a6693.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1626926352589,
      "stop" : 1626926352589,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1626926352588,
      "stop" : 1626926352588,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "83f3ee372b9ef71b",
      "name" : "Testbed Selected : ",
      "source" : "83f3ee372b9ef71b.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1626926378036,
      "stop" : 1626926378036,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1626926378022,
      "stop" : 1626926378022,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1626926378050,
      "stop" : 1626926378051,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "sanity_light"
  }, {
    "name" : "tag",
    "value" : "firmware_create"
  }, {
    "name" : "tag",
    "value" : "firmware_cloud"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "firmware"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_test_run')"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic"
  }, {
    "name" : "suite",
    "value" : "test_firmware"
  }, {
    "name" : "subSuite",
    "value" : "TestFirmware"
  }, {
    "name" : "host",
    "value" : "testing-87-sfgqw"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.test_firmware"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "firmware upgrade from Cloud",
    "url" : "firmware upgrade from Cloud",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "bca322d0b985eccf",
        "status" : "passed",
        "time" : {
          "start" : 1626232994128,
          "stop" : 1626232994129,
          "duration" : 1
        }
      }, {
        "uid" : "9c8f2afb816f9697",
        "status" : "passed",
        "time" : {
          "start" : 1625581114726,
          "stop" : 1625581114726,
          "duration" : 0
        }
      }, {
        "uid" : "454827ddd287e77f",
        "status" : "passed",
        "time" : {
          "start" : 1625380201709,
          "stop" : 1625380201710,
          "duration" : 1
        }
      }, {
        "uid" : "a391b4309af767a3",
        "status" : "passed",
        "time" : {
          "start" : 1625293819153,
          "stop" : 1625293819153,
          "duration" : 0
        }
      }, {
        "uid" : "3a3c00aed0f23ba0",
        "status" : "passed",
        "time" : {
          "start" : 1625034578919,
          "stop" : 1625034578919,
          "duration" : 0
        }
      }, {
        "uid" : "eda851bf371b9754",
        "status" : "passed",
        "time" : {
          "start" : 1624667498315,
          "stop" : 1624667498316,
          "duration" : 1
        }
      }, {
        "uid" : "5fad2dec297fa1a1",
        "status" : "passed",
        "time" : {
          "start" : 1624603100708,
          "stop" : 1624603100709,
          "duration" : 1
        }
      }, {
        "uid" : "5d09c7b92badc8f1",
        "status" : "passed",
        "time" : {
          "start" : 1624581135982,
          "stop" : 1624581135982,
          "duration" : 0
        }
      }, {
        "uid" : "317817c61d69efcc",
        "status" : "passed",
        "time" : {
          "start" : 1624563258546,
          "stop" : 1624563258547,
          "duration" : 1
        }
      }, {
        "uid" : "45a0a59bdfe95a58",
        "status" : "passed",
        "time" : {
          "start" : 1624562955423,
          "stop" : 1624562955424,
          "duration" : 1
        }
      }, {
        "uid" : "5540fda3c31e8009",
        "status" : "passed",
        "time" : {
          "start" : 1624539550206,
          "stop" : 1624539550206,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "@pytest.mark.usefixtures('setup_test_run')", "firmware_cloud", "firmware_create", "sanity", "sanity_light", "firmware" ]
  },
  "source" : "9f427adc781d6c1f.json",
  "parameterValues" : [ ]
}
{
  "uid" : "550cae9ca9b0ba24",
  "name" : "test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN#test_OpenRoaming_2g_WPA2_EAP_VLAN",
  "historyId" : "eba7028cfe1b2fad442106f8f7cbad40",
  "time" : {
    "start" : 1625398160272,
    "stop" : 1625398238468,
    "duration" : 78196
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5a142f4220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f5a140ce370>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1646.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f5a1424d640>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9678, 9679, 9680, 9681], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5a142f4220>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5a142f4220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1625380204318,
      "stop" : 1625380204318,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS",
    "time" : {
      "start" : 1625398130609,
      "stop" : 1625398160271,
      "duration" : 29662
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1625395165649,
      "stop" : 1625395165649,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6deaa523e90da731",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "6deaa523e90da731.attach",
      "type" : "text/plain",
      "size" : 183
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1625395165648,
      "stop" : 1625395165648,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7035db73c1dbcd40",
      "name" : "Passpoint Provider Info: ",
      "source" : "7035db73c1dbcd40.attach",
      "type" : "text/plain",
      "size" : 423
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1625390005841,
      "stop" : 1625390005841,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "464a61cfda88d782",
      "name" : "VLAN Created: ",
      "source" : "464a61cfda88d782.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1625395165648,
      "stop" : 1625395165649,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fae7db08ac8fe72f",
      "name" : "Passpoint venue Info: ",
      "source" : "fae7db08ac8fe72f.attach",
      "type" : "text/plain",
      "size" : 327
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625397863107,
      "stop" : 1625397876847,
      "duration" : 13740
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "20e68cb7833f5335",
      "name" : "RF Profile Created : wifi6",
      "source" : "20e68cb7833f5335.attach",
      "type" : "text/plain",
      "size" : 12270
    }, {
      "uid" : "2e82aa385e666f4e",
      "name" : "Radius Profile Created",
      "source" : "2e82aa385e666f4e.attach",
      "type" : "text/plain",
      "size" : 183
    }, {
      "uid" : "17bb21f5bf166368",
      "name" : "SSID Profile Created",
      "source" : "17bb21f5bf166368.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "4f4b4e17f9289e72",
      "name" : "SSID Profile Created",
      "source" : "4f4b4e17f9289e72.attach",
      "type" : "text/plain",
      "size" : 2836
    }, {
      "uid" : "8b0e9527b941e896",
      "name" : "SSID Profile Created",
      "source" : "8b0e9527b941e896.attach",
      "type" : "text/plain",
      "size" : 2832
    }, {
      "uid" : "a581abc790cab2c7",
      "name" : "SSID Profile Created",
      "source" : "a581abc790cab2c7.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "dd99c10eae503a44",
      "name" : "SSID Profile Created",
      "source" : "dd99c10eae503a44.attach",
      "type" : "text/plain",
      "size" : 2846
    }, {
      "uid" : "809b4a3b901fabcb",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "809b4a3b901fabcb.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "6e2a7279811317e0",
      "name" : "Passpoint Operator Profile Created",
      "source" : "6e2a7279811317e0.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "43811c1e202d4173",
      "name" : "Passpoint Venue Profile Created",
      "source" : "43811c1e202d4173.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "b5b3c09e024c03a0",
      "name" : "Passpoint Profile Created",
      "source" : "b5b3c09e024c03a0.attach",
      "type" : "text/plain",
      "size" : 2617
    }, {
      "uid" : "f584c11ddc85c1bf",
      "name" : "Updating SSID profile",
      "source" : "f584c11ddc85c1bf.attach",
      "type" : "text/plain",
      "size" : 156
    }, {
      "uid" : "4310e75a83f6d6d5",
      "name" : "Updating SSID profile",
      "source" : "4310e75a83f6d6d5.attach",
      "type" : "text/plain",
      "size" : 152
    }, {
      "uid" : "2d8be8ae2678f160",
      "name" : "Updating SSID profile",
      "source" : "2d8be8ae2678f160.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "443ff305141554e5",
      "name" : "Updating SSID profile",
      "source" : "443ff305141554e5.attach",
      "type" : "text/plain",
      "size" : 162
    }, {
      "uid" : "712a3ec1b36f9cd2",
      "name" : "Equipment AP Profile Created",
      "source" : "712a3ec1b36f9cd2.attach",
      "type" : "text/plain",
      "size" : 51
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1625380191908,
      "stop" : 1625380193364,
      "duration" : 1456
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "10eeb2fa31f54b79",
      "name" : "added openwrtctl.py to :",
      "source" : "10eeb2fa31f54b79.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "b5690fd7e5a24c9",
      "name" : "APNOS LIbrary: ",
      "source" : "b5690fd7e5a24c9.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "6e884410f3ec3b0e",
      "name" : "openwrt_ctl Setup",
      "source" : "6e884410f3ec3b0e.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1625380191908,
      "stop" : 1625380191908,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1625380193364,
      "stop" : 1625380193493,
      "duration" : 129
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d0878ee280fba8ff",
      "name" : "Controller Instantiated: ",
      "source" : "d0878ee280fba8ff.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1625380191908,
      "stop" : 1625380191908,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d6c2d88faa6fc277",
      "name" : "Testbed Selected: ",
      "source" : "d6c2d88faa6fc277.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1625395165648,
      "stop" : 1625395165648,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "199f3575f8f0cc2e",
      "name" : "Passpoint operator Info: ",
      "source" : "199f3575f8f0cc2e.attach",
      "type" : "text/plain",
      "size" : 308
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625390005841,
      "stop" : 1625390005885,
      "duration" : 44
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625399229280,
      "stop" : 1625399297359,
      "duration" : 68079
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cfee9669619e84f7",
      "name" : "RF Profile Created : wifi6",
      "source" : "cfee9669619e84f7.attach",
      "type" : "text/plain",
      "size" : 41
    }, {
      "uid" : "5140a97b72ac1fce",
      "name" : "SSID Profile Created",
      "source" : "5140a97b72ac1fce.attach",
      "type" : "text/plain",
      "size" : 2795
    }, {
      "uid" : "42c9bc4739bfad71",
      "name" : "SSID Profile Created",
      "source" : "42c9bc4739bfad71.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "a6c98934c6925c9e",
      "name" : "SSID Profile Created",
      "source" : "a6c98934c6925c9e.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "a00d62d629ddecda",
      "name" : "SSID Profile Created",
      "source" : "a00d62d629ddecda.attach",
      "type" : "text/plain",
      "size" : 2829
    }, {
      "uid" : "de8c672638ab72a7",
      "name" : "Equipment AP Profile Created",
      "source" : "de8c672638ab72a7.attach",
      "type" : "text/plain",
      "size" : 45
    }, {
      "uid" : "1939c87c642de59",
      "name" : "APNOS LIbrary: ",
      "source" : "1939c87c642de59.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "2545d8d49110ab12",
      "name" : "openwrt_ctl Setup",
      "source" : "2545d8d49110ab12.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "991d9c057fc2f22f",
      "name" : "vif config Output Msg: ",
      "source" : "991d9c057fc2f22f.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "eea749d5ed4bccfb",
      "name" : "vif config Err Msg: ",
      "source" : "eea749d5ed4bccfb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f7a192801f62196b",
      "name" : "get_vif_config_ssids ",
      "source" : "f7a192801f62196b.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "c27d87b230fd310a",
      "name" : "vif config Output Msg: ",
      "source" : "c27d87b230fd310a.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "14e33f7c2d59bace",
      "name" : "vif config Err Msg: ",
      "source" : "14e33f7c2d59bace.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "85f8714ae0e83dd1",
      "name" : "get_vif_config_ssids ",
      "source" : "85f8714ae0e83dd1.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "bdc6c2c3ccad763e",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "bdc6c2c3ccad763e.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "6e5e9ca1d3429ed8",
      "name" : "APNOS LIbrary: ",
      "source" : "6e5e9ca1d3429ed8.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "c3067d79d86c9a24",
      "name" : "openwrt_ctl Setup",
      "source" : "c3067d79d86c9a24.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "be79992ee2a5ea2",
      "name" : "vif state Output Msg: ",
      "source" : "be79992ee2a5ea2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "3c9b129f75e4138",
      "name" : "vif state Err Msg: ",
      "source" : "3c9b129f75e4138.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "99954bcb61655c43",
      "name" : "get_vif_state_ssids ",
      "source" : "99954bcb61655c43.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b4164d13d996b0c1",
      "name" : "vif config Output Msg: ",
      "source" : "b4164d13d996b0c1.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "5afc2ea551215497",
      "name" : "vif config Err Msg: ",
      "source" : "5afc2ea551215497.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4a7f161ae25984a1",
      "name" : "get_vif_config_ssids ",
      "source" : "4a7f161ae25984a1.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "cf84076743c1ee3d",
      "name" : "vif state Output Msg: ",
      "source" : "cf84076743c1ee3d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "7598e7a90f5ee9f2",
      "name" : "vif state Err Msg: ",
      "source" : "7598e7a90f5ee9f2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4879a83d56d1ef19",
      "name" : "get_vif_state_ssids ",
      "source" : "4879a83d56d1ef19.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "f0a72e0c99c566c0",
      "name" : "vif config Output Msg: ",
      "source" : "f0a72e0c99c566c0.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "c64034a546906221",
      "name" : "vif config Err Msg: ",
      "source" : "c64034a546906221.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "986ca89ca6e8970b",
      "name" : "get_vif_config_ssids ",
      "source" : "986ca89ca6e8970b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "cf47033f32a343aa",
      "name" : "vif state Output Msg: ",
      "source" : "cf47033f32a343aa.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f29cf20c6c963994",
      "name" : "vif state Err Msg: ",
      "source" : "f29cf20c6c963994.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e500f829ea69599f",
      "name" : "get_vif_state_ssids ",
      "source" : "e500f829ea69599f.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "fb90145d53387e72",
      "name" : "vif config Output Msg: ",
      "source" : "fb90145d53387e72.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "df3846913f10eacf",
      "name" : "vif config Err Msg: ",
      "source" : "df3846913f10eacf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b1eecc93137f947f",
      "name" : "get_vif_config_ssids ",
      "source" : "b1eecc93137f947f.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "531c539a9cf724a7",
      "name" : "vif state Output Msg: ",
      "source" : "531c539a9cf724a7.attach",
      "type" : "text/plain",
      "size" : 7397
    }, {
      "uid" : "815bb5f071bf6d33",
      "name" : "vif state Err Msg: ",
      "source" : "815bb5f071bf6d33.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cc33331ba350632",
      "name" : "get_vif_state_ssids ",
      "source" : "cc33331ba350632.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "c4b260321b205bc1",
      "name" : "vif config Output Msg: ",
      "source" : "c4b260321b205bc1.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "310343deadc78b6",
      "name" : "vif config Err Msg: ",
      "source" : "310343deadc78b6.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cad6810a108bef1",
      "name" : "get_vif_config_ssids ",
      "source" : "cad6810a108bef1.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "3d926691d5ec6a76",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "3d926691d5ec6a76.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1625398130609,
      "stop" : 1625398130609,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1625397876847,
      "stop" : 1625398130609,
      "duration" : 253762
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "da71ce620d4c5bb0",
      "name" : "Equipment AP Profile Updated",
      "source" : "da71ce620d4c5bb0.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "51189e248f54c8ff",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "51189e248f54c8ff.attach",
      "type" : "text/plain",
      "size" : 127
    }, {
      "uid" : "dfa87d2322e86f21",
      "name" : "APNOS LIbrary: ",
      "source" : "dfa87d2322e86f21.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "a905c2d95ffba754",
      "name" : "openwrt_ctl Setup",
      "source" : "a905c2d95ffba754.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "11102e4f13fe4602",
      "name" : "vif config Output Msg: ",
      "source" : "11102e4f13fe4602.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "684a491d6ef82e8c",
      "name" : "vif config Err Msg: ",
      "source" : "684a491d6ef82e8c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "39497ad5e2b79bb0",
      "name" : "get_vif_config_ssids ",
      "source" : "39497ad5e2b79bb0.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "458bd9bdcccdee1d",
      "name" : "vif state Output Msg: ",
      "source" : "458bd9bdcccdee1d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "57d82c592d786d17",
      "name" : "vif state Err Msg: ",
      "source" : "57d82c592d786d17.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "51fe75f65b3fea44",
      "name" : "get_vif_state_ssids ",
      "source" : "51fe75f65b3fea44.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "911312e0bbb24449",
      "name" : "vif config Output Msg: ",
      "source" : "911312e0bbb24449.attach",
      "type" : "text/plain",
      "size" : 4100
    }, {
      "uid" : "2f579198bd80b1cb",
      "name" : "vif config Err Msg: ",
      "source" : "2f579198bd80b1cb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "31a0bdaaf9e3e184",
      "name" : "get_vif_config_ssids ",
      "source" : "31a0bdaaf9e3e184.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "2b615de392ff2170",
      "name" : "vif state Output Msg: ",
      "source" : "2b615de392ff2170.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "42237d620fb04d8",
      "name" : "vif state Err Msg: ",
      "source" : "42237d620fb04d8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2630a06cb35a26cf",
      "name" : "get_vif_state_ssids ",
      "source" : "2630a06cb35a26cf.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "a55e1f982ca2d3b8",
      "name" : "vif config Output Msg: ",
      "source" : "a55e1f982ca2d3b8.attach",
      "type" : "text/plain",
      "size" : 4100
    }, {
      "uid" : "acd187c421b59132",
      "name" : "vif config Err Msg: ",
      "source" : "acd187c421b59132.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "734e84373094a4a5",
      "name" : "get_vif_config_ssids ",
      "source" : "734e84373094a4a5.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "8bbd4b11c85c9314",
      "name" : "vif state Output Msg: ",
      "source" : "8bbd4b11c85c9314.attach",
      "type" : "text/plain",
      "size" : 2177
    }, {
      "uid" : "e1268f1afc9cfef9",
      "name" : "vif state Err Msg: ",
      "source" : "e1268f1afc9cfef9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8157684bc8d7472c",
      "name" : "get_vif_state_ssids ",
      "source" : "8157684bc8d7472c.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "da46b482dbc3a260",
      "name" : "vif config Output Msg: ",
      "source" : "da46b482dbc3a260.attach",
      "type" : "text/plain",
      "size" : 4100
    }, {
      "uid" : "817ffd944dfeb100",
      "name" : "vif config Err Msg: ",
      "source" : "817ffd944dfeb100.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "22eb67813f789ec6",
      "name" : "get_vif_config_ssids ",
      "source" : "22eb67813f789ec6.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "87c5c200cef3cdc7",
      "name" : "vif state Output Msg: ",
      "source" : "87c5c200cef3cdc7.attach",
      "type" : "text/plain",
      "size" : 2177
    }, {
      "uid" : "619e28f2cb2b500a",
      "name" : "vif state Err Msg: ",
      "source" : "619e28f2cb2b500a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "9dd12908773ebd16",
      "name" : "get_vif_state_ssids ",
      "source" : "9dd12908773ebd16.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "2007fc16c0eaddc2",
      "name" : "vif config Output Msg: ",
      "source" : "2007fc16c0eaddc2.attach",
      "type" : "text/plain",
      "size" : 4100
    }, {
      "uid" : "b37afd6da16b1e3",
      "name" : "vif config Err Msg: ",
      "source" : "b37afd6da16b1e3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "41467e8c56519b09",
      "name" : "get_vif_config_ssids ",
      "source" : "41467e8c56519b09.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "d69d87811f44757a",
      "name" : "vif state Output Msg: ",
      "source" : "d69d87811f44757a.attach",
      "type" : "text/plain",
      "size" : 4547
    }, {
      "uid" : "d9991e06abe80a46",
      "name" : "vif state Err Msg: ",
      "source" : "d9991e06abe80a46.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f04d066512d63b8b",
      "name" : "get_vif_state_ssids ",
      "source" : "f04d066512d63b8b.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "edee3cc005b16a8c",
      "name" : "vifC status on AP :: ",
      "source" : "edee3cc005b16a8c.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "6a1f642d07c9ace5",
      "name" : "vifS status on AP :: ",
      "source" : "6a1f642d07c9ace5.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 36,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1625390005885,
      "stop" : 1625390005885,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1625395165649,
      "stop" : 1625395165649,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3156ec1cf18b1d86",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "3156ec1cf18b1d86.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1625380204318,
      "stop" : 1625380204320,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e18acc3249a8567e",
      "name" : "Test Cases Requires: ",
      "source" : "e18acc3249a8567e.attach",
      "type" : "text/plain",
      "size" : 376
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1625395165647,
      "stop" : 1625395165648,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a8506754e4746bc8",
      "name" : "Passpoint profile Info: ",
      "source" : "a8506754e4746bc8.attach",
      "type" : "text/plain",
      "size" : 1089
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625380193494,
      "stop" : 1625380193574,
      "duration" : 80
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1625380191907,
      "stop" : 1625380191908,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3994a210e5647586",
      "name" : "Testbed Selected : ",
      "source" : "3994a210e5647586.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5a142f4220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n>               wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n\n../libs/perfecto_libs/iOS_lib.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f5a140ce370>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1646.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException (W3CHttpResponseCodec.java:187)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:122)\nE           at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode (W3CHttpResponseCodec.java:49)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.execute (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElementByXPath (IOSDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.ios.IOSDriver.findElement (IOSDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumIOSDriverWrapper$2.call (AppiumIOSDriverWrapper.java:94)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode.TestOpenRoamingBridgeVLAN object at 0x7f5a1424d640>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9678, 9679, 9680, 9681], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_iOS = (<appium.webdriver.webdriver.WebDriver (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5a142f4220>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP_VLAN(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_iOS):\n    \n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        report = setup_perfectoMobile_iOS[1]\n        driver = setup_perfectoMobile_iOS[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/AmeriBand-Profile.mobileconfig\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_iOS, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_iOS(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_iOS, connData)\n\ne2e/interOp/iOS/OpenRoamingPassPoint/test_OpenRoaming_vlan_mode.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP_VLAN[push_ap_profile0-setup_profiles0]>>\nWifiNameSSID = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"4fbf465f-386d-4673-9d5e-5d077dee1949\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f5a142f4220>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_iOS(request, WifiNameSSID, WifiPass, setup_perfectoMobile, connData):\n        consoleOutput = \"\"\n    \n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n    \n        reportFlag = True\n    \n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        #contexts = driver.contexts\n        #print(contexts)\n        driver.switch_to.context('NATIVE_APP')\n        #driver.switch_to.context(contexts[0])\n    \n        print(WifiNameSSID)\n        report.step_start(\"Set Wifi Network to \" + WifiNameSSID)\n        #Open Settings Application\n        openApp(connData[\"bundleId-iOS-Settings\"], setup_perfectoMobile)\n    \n        try:\n            print(\"Verifying Connected Wifi Connection\")\n            report.step_start(\"Verifying Connected Wifi Connection\")\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            Wifi_AP_Name = element.text\n        except NoSuchElementException:\n            print(\"Exception: Verify Xpath - UpdateXpath\")\n            #NEED to fail if Wifi AP NAME isn't in the approved list AKA 5g & 2g.\n            #print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n            #print(\"Wifi Name Matches - Already Connected To: \" + WifiName)\n    \n        if Wifi_AP_Name.__eq__(WifiNameSSID):\n            print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n            #Verify if Ap is connected with Wifi\n            report.step_start(\"Verify Wifi Connection Status..\")\n            #print(\"Click Wifi Connection..\")\n            element.click()\n    \n            #Verifies if AP is connected to Wifi status\n            #print(\"Verify Wifi Connection Status..\")\n            try:\n                report.step_start(\"Verify Wifi Connected Status\")\n                WifiXpath = \"//*[@label='selected']/parent::*/parent::*/XCUIElementTypeStaticText[@label='\"+ Wifi_AP_Name + \"']\"\n                elementWifName = driver.find_element_by_xpath(WifiXpath)\n            except NoSuchElementException:\n                reportFlag = False\n                assert reportFlag\n    \n            #Check AP Internet Error Msg\n            print(\"Checking Internet Connection Error..\")\n            report.step_start(\"Checking Internet Connection Error..\")\n    \n            try:\n                WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@label='No Internet Connection']\").text\n            except NoSuchElementException:\n                print(\"No Error with Wifi-AP Connection: \" + Wifi_AP_Name)\n    \n        else:\n            print(\"Selecting Wifi: \" + WifiNameSSID)\n            #consoleOutput+=str(WifiName)+ \"\\n\"\n            report.step_start(\"Selecting Wifi...: \" + WifiNameSSID)\n            element = driver.find_element_by_xpath(\"//XCUIElementTypeCell[@name='Wi-Fi']/XCUIElementTypeStaticText[2]\")\n            element.click()\n            try:\n                wifiXpath2 = WebDriverWait(driver, 30).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@label='\"+ WifiNameSSID + \"']\")))\n                wifiXpath2.click()\n            except Exception as e:\n                print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n                #allure.attach(name=\"Raj\", body=\"hello world\")\n>               assert False\nE               AssertionError\n\n../libs/perfecto_libs/iOS_lib.py:132: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8f1fa4949c0e5b0b",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "8f1fa4949c0e5b0b.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "4fc54623d6e2bb58",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "4fc54623d6e2bb58.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "8f5120f2850b23cb",
      "name" : "log",
      "source" : "8f5120f2850b23cb.txt",
      "type" : "text/plain",
      "size" : 1451
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1625400806074,
      "stop" : 1625400806074,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::1",
    "time" : {
      "start" : 1625398238495,
      "stop" : 1625398238495,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_iOS::teardown",
    "time" : {
      "start" : 1625398238495,
      "stop" : 1625398277818,
      "duration" : 39323
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1625400806242,
      "stop" : 1625400806242,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1625400806244,
      "stop" : 1625400806244,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1625400806079,
      "stop" : 1625400806079,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1625400806243,
      "stop" : 1625400806243,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625399204455,
      "stop" : 1625399204455,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625399204455,
      "stop" : 1625399229277,
      "duration" : 24822
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1466dd4bd56ae682",
      "name" : "Tear Down in Profiles ",
      "source" : "1466dd4bd56ae682.attach",
      "type" : "text/plain",
      "size" : 32
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1625400806141,
      "stop" : 1625400806141,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1625400806158,
      "stop" : 1625400806158,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1625400806135,
      "stop" : 1625400806135,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1625400806135,
      "stop" : 1625400806136,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "870701a4d596c09e",
      "name" : "Controller Teardown: ",
      "source" : "870701a4d596c09e.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1625400806213,
      "stop" : 1625400806213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1625400806243,
      "stop" : 1625400806243,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625400806077,
      "stop" : 1625400806077,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625399750241,
      "stop" : 1625399750241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625399750241,
      "stop" : 1625399774526,
      "duration" : 24285
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d37639a86d40dbad",
      "name" : "Tear Down in Profiles ",
      "source" : "d37639a86d40dbad.attach",
      "type" : "text/plain",
      "size" : 26
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1625398277819,
      "stop" : 1625398277819,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1625398277819,
      "stop" : 1625398277819,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1625400806076,
      "stop" : 1625400806076,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1625400806241,
      "stop" : 1625400806241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1625400806065,
      "stop" : 1625400806066,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1625400806244,
      "stop" : 1625400806244,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625400806102,
      "stop" : 1625400806102,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1625400806237,
      "stop" : 1625400806237,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "ios"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "interop_ios"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_vlan_mode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeVLAN"
  }, {
    "name" : "host",
    "value" : "testing-65-sfkbq"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.iOS.OpenRoamingPassPoint.test_OpenRoaming_vlan_mode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "798d77dd8747750d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1625312353198,
          "stop" : 1625312431228,
          "duration" : 78030
        }
      }, {
        "uid" : "79c22c03baff421e",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1625052618765,
          "stop" : 1625052698070,
          "duration" : 79305
        }
      }, {
        "uid" : "38eba0cd2599ab12",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1624685738712,
          "stop" : 1624685816533,
          "duration" : 77821
        }
      } ]
    },
    "tags" : [ "openRoaming", "vlan", "wpa2_eap", "interop_ios", "interop", "sanity", "@pytest.mark.usefixtures('push_ap_profile')", "ios", "twog" ]
  },
  "source" : "550cae9ca9b0ba24.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'VLAN', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}}" ]
}
{
  "uid" : "642e2343c6bfb459",
  "name" : "test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode#test_OpenRoaming_2g_WPA2_EAP",
  "historyId" : "815003a82ea6295c1e3e1ef95e606771",
  "time" : {
    "start" : 1625305054047,
    "stop" : 1625305192278,
    "duration" : 138231
  },
  "description" : "\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        ",
  "descriptionHtml" : "<pre><code>        EAP Passpoint BRIDGE Mode\n        pytest -m &quot;interop_iOS and eap_passpoint and bridge and wpa2_eap and twog&quot;\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f76680b3a90>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n>                   wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/android_lib.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f76681b1e50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1530.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.ErrorHandler.createThrowable (ErrorHandler.java:214)\nE           at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed (ErrorHandler.java:166)\nE           at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue (JsonHttpResponseCodec.java:40)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:80)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:44)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.execute (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElementByXPath (AndroidDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumAndroidDriverWrapper$2.call (AppiumAndroidDriverWrapper.java:78)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode object at 0x7f7668295460>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9035, 9036, 9037, 9038], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_android = (<appium.webdriver.webdriver.WebDriver (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f76680b3a90>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_android):\n        \"\"\"\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        report = setup_perfectoMobile_android[1]\n        driver = setup_perfectoMobile_android[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/androidconfig.cfg\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_android, connData)\n    \n        #ForgetWifi\n        #ForgetWifiConnection(request, setup_perfectoMobile_android, profileNameSSID, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_android(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_android, connData)\n\ne2e/interOp/android/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f76680b3a90>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n                    wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n                    wifiSelectionElement.click()\n                except Exception as e:\n                    print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n>                   assert False\nE                   AssertionError\n\n../libs/perfecto_libs/android_lib.py:250: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1625305038889,
      "stop" : 1625305038889,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625304729684,
      "stop" : 1625304747576,
      "duration" : 17892
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "382786ba9fda61ba",
      "name" : "RF Profile Created : wifi6",
      "source" : "382786ba9fda61ba.attach",
      "type" : "text/plain",
      "size" : 12280
    }, {
      "uid" : "9deb77237341f821",
      "name" : "Radius Profile Created",
      "source" : "9deb77237341f821.attach",
      "type" : "text/plain",
      "size" : 183
    }, {
      "uid" : "efb42848b84b6e6b",
      "name" : "SSID Profile Created",
      "source" : "efb42848b84b6e6b.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "3a59f44de0986a95",
      "name" : "SSID Profile Created",
      "source" : "3a59f44de0986a95.attach",
      "type" : "text/plain",
      "size" : 2836
    }, {
      "uid" : "3b9f913b9ca25aed",
      "name" : "SSID Profile Created",
      "source" : "3b9f913b9ca25aed.attach",
      "type" : "text/plain",
      "size" : 2832
    }, {
      "uid" : "a843f40a6799c6e9",
      "name" : "SSID Profile Created",
      "source" : "a843f40a6799c6e9.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "6345d8ef5792e27d",
      "name" : "SSID Profile Created",
      "source" : "6345d8ef5792e27d.attach",
      "type" : "text/plain",
      "size" : 2846
    }, {
      "uid" : "e6f5c2bef45d9804",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "e6f5c2bef45d9804.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "a36aa1647086d5d5",
      "name" : "Passpoint Operator Profile Created",
      "source" : "a36aa1647086d5d5.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "cf1dc7fe656b4ef",
      "name" : "Passpoint Venue Profile Created",
      "source" : "cf1dc7fe656b4ef.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "fcb32514ad3c975a",
      "name" : "Passpoint Profile Created",
      "source" : "fcb32514ad3c975a.attach",
      "type" : "text/plain",
      "size" : 2617
    }, {
      "uid" : "a0231634553ab862",
      "name" : "Updating SSID profile",
      "source" : "a0231634553ab862.attach",
      "type" : "text/plain",
      "size" : 156
    }, {
      "uid" : "1e761e4dd8ea6654",
      "name" : "Updating SSID profile",
      "source" : "1e761e4dd8ea6654.attach",
      "type" : "text/plain",
      "size" : 152
    }, {
      "uid" : "2e5966150e883853",
      "name" : "Updating SSID profile",
      "source" : "2e5966150e883853.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "a63d758c45c78804",
      "name" : "Updating SSID profile",
      "source" : "a63d758c45c78804.attach",
      "type" : "text/plain",
      "size" : 162
    }, {
      "uid" : "20a6ba1f052c31e1",
      "name" : "Equipment AP Profile Created",
      "source" : "20a6ba1f052c31e1.attach",
      "type" : "text/plain",
      "size" : 51
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1625293821737,
      "stop" : 1625293821739,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1a32b1ec0ecae9f1",
      "name" : "Test Cases Requires: ",
      "source" : "1a32b1ec0ecae9f1.attach",
      "type" : "text/plain",
      "size" : 376
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1625293809493,
      "stop" : 1625293809493,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1625304729680,
      "stop" : 1625304729680,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "aa0827d3fa455b7c",
      "name" : "Passpoint Provider Info: ",
      "source" : "aa0827d3fa455b7c.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1625304747576,
      "stop" : 1625305038889,
      "duration" : 291313
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e9d212c943ab22e9",
      "name" : "Equipment AP Profile Updated",
      "source" : "e9d212c943ab22e9.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "bb053274cbdf86b4",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "bb053274cbdf86b4.attach",
      "type" : "text/plain",
      "size" : 127
    }, {
      "uid" : "ed07b23cefbc8efb",
      "name" : "APNOS LIbrary: ",
      "source" : "ed07b23cefbc8efb.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "8f481b8388d9ef0b",
      "name" : "openwrt_ctl Setup",
      "source" : "8f481b8388d9ef0b.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "5d03456df878d483",
      "name" : "vif config Output Msg: ",
      "source" : "5d03456df878d483.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "763ec31add41e9ee",
      "name" : "vif config Err Msg: ",
      "source" : "763ec31add41e9ee.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "663f9108266002a5",
      "name" : "get_vif_config_ssids ",
      "source" : "663f9108266002a5.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "4521ec14decfc578",
      "name" : "vif state Output Msg: ",
      "source" : "4521ec14decfc578.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "9c8cd07786876a48",
      "name" : "vif state Err Msg: ",
      "source" : "9c8cd07786876a48.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "771b66e738cdd847",
      "name" : "get_vif_state_ssids ",
      "source" : "771b66e738cdd847.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "f371db106bdf03e2",
      "name" : "vif config Output Msg: ",
      "source" : "f371db106bdf03e2.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "4554924d76f18973",
      "name" : "vif config Err Msg: ",
      "source" : "4554924d76f18973.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d4586d6a69771650",
      "name" : "get_vif_config_ssids ",
      "source" : "d4586d6a69771650.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "a8b5dc44e7c7609d",
      "name" : "vif state Output Msg: ",
      "source" : "a8b5dc44e7c7609d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "11390c10373296f0",
      "name" : "vif state Err Msg: ",
      "source" : "11390c10373296f0.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fa94a4e588d6cad3",
      "name" : "get_vif_state_ssids ",
      "source" : "fa94a4e588d6cad3.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d34d91b69928ed18",
      "name" : "vif config Output Msg: ",
      "source" : "d34d91b69928ed18.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "c3b4b01f65514b49",
      "name" : "vif config Err Msg: ",
      "source" : "c3b4b01f65514b49.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c72864122ca12337",
      "name" : "get_vif_config_ssids ",
      "source" : "c72864122ca12337.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "5ecc85982e3e5f97",
      "name" : "vif state Output Msg: ",
      "source" : "5ecc85982e3e5f97.attach",
      "type" : "text/plain",
      "size" : 2175
    }, {
      "uid" : "e067056a1463afb2",
      "name" : "vif state Err Msg: ",
      "source" : "e067056a1463afb2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e0c0375eef019397",
      "name" : "get_vif_state_ssids ",
      "source" : "e0c0375eef019397.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "5b660ba2806aa11a",
      "name" : "vif config Output Msg: ",
      "source" : "5b660ba2806aa11a.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "7c7b49cb730ccd05",
      "name" : "vif config Err Msg: ",
      "source" : "7c7b49cb730ccd05.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "40ba271925e1c4f",
      "name" : "get_vif_config_ssids ",
      "source" : "40ba271925e1c4f.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "9de0303351f4127e",
      "name" : "vif state Output Msg: ",
      "source" : "9de0303351f4127e.attach",
      "type" : "text/plain",
      "size" : 2175
    }, {
      "uid" : "8308647c7df09a5c",
      "name" : "vif state Err Msg: ",
      "source" : "8308647c7df09a5c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "bb366363bbb43149",
      "name" : "get_vif_state_ssids ",
      "source" : "bb366363bbb43149.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "265298b8d0ef6a52",
      "name" : "vif config Output Msg: ",
      "source" : "265298b8d0ef6a52.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "932d79eed04bc86f",
      "name" : "vif config Err Msg: ",
      "source" : "932d79eed04bc86f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c0b3c10bbe1ba1c1",
      "name" : "get_vif_config_ssids ",
      "source" : "c0b3c10bbe1ba1c1.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "fbe0df13efc9a28c",
      "name" : "vif state Output Msg: ",
      "source" : "fbe0df13efc9a28c.attach",
      "type" : "text/plain",
      "size" : 2175
    }, {
      "uid" : "54bd2aaaaabd9073",
      "name" : "vif state Err Msg: ",
      "source" : "54bd2aaaaabd9073.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "408bdb146ec1e2ed",
      "name" : "get_vif_state_ssids ",
      "source" : "408bdb146ec1e2ed.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "eda3fb036e2940de",
      "name" : "vif config Output Msg: ",
      "source" : "eda3fb036e2940de.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "edb3bbecd1ed833d",
      "name" : "vif config Err Msg: ",
      "source" : "edb3bbecd1ed833d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "73034addd990cd12",
      "name" : "get_vif_config_ssids ",
      "source" : "73034addd990cd12.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "c89c4554275f0784",
      "name" : "vif state Output Msg: ",
      "source" : "c89c4554275f0784.attach",
      "type" : "text/plain",
      "size" : 2175
    }, {
      "uid" : "e2a024117e43028",
      "name" : "vif state Err Msg: ",
      "source" : "e2a024117e43028.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d610d2beebeec864",
      "name" : "get_vif_state_ssids ",
      "source" : "d610d2beebeec864.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "12b24eb103908d32",
      "name" : "vif config Output Msg: ",
      "source" : "12b24eb103908d32.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "8cbf02983ac7494f",
      "name" : "vif config Err Msg: ",
      "source" : "8cbf02983ac7494f.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "175432cd86309173",
      "name" : "get_vif_config_ssids ",
      "source" : "175432cd86309173.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "b296938d61bf07a",
      "name" : "vif state Output Msg: ",
      "source" : "b296938d61bf07a.attach",
      "type" : "text/plain",
      "size" : 2175
    }, {
      "uid" : "15a08e131330e24a",
      "name" : "vif state Err Msg: ",
      "source" : "15a08e131330e24a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "cae6fefd3761444d",
      "name" : "get_vif_state_ssids ",
      "source" : "cae6fefd3761444d.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "c236af0f099ed5ca",
      "name" : "vif config Output Msg: ",
      "source" : "c236af0f099ed5ca.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "537a7811d59766f9",
      "name" : "vif config Err Msg: ",
      "source" : "537a7811d59766f9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "14a642f346e33f5c",
      "name" : "get_vif_config_ssids ",
      "source" : "14a642f346e33f5c.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "39197974507d832b",
      "name" : "vif state Output Msg: ",
      "source" : "39197974507d832b.attach",
      "type" : "text/plain",
      "size" : 4543
    }, {
      "uid" : "37bdc7ccedc90249",
      "name" : "vif state Err Msg: ",
      "source" : "37bdc7ccedc90249.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ad3c5f6b4650fc54",
      "name" : "get_vif_state_ssids ",
      "source" : "ad3c5f6b4650fc54.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "3025513b3a55650e",
      "name" : "vifC status on AP :: ",
      "source" : "3025513b3a55650e.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "9c472803d3c6aa9d",
      "name" : "vifS status on AP :: ",
      "source" : "9c472803d3c6aa9d.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 54,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1625303608241,
      "stop" : 1625303608241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625303608182,
      "stop" : 1625303608241,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1625293821737,
      "stop" : 1625293821737,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1625293809493,
      "stop" : 1625293810997,
      "duration" : 1504
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c5d62590e5136c00",
      "name" : "added openwrtctl.py to :",
      "source" : "c5d62590e5136c00.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "9eaa96801eaeb9e",
      "name" : "APNOS LIbrary: ",
      "source" : "9eaa96801eaeb9e.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "d36d8e65c1775a17",
      "name" : "openwrt_ctl Setup",
      "source" : "d36d8e65c1775a17.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1625304729684,
      "stop" : 1625304729684,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "efa350500c5851ff",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "efa350500c5851ff.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1625293809492,
      "stop" : 1625293809493,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fd06ac18cb205552",
      "name" : "Testbed Selected: ",
      "source" : "fd06ac18cb205552.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1625304729680,
      "stop" : 1625304729683,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a2f44213f8ad7ec5",
      "name" : "Passpoint operator Info: ",
      "source" : "a2f44213f8ad7ec5.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1625293810998,
      "stop" : 1625293811127,
      "duration" : 129
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "35c7c9a9989665ea",
      "name" : "Controller Instantiated: ",
      "source" : "35c7c9a9989665ea.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1625304729679,
      "stop" : 1625304729680,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "786af8df4f276b6b",
      "name" : "Passpoint profile Info: ",
      "source" : "786af8df4f276b6b.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1625293809492,
      "stop" : 1625293809492,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f109f12f2a88ad38",
      "name" : "Testbed Selected : ",
      "source" : "f109f12f2a88ad38.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625293811128,
      "stop" : 1625293811227,
      "duration" : 99
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1625303608182,
      "stop" : 1625303608182,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "345fbf28f0fc03a0",
      "name" : "VLAN Created: ",
      "source" : "345fbf28f0fc03a0.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625306084772,
      "stop" : 1625306153248,
      "duration" : 68476
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4efd24c274c37a1b",
      "name" : "RF Profile Created : wifi6",
      "source" : "4efd24c274c37a1b.attach",
      "type" : "text/plain",
      "size" : 41
    }, {
      "uid" : "e6656b6cca5e851c",
      "name" : "SSID Profile Created",
      "source" : "e6656b6cca5e851c.attach",
      "type" : "text/plain",
      "size" : 2795
    }, {
      "uid" : "4ae8918236e5e734",
      "name" : "SSID Profile Created",
      "source" : "4ae8918236e5e734.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "f5ba3abb256adc8d",
      "name" : "SSID Profile Created",
      "source" : "f5ba3abb256adc8d.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "1e9049a17caddb49",
      "name" : "SSID Profile Created",
      "source" : "1e9049a17caddb49.attach",
      "type" : "text/plain",
      "size" : 2829
    }, {
      "uid" : "8a5601925ed079c1",
      "name" : "Equipment AP Profile Created",
      "source" : "8a5601925ed079c1.attach",
      "type" : "text/plain",
      "size" : 45
    }, {
      "uid" : "27c15f97555b79bf",
      "name" : "APNOS LIbrary: ",
      "source" : "27c15f97555b79bf.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "297975c664a6dde1",
      "name" : "openwrt_ctl Setup",
      "source" : "297975c664a6dde1.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "e7c8f8491c1f6c46",
      "name" : "vif config Output Msg: ",
      "source" : "e7c8f8491c1f6c46.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "dc4b17d5b6e864ff",
      "name" : "vif config Err Msg: ",
      "source" : "dc4b17d5b6e864ff.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "9ecc8c9d95f66e1e",
      "name" : "get_vif_config_ssids ",
      "source" : "9ecc8c9d95f66e1e.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "55611e0a2d35a2c",
      "name" : "vif config Output Msg: ",
      "source" : "55611e0a2d35a2c.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "4ffd662c65db670",
      "name" : "vif config Err Msg: ",
      "source" : "4ffd662c65db670.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e31d2559dd5fb40b",
      "name" : "get_vif_config_ssids ",
      "source" : "e31d2559dd5fb40b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e6c183c0567d6330",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "e6c183c0567d6330.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "c8300e9979f80b03",
      "name" : "APNOS LIbrary: ",
      "source" : "c8300e9979f80b03.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "f51e69e9c77f4a19",
      "name" : "openwrt_ctl Setup",
      "source" : "f51e69e9c77f4a19.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "6626a2e90ff829a3",
      "name" : "vif state Output Msg: ",
      "source" : "6626a2e90ff829a3.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "da837a75d4ed1197",
      "name" : "vif state Err Msg: ",
      "source" : "da837a75d4ed1197.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "53a7bfed786953cf",
      "name" : "get_vif_state_ssids ",
      "source" : "53a7bfed786953cf.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "e1e1e01a48393a38",
      "name" : "vif config Output Msg: ",
      "source" : "e1e1e01a48393a38.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "982d2cd758aa3905",
      "name" : "vif config Err Msg: ",
      "source" : "982d2cd758aa3905.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1422e530393cb1af",
      "name" : "get_vif_config_ssids ",
      "source" : "1422e530393cb1af.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "d14288a5f020421d",
      "name" : "vif state Output Msg: ",
      "source" : "d14288a5f020421d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "5adf08a752988592",
      "name" : "vif state Err Msg: ",
      "source" : "5adf08a752988592.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "651b33aa689b3fc9",
      "name" : "get_vif_state_ssids ",
      "source" : "651b33aa689b3fc9.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "e3e0f7b7e1c8f232",
      "name" : "vif config Output Msg: ",
      "source" : "e3e0f7b7e1c8f232.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "8520310b3255de69",
      "name" : "vif config Err Msg: ",
      "source" : "8520310b3255de69.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "600efca1579920bd",
      "name" : "get_vif_config_ssids ",
      "source" : "600efca1579920bd.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "cdeea88adc806368",
      "name" : "vif state Output Msg: ",
      "source" : "cdeea88adc806368.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "8485a21eda3b11fd",
      "name" : "vif state Err Msg: ",
      "source" : "8485a21eda3b11fd.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4c991cf57ccdd7b9",
      "name" : "get_vif_state_ssids ",
      "source" : "4c991cf57ccdd7b9.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d668316845ee2fa",
      "name" : "vif config Output Msg: ",
      "source" : "d668316845ee2fa.attach",
      "type" : "text/plain",
      "size" : 7080
    }, {
      "uid" : "e41b443777933e41",
      "name" : "vif config Err Msg: ",
      "source" : "e41b443777933e41.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5937b5639e1472b9",
      "name" : "get_vif_config_ssids ",
      "source" : "5937b5639e1472b9.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "99da738e86298f22",
      "name" : "vif state Output Msg: ",
      "source" : "99da738e86298f22.attach",
      "type" : "text/plain",
      "size" : 7397
    }, {
      "uid" : "e8bf9ac0954c12e5",
      "name" : "vif state Err Msg: ",
      "source" : "e8bf9ac0954c12e5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d50525c2acb4eb5b",
      "name" : "get_vif_state_ssids ",
      "source" : "d50525c2acb4eb5b.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "8ccc020cb4e816dc",
      "name" : "vif config Output Msg: ",
      "source" : "8ccc020cb4e816dc.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "d05db56d011142e",
      "name" : "vif config Err Msg: ",
      "source" : "d05db56d011142e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "345d0af5800acd18",
      "name" : "get_vif_config_ssids ",
      "source" : "345d0af5800acd18.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "32ce9f9c2e3333b4",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "32ce9f9c2e3333b4.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 42,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1625304729683,
      "stop" : 1625304729683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f58ef332519749b",
      "name" : "Passpoint venue Info: ",
      "source" : "f58ef332519749b.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1625304729683,
      "stop" : 1625304729684,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eb23d238ae6055fa",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "eb23d238ae6055fa.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_perfectoMobile_android",
    "time" : {
      "start" : 1625305038889,
      "stop" : 1625305054046,
      "duration" : 15157
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f76680b3a90>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n>                   wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/android_lib.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f76681b1e50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1530.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.ErrorHandler.createThrowable (ErrorHandler.java:214)\nE           at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed (ErrorHandler.java:166)\nE           at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue (JsonHttpResponseCodec.java:40)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:80)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:44)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.execute (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElementByXPath (AndroidDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumAndroidDriverWrapper$2.call (AppiumAndroidDriverWrapper.java:78)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode object at 0x7f7668295460>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [9035, 9036, 9037, 9038], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_android = (<appium.webdriver.webdriver.WebDriver (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f76680b3a90>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_android):\n        \"\"\"\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        report = setup_perfectoMobile_android[1]\n        driver = setup_perfectoMobile_android[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/androidconfig.cfg\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_android, connData)\n    \n        #ForgetWifi\n        #ForgetWifiConnection(request, setup_perfectoMobile_android, profileNameSSID, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_android(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_android, connData)\n\ne2e/interOp/android/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"684ef3b0-aec7-4595-8717-005b20fc6f70\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f76680b3a90>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n                    wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n                    wifiSelectionElement.click()\n                except Exception as e:\n                    print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n>                   assert False\nE                   AssertionError\n\n../libs/perfecto_libs/android_lib.py:250: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6dd2253dee6b27f3",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "6dd2253dee6b27f3.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "5b2ee38d30b022a8",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "5b2ee38d30b022a8.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "60f67488dc5cdb29",
      "name" : "log",
      "source" : "60f67488dc5cdb29.txt",
      "type" : "text/plain",
      "size" : 2243
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1625305219574,
      "stop" : 1625305219574,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625306059162,
      "stop" : 1625306059162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625306059162,
      "stop" : 1625306084769,
      "duration" : 25607
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b0c68ce109cbe8d0",
      "name" : "Tear Down in Profiles ",
      "source" : "b0c68ce109cbe8d0.attach",
      "type" : "text/plain",
      "size" : 32
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1625315055570,
      "stop" : 1625315055570,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1625315055716,
      "stop" : 1625315055716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1625315055834,
      "stop" : 1625315055834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1625305219575,
      "stop" : 1625305219575,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1625315055615,
      "stop" : 1625315055615,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625315055618,
      "stop" : 1625315055618,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1625315055593,
      "stop" : 1625315055593,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1625315055693,
      "stop" : 1625315055693,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1625315055833,
      "stop" : 1625315055833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1625315055789,
      "stop" : 1625315055789,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1625315055834,
      "stop" : 1625315055834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1625315055685,
      "stop" : 1625315055685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1625315055685,
      "stop" : 1625315055686,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d94d3ea2fe0030c2",
      "name" : "Controller Teardown: ",
      "source" : "d94d3ea2fe0030c2.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1625315055835,
      "stop" : 1625315055835,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1625315055818,
      "stop" : 1625315055818,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625315055648,
      "stop" : 1625315055648,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1625315055620,
      "stop" : 1625315055620,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625306659125,
      "stop" : 1625306659125,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625306659126,
      "stop" : 1625306683073,
      "duration" : 23947
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5c5b5ac1de4c4bf9",
      "name" : "Tear Down in Profiles ",
      "source" : "5c5b5ac1de4c4bf9.attach",
      "type" : "text/plain",
      "size" : 26
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1625315055834,
      "stop" : 1625315055834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1625315055833,
      "stop" : 1625315055833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_android::1",
    "time" : {
      "start" : 1625305192307,
      "stop" : 1625305192307,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_android::teardown",
    "time" : {
      "start" : 1625305192307,
      "stop" : 1625305219574,
      "duration" : 27267
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "android"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "interop_and"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.android.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeMode"
  }, {
    "name" : "host",
    "value" : "testing-64-zs7cq"
  }, {
    "name" : "thread",
    "value" : "7-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "403eb1eb5a532377",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1625045731938,
          "stop" : 1625045870578,
          "duration" : 138640
        }
      }, {
        "uid" : "bb49b91efaeb3530",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1624678858951,
          "stop" : 1624678998288,
          "duration" : 139337
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_eap", "android", "interop", "sanity", "interop_and", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "twog" ]
  },
  "source" : "642e2343c6bfb459.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}
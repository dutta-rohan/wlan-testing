{
  "uid" : "ff83d083757fbd7d",
  "name" : "test_wpa_wpa2_enterprise_mixed_5g[setup_profiles0]",
  "fullName" : "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestbridgeModeEnterpriseTTLSSuiteTwo#test_wpa_wpa2_enterprise_mixed_5g",
  "historyId" : "20fc0d1f34fa6202b1612691b7c01bd7",
  "time" : {
    "start" : 1624567009982,
    "stop" : 1624567073769,
    "duration" : 63787
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
  "statusTrace" : "self = <e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestbridgeModeEnterpriseTTLSSuiteTwo object at 0x7f5828202c10>\nget_vif_state = ['ssid_wpa3_mixed_eap_2g', 'ssid_wpa3_mixed_eap_5g', 'ssid_wpa_wpa2_eap_2g', 'ssid_wpa_wpa2_eap_5g']\nstation_names_fiveg = ['wlan000']\nsetup_profiles = {'equipment_ap': True, 'radius_profile': True, 'vifc': True, 'vifs': True, ...}\nget_lanforge_data = {'lanforge-port-number': 8080, 'lanforge_2dot4g': 'wiphy0', 'lanforge_2dot4g_prefix': 'wlan0', 'lanforge_2dot4g_station': 'wlan0', ...}\nlf_test = <lanforge.lf_tests.RunTest object at 0x7f58282dd910>\nupdate_report = <testrails.reporting.Reporting object at 0x7f5848d38e50>\ntest_cases = {'2g_open_bridge': 2234, '2g_open_nat': 4321, '2g_open_vlan': 9897, '2g_wpa2_bridge': 2237, ...}\nradius_info = {'ip': '10.10.10.72', 'name': 'basic-02-Automation-Radius-Profile-BRIDGE', 'password': 'password', 'pk_password': 'whatever', ...}\nexit_on_fail = False\n\n    @pytest.mark.wpa_wpa2_enterprise_mixed\n    @pytest.mark.fiveg\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_wpa_wpa2_enterprise_mixed_5g(self, get_vif_state,station_names_fiveg, setup_profiles, get_lanforge_data, lf_test,\n                                    update_report, test_cases, radius_info, exit_on_fail):\n        profile_data = setup_params_enterprise_two[\"ssid_modes\"][\"wpa_wpa2_enterprise_mixed\"][1]\n        ssid_name = profile_data[\"ssid_name\"]\n        security = \"wpa\"\n        extra_secu = [\"wpa2\"]\n    \n        band = \"fievg\"\n        vlan = 1\n        ttls_passwd = radius_info[\"password\"]\n        eap = \"TTLS\"\n        identity = radius_info['user']\n        if ssid_name not in get_vif_state:\n            allure.attach(name=\"retest,vif state ssid not available:\", body=str(get_vif_state))\n            pytest.xfail(\"SSID NOT AVAILABLE IN VIF STATE\")\n>       passes = lf_test.EAP_Connect(ssid=ssid_name, security=security, extra_securities=extra_secu,\n                                     mode=mode, band=band,\n                                     eap=eap, ttls_passwd=ttls_passwd, identity=identity,\n                                     station_name=station_names_fiveg, vlan_id=vlan)\n\ne2e/basic/validation_of_operating_modes/bridge_mode/client_connectivity/test_enterprise_ttls.py:343: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lanforge.lf_tests.RunTest object at 0x7f58282dd910>\nssid = 'ssid_wpa_wpa2_eap_5g', passkey = '[BLANK]', security = 'wpa'\nextra_securities = ['wpa2'], mode = 'BRIDGE', band = 'fievg', vlan_id = 1\nstation_name = ['wlan000'], key_mgmt = 'WPA-EAP', pairwise = 'NA', group = 'NA'\nwpa_psk = 'DEFAULT', ttls_passwd = 'password', ieee80211w = 1, wep_key = 'NA'\nca_cert = 'NA', eap = 'TTLS', identity = 'user'\n\n    def EAP_Connect(self, ssid=\"[BLANK]\", passkey=\"[BLANK]\", security=\"wpa2\", extra_securities=[],\n                    mode=\"BRIDGE\", band=\"twog\", vlan_id=100,\n                    station_name=[], key_mgmt=\"WPA-EAP\",\n                    pairwise=\"NA\", group=\"NA\", wpa_psk=\"DEFAULT\",\n                    ttls_passwd=\"nolastart\", ieee80211w=1,\n                    wep_key=\"NA\", ca_cert=\"NA\", eap=\"TTLS\", identity=\"nolaradius\"):\n        self.eap_connect = TTLSTest(host=self.lanforge_ip, port=self.lanforge_port,\n                                    sta_list=station_name, vap=False, _debug_on=self.debug)\n    \n        self.eap_connect.station_profile.sta_mode = 0\n        self.eap_connect.upstream_resource = 1\n        if mode == \"BRIDGE\":\n            self.eap_connect.l3_cx_obj_udp.upstream = self.upstream_port\n            self.eap_connect.l3_cx_obj_tcp.upstream = self.upstream_port\n        elif mode == \"NAT\":\n            self.eap_connect.l3_cx_obj_udp.upstream = self.upstream_port\n            self.eap_connect.l3_cx_obj_tcp.upstream = self.upstream_port\n        else:\n            self.eap_connect.l3_cx_obj_udp.upstream = self.upstream_port + \".\" + str(vlan_id)\n            self.eap_connect.l3_cx_obj_tcp.upstream = self.upstream_port + \".\" + str(vlan_id)\n        if band == \"twog\":\n            self.eap_connect.radio = self.twog_radios[0]\n            # self.eap_connect.sta_prefix = self.twog_prefix\n        if band == \"fiveg\":\n            self.eap_connect.radio = self.fiveg_radios[0]\n            # self.eap_connect.sta_prefix = self.fiveg_prefix\n        # self.eap_connect.resource = 1\n        if eap == \"TTLS\":\n            self.eap_connect.ieee80211w = ieee80211w\n            self.eap_connect.key_mgmt = key_mgmt\n            self.eap_connect.station_profile.set_command_flag(\"add_sta\", \"80211u_enable\", 0)\n            self.eap_connect.identity = identity\n            self.eap_connect.ttls_passwd = ttls_passwd\n            self.eap_connect.pairwise = pairwise\n            self.eap_connect.group = group\n        if eap == \"TLS\":\n            self.eap_connect.key_mgmt = \"WPA-EAP-SUITE-B\"\n            self.eap_connect.station_profile.set_command_flag(\"add_sta\", \"80211u_enable\", 0)\n            self.eap_connect.pairwise = \"TKIP\"\n            self.eap_connect.group = \"TKIP\"\n            self.eap_connect.eap = \"EAP-TLS\"\n    \n        # self.eap_connect.hs20_enable = False\n        self.eap_connect.ssid = ssid\n        self.eap_connect.password = passkey\n        self.eap_connect.security = security\n        self.eap_connect.sta_list = station_name\n        self.eap_connect.build(extra_securities=extra_securities)\n        self.eap_connect.start(station_name, True, True)\n        for sta_name in station_name:\n            # try:\n            station_data_str = \"\"\n            # sta_url = self.eap_connect.get_station_url(sta_name)\n            # station_info = self.eap_connect.json_get(sta_url)\n            station_info = self.eap_connect.json_get(\"port/1/1/\" + sta_name)\n            for i in station_info[\"interface\"]:\n                try:\n                    station_data_str = station_data_str + i + \"  :  \" + str(station_info[\"interface\"][i]) + \"\\n\"\n                except Exception as e:\n                    print(e)\n            allure.attach(name=str(sta_name), body=str(station_data_str))\n            # except Exception as e:\n            #     print(e)\n    \n        self.eap_connect.stop()\n        endp_data = []\n        for i in self.eap_connect.resulting_endpoints:\n>           endp_data.append(self.eap_connect.resulting_endpoints[i][\"endpoint\"])\nE           TypeError: 'NoneType' object is not subscriptable\n\n../libs/lanforge/lf_tests.py:192: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624563246581,
      "stop" : 1624563246774,
      "duration" : 193
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "70d39450513c6fce",
      "name" : "Controller Instantiated: ",
      "source" : "70d39450513c6fce.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624566890396,
      "stop" : 1624566934877,
      "duration" : 44481
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "50b289188245bd95",
      "name" : "RF Profile Created : wifi6",
      "source" : "50b289188245bd95.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "a3425ad429830998",
      "name" : "Radius Profile Created",
      "source" : "a3425ad429830998.attach",
      "type" : "text/plain",
      "size" : 179
    }, {
      "uid" : "3241d3255c85a91b",
      "name" : "SSID Profile Created",
      "source" : "3241d3255c85a91b.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "1341de779556a3a7",
      "name" : "SSID Profile Created",
      "source" : "1341de779556a3a7.attach",
      "type" : "text/plain",
      "size" : 2868
    }, {
      "uid" : "addc8dc8e45dfd92",
      "name" : "SSID Profile Created",
      "source" : "addc8dc8e45dfd92.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "7ef3291a86ffc397",
      "name" : "SSID Profile Created",
      "source" : "7ef3291a86ffc397.attach",
      "type" : "text/plain",
      "size" : 2868
    }, {
      "uid" : "5ad0491c62969c8b",
      "name" : "Equipment AP Profile Created",
      "source" : "5ad0491c62969c8b.attach",
      "type" : "text/plain",
      "size" : 48
    }, {
      "uid" : "1e9724d3c9c84742",
      "name" : "APNOS LIbrary: ",
      "source" : "1e9724d3c9c84742.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "7c77966ee5d0b0cf",
      "name" : "openwrt_ctl Setup",
      "source" : "7c77966ee5d0b0cf.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "dec156969d151a62",
      "name" : "vif config Output Msg: ",
      "source" : "dec156969d151a62.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "de7809c8516c0056",
      "name" : "vif config Err Msg: ",
      "source" : "de7809c8516c0056.attach",
      "type" : "text/plain",
      "size" : 108
    }, {
      "uid" : "f9ad9b93ccced2ae",
      "name" : "get_vif_config_ssids ",
      "source" : "f9ad9b93ccced2ae.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "31a87c58b671bb8a",
      "name" : "vif config Output Msg: ",
      "source" : "31a87c58b671bb8a.attach",
      "type" : "text/plain",
      "size" : 7583
    }, {
      "uid" : "2846eaa33f6dd2be",
      "name" : "vif config Err Msg: ",
      "source" : "2846eaa33f6dd2be.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "fc06191eda077ae",
      "name" : "get_vif_config_ssids ",
      "source" : "fc06191eda077ae.attach",
      "type" : "text/plain",
      "size" : 100
    }, {
      "uid" : "f6d73feadbb23bb",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "f6d73feadbb23bb.attach",
      "type" : "text/plain",
      "size" : 242
    }, {
      "uid" : "5e412b1166f6e56",
      "name" : "APNOS LIbrary: ",
      "source" : "5e412b1166f6e56.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "2c000a2a3cc321c8",
      "name" : "openwrt_ctl Setup",
      "source" : "2c000a2a3cc321c8.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "8c5b9573569529db",
      "name" : "vif state Output Msg: ",
      "source" : "8c5b9573569529db.attach",
      "type" : "text/plain",
      "size" : 8442
    }, {
      "uid" : "e0f70f277864007",
      "name" : "vif state Err Msg: ",
      "source" : "e0f70f277864007.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f151aeb9b267debd",
      "name" : "get_vif_state_ssids ",
      "source" : "f151aeb9b267debd.attach",
      "type" : "text/plain",
      "size" : 100
    }, {
      "uid" : "401b53d4b8fca2a9",
      "name" : "vif config Output Msg: ",
      "source" : "401b53d4b8fca2a9.attach",
      "type" : "text/plain",
      "size" : 7583
    }, {
      "uid" : "c21562ac474ce8cf",
      "name" : "vif config Err Msg: ",
      "source" : "c21562ac474ce8cf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c24b8f8972018a02",
      "name" : "get_vif_config_ssids ",
      "source" : "c24b8f8972018a02.attach",
      "type" : "text/plain",
      "size" : 100
    }, {
      "uid" : "3bac9e279ea6c12e",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "3bac9e279ea6c12e.attach",
      "type" : "text/plain",
      "size" : 224
    }, {
      "uid" : "950fad85ea5fbf82",
      "name" : "AP LOgs: ",
      "source" : "950fad85ea5fbf82.attach",
      "type" : "text/plain",
      "size" : 69797
    }, {
      "uid" : "ee8571be16f22490",
      "name" : "vif state Output Msg: ",
      "source" : "ee8571be16f22490.attach",
      "type" : "text/plain",
      "size" : 8442
    }, {
      "uid" : "be619b50490ef349",
      "name" : "vif state Err Msg: ",
      "source" : "be619b50490ef349.attach",
      "type" : "text/plain",
      "size" : 108
    }, {
      "uid" : "6b60a798348ba172",
      "name" : "SSID DATA IN LF DUT",
      "source" : "6b60a798348ba172.attach",
      "type" : "text/plain",
      "size" : 400
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 29,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1624563262203,
      "stop" : 1624563262687,
      "duration" : 484
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624563244442,
      "stop" : 1624563244442,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "794e401e5f07c51c",
      "name" : "Testbed Selected: ",
      "source" : "794e401e5f07c51c.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1624563262687,
      "stop" : 1624563266039,
      "duration" : 3352
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624563244443,
      "stop" : 1624563246581,
      "duration" : 2138
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1f80ac8a6f32beb3",
      "name" : "added openwrtctl.py to :",
      "source" : "1f80ac8a6f32beb3.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "9ef2fe3891a4c8cc",
      "name" : "APNOS LIbrary: ",
      "source" : "9ef2fe3891a4c8cc.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "416b274198d7ad63",
      "name" : "openwrt_ctl Setup",
      "source" : "416b274198d7ad63.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_test",
    "time" : {
      "start" : 1624566257958,
      "stop" : 1624566257958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624563244443,
      "stop" : 1624563244443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware",
    "time" : {
      "start" : 1624563246907,
      "stop" : 1624563246907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud",
    "time" : {
      "start" : 1624563246818,
      "stop" : 1624563246906,
      "duration" : 88
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624563262200,
      "stop" : 1624563262200,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9da8209d3f2ea98a",
      "name" : "VLAN Created: ",
      "source" : "9da8209d3f2ea98a.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "station_names_fiveg",
    "time" : {
      "start" : 1624566411801,
      "stop" : 1624566411801,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware",
    "time" : {
      "start" : 1624563246774,
      "stop" : 1624563246774,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases",
    "time" : {
      "start" : 1624563254128,
      "stop" : 1624563254128,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_vif_state",
    "time" : {
      "start" : 1624566934877,
      "stop" : 1624566940417,
      "duration" : 5540
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b05e98b9e92039b5",
      "name" : "APNOS LIbrary: ",
      "source" : "b05e98b9e92039b5.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "62670f8a07d12956",
      "name" : "openwrt_ctl Setup",
      "source" : "62670f8a07d12956.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "29d38b86a1d1e931",
      "name" : "vif config Output Msg: ",
      "source" : "29d38b86a1d1e931.attach",
      "type" : "text/plain",
      "size" : 7583
    }, {
      "uid" : "8ffbc6df6d3263a7",
      "name" : "vif config Err Msg: ",
      "source" : "8ffbc6df6d3263a7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5ec81c7e98cdbb8e",
      "name" : "get_vif_config_ssids ",
      "source" : "5ec81c7e98cdbb8e.attach",
      "type" : "text/plain",
      "size" : 100
    }, {
      "uid" : "59ba8854981b98c3",
      "name" : "vif state Output Msg: ",
      "source" : "59ba8854981b98c3.attach",
      "type" : "text/plain",
      "size" : 8442
    }, {
      "uid" : "df60e374dff635b7",
      "name" : "vif state Err Msg: ",
      "source" : "df60e374dff635b7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "9b03fe07d78cce6f",
      "name" : "get_vif_state_ssids ",
      "source" : "9b03fe07d78cce6f.attach",
      "type" : "text/plain",
      "size" : 100
    }, {
      "uid" : "5037caeca5dcc6e2",
      "name" : "vif_state",
      "source" : "5037caeca5dcc6e2.attach",
      "type" : "text/plain",
      "size" : 100
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 9,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "upgrade_firmware",
    "time" : {
      "start" : 1624563246907,
      "stop" : 1624563250506,
      "duration" : 3599
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1bf64a63f5aa9aba",
      "name" : "APNOS LIbrary: ",
      "source" : "1bf64a63f5aa9aba.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "a5bcda97e82a82de",
      "name" : "openwrt_ctl Setup",
      "source" : "a5bcda97e82a82de.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "a62f349a3263590f",
      "name" : "get_active_firmware ",
      "source" : "a62f349a3263590f.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624563262201,
      "stop" : 1624563262201,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624563244442,
      "stop" : 1624563244442,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "65413b10eb68f0a1",
      "name" : "Testbed Selected : ",
      "source" : "65413b10eb68f0a1.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "update_report",
    "time" : {
      "start" : 1624563254128,
      "stop" : 1624563254128,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware",
    "time" : {
      "start" : 1624563246906,
      "stop" : 1624563246906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1624563266039,
      "stop" : 1624563266040,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "95ad7ba849e9a02c",
      "name" : "Radius server Info: ",
      "source" : "95ad7ba849e9a02c.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624563246774,
      "stop" : 1624563246818,
      "duration" : 44
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware",
    "time" : {
      "start" : 1624563246907,
      "stop" : 1624563246907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run",
    "time" : {
      "start" : 1624563250506,
      "stop" : 1624563254128,
      "duration" : 3622
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8040ed61eccb8eb6",
      "name" : "APNOS LIbrary: ",
      "source" : "8040ed61eccb8eb6.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "4d6b94696b497f31",
      "name" : "openwrt_ctl Setup",
      "source" : "4d6b94696b497f31.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "f3ef95bcbfd822f9",
      "name" : "get_active_firmware ",
      "source" : "f3ef95bcbfd822f9.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624563262201,
      "stop" : 1624563262202,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7b441fdd244c3bc3",
      "name" : "Test Cases Requires: ",
      "source" : "7b441fdd244c3bc3.attach",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624563262200,
      "stop" : 1624563262200,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_influx",
    "time" : {
      "start" : 1624566257958,
      "stop" : 1624566257958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_lanforge_data",
    "time" : {
      "start" : 1624566257958,
      "stop" : 1624566257958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "exit_on_fail",
    "time" : {
      "start" : 1624566257959,
      "stop" : 1624566257959,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
    "statusTrace" : "self = <e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestbridgeModeEnterpriseTTLSSuiteTwo object at 0x7f5828202c10>\nget_vif_state = ['ssid_wpa3_mixed_eap_2g', 'ssid_wpa3_mixed_eap_5g', 'ssid_wpa_wpa2_eap_2g', 'ssid_wpa_wpa2_eap_5g']\nstation_names_fiveg = ['wlan000']\nsetup_profiles = {'equipment_ap': True, 'radius_profile': True, 'vifc': True, 'vifs': True, ...}\nget_lanforge_data = {'lanforge-port-number': 8080, 'lanforge_2dot4g': 'wiphy0', 'lanforge_2dot4g_prefix': 'wlan0', 'lanforge_2dot4g_station': 'wlan0', ...}\nlf_test = <lanforge.lf_tests.RunTest object at 0x7f58282dd910>\nupdate_report = <testrails.reporting.Reporting object at 0x7f5848d38e50>\ntest_cases = {'2g_open_bridge': 2234, '2g_open_nat': 4321, '2g_open_vlan': 9897, '2g_wpa2_bridge': 2237, ...}\nradius_info = {'ip': '10.10.10.72', 'name': 'basic-02-Automation-Radius-Profile-BRIDGE', 'password': 'password', 'pk_password': 'whatever', ...}\nexit_on_fail = False\n\n    @pytest.mark.wpa_wpa2_enterprise_mixed\n    @pytest.mark.fiveg\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_wpa_wpa2_enterprise_mixed_5g(self, get_vif_state,station_names_fiveg, setup_profiles, get_lanforge_data, lf_test,\n                                    update_report, test_cases, radius_info, exit_on_fail):\n        profile_data = setup_params_enterprise_two[\"ssid_modes\"][\"wpa_wpa2_enterprise_mixed\"][1]\n        ssid_name = profile_data[\"ssid_name\"]\n        security = \"wpa\"\n        extra_secu = [\"wpa2\"]\n    \n        band = \"fievg\"\n        vlan = 1\n        ttls_passwd = radius_info[\"password\"]\n        eap = \"TTLS\"\n        identity = radius_info['user']\n        if ssid_name not in get_vif_state:\n            allure.attach(name=\"retest,vif state ssid not available:\", body=str(get_vif_state))\n            pytest.xfail(\"SSID NOT AVAILABLE IN VIF STATE\")\n>       passes = lf_test.EAP_Connect(ssid=ssid_name, security=security, extra_securities=extra_secu,\n                                     mode=mode, band=band,\n                                     eap=eap, ttls_passwd=ttls_passwd, identity=identity,\n                                     station_name=station_names_fiveg, vlan_id=vlan)\n\ne2e/basic/validation_of_operating_modes/bridge_mode/client_connectivity/test_enterprise_ttls.py:343: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lanforge.lf_tests.RunTest object at 0x7f58282dd910>\nssid = 'ssid_wpa_wpa2_eap_5g', passkey = '[BLANK]', security = 'wpa'\nextra_securities = ['wpa2'], mode = 'BRIDGE', band = 'fievg', vlan_id = 1\nstation_name = ['wlan000'], key_mgmt = 'WPA-EAP', pairwise = 'NA', group = 'NA'\nwpa_psk = 'DEFAULT', ttls_passwd = 'password', ieee80211w = 1, wep_key = 'NA'\nca_cert = 'NA', eap = 'TTLS', identity = 'user'\n\n    def EAP_Connect(self, ssid=\"[BLANK]\", passkey=\"[BLANK]\", security=\"wpa2\", extra_securities=[],\n                    mode=\"BRIDGE\", band=\"twog\", vlan_id=100,\n                    station_name=[], key_mgmt=\"WPA-EAP\",\n                    pairwise=\"NA\", group=\"NA\", wpa_psk=\"DEFAULT\",\n                    ttls_passwd=\"nolastart\", ieee80211w=1,\n                    wep_key=\"NA\", ca_cert=\"NA\", eap=\"TTLS\", identity=\"nolaradius\"):\n        self.eap_connect = TTLSTest(host=self.lanforge_ip, port=self.lanforge_port,\n                                    sta_list=station_name, vap=False, _debug_on=self.debug)\n    \n        self.eap_connect.station_profile.sta_mode = 0\n        self.eap_connect.upstream_resource = 1\n        if mode == \"BRIDGE\":\n            self.eap_connect.l3_cx_obj_udp.upstream = self.upstream_port\n            self.eap_connect.l3_cx_obj_tcp.upstream = self.upstream_port\n        elif mode == \"NAT\":\n            self.eap_connect.l3_cx_obj_udp.upstream = self.upstream_port\n            self.eap_connect.l3_cx_obj_tcp.upstream = self.upstream_port\n        else:\n            self.eap_connect.l3_cx_obj_udp.upstream = self.upstream_port + \".\" + str(vlan_id)\n            self.eap_connect.l3_cx_obj_tcp.upstream = self.upstream_port + \".\" + str(vlan_id)\n        if band == \"twog\":\n            self.eap_connect.radio = self.twog_radios[0]\n            # self.eap_connect.sta_prefix = self.twog_prefix\n        if band == \"fiveg\":\n            self.eap_connect.radio = self.fiveg_radios[0]\n            # self.eap_connect.sta_prefix = self.fiveg_prefix\n        # self.eap_connect.resource = 1\n        if eap == \"TTLS\":\n            self.eap_connect.ieee80211w = ieee80211w\n            self.eap_connect.key_mgmt = key_mgmt\n            self.eap_connect.station_profile.set_command_flag(\"add_sta\", \"80211u_enable\", 0)\n            self.eap_connect.identity = identity\n            self.eap_connect.ttls_passwd = ttls_passwd\n            self.eap_connect.pairwise = pairwise\n            self.eap_connect.group = group\n        if eap == \"TLS\":\n            self.eap_connect.key_mgmt = \"WPA-EAP-SUITE-B\"\n            self.eap_connect.station_profile.set_command_flag(\"add_sta\", \"80211u_enable\", 0)\n            self.eap_connect.pairwise = \"TKIP\"\n            self.eap_connect.group = \"TKIP\"\n            self.eap_connect.eap = \"EAP-TLS\"\n    \n        # self.eap_connect.hs20_enable = False\n        self.eap_connect.ssid = ssid\n        self.eap_connect.password = passkey\n        self.eap_connect.security = security\n        self.eap_connect.sta_list = station_name\n        self.eap_connect.build(extra_securities=extra_securities)\n        self.eap_connect.start(station_name, True, True)\n        for sta_name in station_name:\n            # try:\n            station_data_str = \"\"\n            # sta_url = self.eap_connect.get_station_url(sta_name)\n            # station_info = self.eap_connect.json_get(sta_url)\n            station_info = self.eap_connect.json_get(\"port/1/1/\" + sta_name)\n            for i in station_info[\"interface\"]:\n                try:\n                    station_data_str = station_data_str + i + \"  :  \" + str(station_info[\"interface\"][i]) + \"\\n\"\n                except Exception as e:\n                    print(e)\n            allure.attach(name=str(sta_name), body=str(station_data_str))\n            # except Exception as e:\n            #     print(e)\n    \n        self.eap_connect.stop()\n        endp_data = []\n        for i in self.eap_connect.resulting_endpoints:\n>           endp_data.append(self.eap_connect.resulting_endpoints[i][\"endpoint\"])\nE           TypeError: 'NoneType' object is not subscriptable\n\n../libs/lanforge/lf_tests.py:192: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eb4bdf2808568a7b",
      "name" : "wlan000",
      "source" : "eb4bdf2808568a7b.attach",
      "type" : "text/plain",
      "size" : 1393
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624572067543,
      "stop" : 1624572067543,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624572067543,
      "stop" : 1624572067544,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "16efac7d1ee761be",
      "name" : "Controller Teardown: ",
      "source" : "16efac7d1ee761be.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624567213030,
      "stop" : 1624567213030,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624567213030,
      "stop" : 1624567217292,
      "duration" : 4262
    },
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 20:40:17 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1868\",\n  \"timestamp\" : 1624567217289\n}\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 613, in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"radius\"])\n  File \"/wlan-testing/tests/../libs/controller/controller.py\", line 1254, in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 150, in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 209, in delete_profile_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 316, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 148, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 382, in request\n    return self.rest_client.DELETE(url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 259, in DELETE\n    return self.request(\"DELETE\", url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 227, in request\n    raise ApiException(http_resp=r)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1624572067357,
      "stop" : 1624572067357,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624572067635,
      "stop" : 1624572067635,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624572067550,
      "stop" : 1624572067550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_test::0",
    "time" : {
      "start" : 1624572067428,
      "stop" : 1624572067428,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624572067575,
      "stop" : 1624572067575,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware::0",
    "time" : {
      "start" : 1624572067471,
      "stop" : 1624572067471,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud::0",
    "time" : {
      "start" : 1624572067487,
      "stop" : 1624572067487,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624572067424,
      "stop" : 1624572067424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "station_names_fiveg::0",
    "time" : {
      "start" : 1624572067435,
      "stop" : 1624572067435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware::0",
    "time" : {
      "start" : 1624572067518,
      "stop" : 1624572067518,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases::0",
    "time" : {
      "start" : 1624572067427,
      "stop" : 1624572067427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_vif_state::0",
    "time" : {
      "start" : 1624567213029,
      "stop" : 1624567213029,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware::0",
    "time" : {
      "start" : 1624572067446,
      "stop" : 1624572067446,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624572067399,
      "stop" : 1624572067399,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624572067667,
      "stop" : 1624572067667,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report::0",
    "time" : {
      "start" : 1624572067425,
      "stop" : 1624572067425,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware::0",
    "time" : {
      "start" : 1624572067482,
      "stop" : 1624572067482,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624572067328,
      "stop" : 1624572067328,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624572067507,
      "stop" : 1624572067507,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware::0",
    "time" : {
      "start" : 1624572067460,
      "stop" : 1624572067460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run::0",
    "time" : {
      "start" : 1624572067435,
      "stop" : 1624572067435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624572067369,
      "stop" : 1624572067369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624572067414,
      "stop" : 1624572067414,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_influx::0",
    "time" : {
      "start" : 1624572067433,
      "stop" : 1624572067433,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_lanforge_data::0",
    "time" : {
      "start" : 1624572067434,
      "stop" : 1624572067434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "exit_on_fail::0",
    "time" : {
      "start" : 1624572067678,
      "stop" : 1624572067678,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "tag",
    "value" : "wpa_wpa2_enterprise_mixed"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "enterprise"
  }, {
    "name" : "tag",
    "value" : "client_connectivity"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "fiveg"
  }, {
    "name" : "tag",
    "value" : "ttls"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity"
  }, {
    "name" : "suite",
    "value" : "test_enterprise_ttls"
  }, {
    "name" : "subSuite",
    "value" : "TestbridgeModeEnterpriseTTLSSuiteTwo"
  }, {
    "name" : "host",
    "value" : "testing-32-dxkxc"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'wpa_wpa2_enterprise_mixed': [{'ssid_name': 'ssid_wpa_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_wpa2_enterprise_mixed-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_wpa2_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa_wpa2_enterprise_mixed-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa3_enterprise_mixed': [{'ssid_name': 'ssid_wpa3_mixed_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise_mixed-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa3_mixed_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa3_enterprise_mixed-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': True}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "83091aa581a10fd6",
        "status" : "passed",
        "time" : {
          "start" : 1624566871237,
          "stop" : 1624567010179,
          "duration" : 138942
        }
      }, {
        "uid" : "d864f2f9f3a279c1",
        "status" : "passed",
        "time" : {
          "start" : 1624543846984,
          "stop" : 1624543912810,
          "duration" : 65826
        }
      } ]
    },
    "tags" : [ "wpa_wpa2_enterprise_mixed", "@pytest.mark.usefixtures('setup_profiles')", "ttls", "enterprise", "sanity", "client_connectivity", "bridge", "fiveg" ]
  },
  "source" : "ff83d083757fbd7d.json",
  "parameterValues" : [ "{'mode': 'BRIDGE', 'ssid_modes': {'wpa_wpa2_enterprise_mixed': [{'ssid_name': 'ssid_wpa_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_wpa2_enterprise_mixed-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_wpa2_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa_wpa2_enterprise_mixed-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa3_enterprise_mixed': [{'ssid_name': 'ssid_wpa3_mixed_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise_mixed-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa3_mixed_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa3_enterprise_mixed-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': True}" ]
}
{
  "uid" : "331335eacb4526f0",
  "name" : "test_verify_vif_state[setup_profiles0]",
  "fullName" : "e2e.basic.configuration_tests.vlan_mode.test_enterprise_security_modes_configuration.TestSetupVLANEnterpriseSuiteA#test_verify_vif_state",
  "historyId" : "18239742c48ada5acb50c2d10570981b",
  "time" : {
    "start" : 1624565802307,
    "stop" : 1624566002406,
    "duration" : 200099
  },
  "description" : " VIF Config Suite B Enterprise ",
  "descriptionHtml" : "<p>VIF Config Suite B Enterprise</p>\n",
  "status" : "broken",
  "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 20:20:07 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1810\",\n  \"timestamp\" : 1624566007080\n}",
  "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7f58403cf730>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:613: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"radius\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7f5840049fd0>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=1810'\nquery_params = [('profileId', 1810)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiI0ZTE3ZmMxNS1iZWU3LTRhMDUtYjQ4ZS00YT...lwKdGm3OkuvtsUPYcqr7RMkMzASdiPneY1.', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 20:20:07 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=1810\",\nE             \"timestamp\" : 1624566007080\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624563246581,
      "stop" : 1624563246774,
      "duration" : 193
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "70d39450513c6fce",
      "name" : "Controller Instantiated: ",
      "source" : "70d39450513c6fce.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1624563262203,
      "stop" : 1624563262687,
      "duration" : 484
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624563244442,
      "stop" : 1624563244442,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "794e401e5f07c51c",
      "name" : "Testbed Selected: ",
      "source" : "794e401e5f07c51c.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1624563262687,
      "stop" : 1624563266039,
      "duration" : 3352
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624563244443,
      "stop" : 1624563246581,
      "duration" : 2138
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1f80ac8a6f32beb3",
      "name" : "added openwrtctl.py to :",
      "source" : "1f80ac8a6f32beb3.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "9ef2fe3891a4c8cc",
      "name" : "APNOS LIbrary: ",
      "source" : "9ef2fe3891a4c8cc.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "416b274198d7ad63",
      "name" : "openwrt_ctl Setup",
      "source" : "416b274198d7ad63.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624563244443,
      "stop" : 1624563244443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware",
    "time" : {
      "start" : 1624563246907,
      "stop" : 1624563246907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud",
    "time" : {
      "start" : 1624563246818,
      "stop" : 1624563246906,
      "duration" : 88
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624563262200,
      "stop" : 1624563262200,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9da8209d3f2ea98a",
      "name" : "VLAN Created: ",
      "source" : "9da8209d3f2ea98a.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_firmware",
    "time" : {
      "start" : 1624563246774,
      "stop" : 1624563246774,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases",
    "time" : {
      "start" : 1624563254128,
      "stop" : 1624563254128,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware",
    "time" : {
      "start" : 1624563246907,
      "stop" : 1624563250506,
      "duration" : 3599
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1bf64a63f5aa9aba",
      "name" : "APNOS LIbrary: ",
      "source" : "1bf64a63f5aa9aba.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "a5bcda97e82a82de",
      "name" : "openwrt_ctl Setup",
      "source" : "a5bcda97e82a82de.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "a62f349a3263590f",
      "name" : "get_active_firmware ",
      "source" : "a62f349a3263590f.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624563262201,
      "stop" : 1624563262201,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624563244442,
      "stop" : 1624563244442,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "65413b10eb68f0a1",
      "name" : "Testbed Selected : ",
      "source" : "65413b10eb68f0a1.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "update_report",
    "time" : {
      "start" : 1624563254128,
      "stop" : 1624563254128,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware",
    "time" : {
      "start" : 1624563246906,
      "stop" : 1624563246906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1624563266039,
      "stop" : 1624563266040,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "95ad7ba849e9a02c",
      "name" : "Radius server Info: ",
      "source" : "95ad7ba849e9a02c.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624563246774,
      "stop" : 1624563246818,
      "duration" : 44
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware",
    "time" : {
      "start" : 1624563246907,
      "stop" : 1624563246907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run",
    "time" : {
      "start" : 1624563250506,
      "stop" : 1624563254128,
      "duration" : 3622
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8040ed61eccb8eb6",
      "name" : "APNOS LIbrary: ",
      "source" : "8040ed61eccb8eb6.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "4d6b94696b497f31",
      "name" : "openwrt_ctl Setup",
      "source" : "4d6b94696b497f31.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "f3ef95bcbfd822f9",
      "name" : "get_active_firmware ",
      "source" : "f3ef95bcbfd822f9.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624563262201,
      "stop" : 1624563262202,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7b441fdd244c3bc3",
      "name" : "Test Cases Requires: ",
      "source" : "7b441fdd244c3bc3.attach",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624565739022,
      "stop" : 1624565802278,
      "duration" : 63256
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7ef2279c283bbc22",
      "name" : "RF Profile Created : wifi6",
      "source" : "7ef2279c283bbc22.attach",
      "type" : "text/plain",
      "size" : 42
    }, {
      "uid" : "9c0277a03a93a51a",
      "name" : "Radius Profile Created",
      "source" : "9c0277a03a93a51a.attach",
      "type" : "text/plain",
      "size" : 179
    }, {
      "uid" : "b259de833e007fe7",
      "name" : "SSID Profile Created",
      "source" : "b259de833e007fe7.attach",
      "type" : "text/plain",
      "size" : 2833
    }, {
      "uid" : "3276a60941c769cb",
      "name" : "SSID Profile Created",
      "source" : "3276a60941c769cb.attach",
      "type" : "text/plain",
      "size" : 2851
    }, {
      "uid" : "8e5cda2fd87d4b44",
      "name" : "SSID Profile Created",
      "source" : "8e5cda2fd87d4b44.attach",
      "type" : "text/plain",
      "size" : 2840
    }, {
      "uid" : "4e96a238e9b92942",
      "name" : "SSID Profile Created",
      "source" : "4e96a238e9b92942.attach",
      "type" : "text/plain",
      "size" : 2858
    }, {
      "uid" : "e7ecc82bb6ba2cd",
      "name" : "SSID Profile Created",
      "source" : "e7ecc82bb6ba2cd.attach",
      "type" : "text/plain",
      "size" : 2837
    }, {
      "uid" : "7814b769c449e3a6",
      "name" : "SSID Profile Created",
      "source" : "7814b769c449e3a6.attach",
      "type" : "text/plain",
      "size" : 2855
    }, {
      "uid" : "4ce7ff0eb0454b27",
      "name" : "Equipment AP Profile Created",
      "source" : "4ce7ff0eb0454b27.attach",
      "type" : "text/plain",
      "size" : 46
    }, {
      "uid" : "96436d84d39c3bfc",
      "name" : "APNOS LIbrary: ",
      "source" : "96436d84d39c3bfc.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "6ddb5106c8d40cff",
      "name" : "openwrt_ctl Setup",
      "source" : "6ddb5106c8d40cff.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "a77c82755d869b89",
      "name" : "vif config Output Msg: ",
      "source" : "a77c82755d869b89.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "19706c0f6f17ea55",
      "name" : "vif config Err Msg: ",
      "source" : "19706c0f6f17ea55.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3895d3775edb06c6",
      "name" : "get_vif_config_ssids ",
      "source" : "3895d3775edb06c6.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "30a5946ce05088a2",
      "name" : "vif config Output Msg: ",
      "source" : "30a5946ce05088a2.attach",
      "type" : "text/plain",
      "size" : 11157
    }, {
      "uid" : "4c60c8ec4dc7b8",
      "name" : "vif config Err Msg: ",
      "source" : "4c60c8ec4dc7b8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a6b7ca54e1c344b2",
      "name" : "get_vif_config_ssids ",
      "source" : "a6b7ca54e1c344b2.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "b2f44c7010d97029",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "b2f44c7010d97029.attach",
      "type" : "text/plain",
      "size" : 278
    }, {
      "uid" : "5005388340058c01",
      "name" : "APNOS LIbrary: ",
      "source" : "5005388340058c01.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "b9d9d1dd5e6439cf",
      "name" : "openwrt_ctl Setup",
      "source" : "b9d9d1dd5e6439cf.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "a9ca17a73d0222f2",
      "name" : "vif state Output Msg: ",
      "source" : "a9ca17a73d0222f2.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "4367b27bc2c3689b",
      "name" : "vif state Err Msg: ",
      "source" : "4367b27bc2c3689b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "80a254d10c4cf44d",
      "name" : "get_vif_state_ssids ",
      "source" : "80a254d10c4cf44d.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "7eb9e3b82db9a6e8",
      "name" : "vif config Output Msg: ",
      "source" : "7eb9e3b82db9a6e8.attach",
      "type" : "text/plain",
      "size" : 11157
    }, {
      "uid" : "d2b4e41c5b4a3344",
      "name" : "vif config Err Msg: ",
      "source" : "d2b4e41c5b4a3344.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "20f997610a231b82",
      "name" : "get_vif_config_ssids ",
      "source" : "20f997610a231b82.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "26e41776ba2eab40",
      "name" : "vif state Output Msg: ",
      "source" : "26e41776ba2eab40.attach",
      "type" : "text/plain",
      "size" : 12427
    }, {
      "uid" : "3ba891eb5d4b99bc",
      "name" : "vif state Err Msg: ",
      "source" : "3ba891eb5d4b99bc.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "8098fda2c26e7299",
      "name" : "get_vif_state_ssids ",
      "source" : "8098fda2c26e7299.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "9d4d3067bb6dde41",
      "name" : "vif config Output Msg: ",
      "source" : "9d4d3067bb6dde41.attach",
      "type" : "text/plain",
      "size" : 11157
    }, {
      "uid" : "418c697f96ee25e3",
      "name" : "vif config Err Msg: ",
      "source" : "418c697f96ee25e3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3243ad279939a8c3",
      "name" : "get_vif_config_ssids ",
      "source" : "3243ad279939a8c3.attach",
      "type" : "text/plain",
      "size" : 118
    }, {
      "uid" : "29edb825720f808b",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "29edb825720f808b.attach",
      "type" : "text/plain",
      "size" : 260
    }, {
      "uid" : "e5a8d62b124294f5",
      "name" : "AP LOgs: ",
      "source" : "e5a8d62b124294f5.attach",
      "type" : "text/plain",
      "size" : 68604
    }, {
      "uid" : "602a22023be50339",
      "name" : "vif state Output Msg: ",
      "source" : "602a22023be50339.attach",
      "type" : "text/plain",
      "size" : 12427
    }, {
      "uid" : "506fec9c62dfcbf",
      "name" : "vif state Err Msg: ",
      "source" : "506fec9c62dfcbf.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d60fea953b76d54a",
      "name" : "SSID DATA IN LF DUT",
      "source" : "d60fea953b76d54a.attach",
      "type" : "text/plain",
      "size" : 544
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 37,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624563262200,
      "stop" : 1624563262200,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : " VIF Config Suite B Enterprise ",
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 20:20:07 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1810\",\n  \"timestamp\" : 1624566007080\n}",
    "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7f58403cf730>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:613: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"radius\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7f5840049fd0>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=1810'\nquery_params = [('profileId', 1810)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiI0ZTE3ZmMxNS1iZWU3LTRhMDUtYjQ4ZS00YT...lwKdGm3OkuvtsUPYcqr7RMkMzASdiPneY1.', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 20:20:07 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=1810\",\nE             \"timestamp\" : 1624566007080\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b17b069c84149c63",
      "name" : "profile pushed successfully",
      "source" : "b17b069c84149c63.attach",
      "type" : "application/octet-stream",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624572067543,
      "stop" : 1624572067543,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624572067543,
      "stop" : 1624572067544,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "16efac7d1ee761be",
      "name" : "Controller Teardown: ",
      "source" : "16efac7d1ee761be.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1624572067357,
      "stop" : 1624572067357,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624572067635,
      "stop" : 1624572067635,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624572067550,
      "stop" : 1624572067550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624572067575,
      "stop" : 1624572067575,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware::0",
    "time" : {
      "start" : 1624572067471,
      "stop" : 1624572067471,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud::0",
    "time" : {
      "start" : 1624572067487,
      "stop" : 1624572067487,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624572067424,
      "stop" : 1624572067424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware::0",
    "time" : {
      "start" : 1624572067518,
      "stop" : 1624572067518,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases::0",
    "time" : {
      "start" : 1624572067427,
      "stop" : 1624572067427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware::0",
    "time" : {
      "start" : 1624572067446,
      "stop" : 1624572067446,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624572067399,
      "stop" : 1624572067399,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624572067667,
      "stop" : 1624572067667,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report::0",
    "time" : {
      "start" : 1624572067425,
      "stop" : 1624572067425,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware::0",
    "time" : {
      "start" : 1624572067482,
      "stop" : 1624572067482,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624572067328,
      "stop" : 1624572067328,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624572067507,
      "stop" : 1624572067507,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware::0",
    "time" : {
      "start" : 1624572067460,
      "stop" : 1624572067460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run::0",
    "time" : {
      "start" : 1624572067435,
      "stop" : 1624572067435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624572067369,
      "stop" : 1624572067369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624566002406,
      "stop" : 1624566002407,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624566002407,
      "stop" : 1624566007084,
      "duration" : 4677
    },
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 20:20:07 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1810\",\n  \"timestamp\" : 1624566007080\n}\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 613, in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"radius\"])\n  File \"/wlan-testing/tests/../libs/controller/controller.py\", line 1254, in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 150, in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 209, in delete_profile_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 316, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 148, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 382, in request\n    return self.rest_client.DELETE(url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 259, in DELETE\n    return self.request(\"DELETE\", url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 227, in request\n    raise ApiException(http_resp=r)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624572067414,
      "stop" : 1624572067414,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VLAN MODE ENTERPRISE SETUP"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "suiteA"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "setup"
  }, {
    "name" : "tag",
    "value" : "enterprise"
  }, {
    "name" : "tag",
    "value" : "vlan"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "sanity_light"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.configuration_tests.vlan_mode"
  }, {
    "name" : "suite",
    "value" : "test_enterprise_security_modes_configuration"
  }, {
    "name" : "subSuite",
    "value" : "TestSetupVLANEnterpriseSuiteA"
  }, {
    "name" : "host",
    "value" : "testing-32-dxkxc"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.configuration_tests.vlan_mode.test_enterprise_security_modes_configuration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'VLAN', 'ssid_modes': {'wpa_enterprise': [{'ssid_name': 'ssid_wpa_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_enterprise-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa_enterprise-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_enterprise': [{'ssid_name': 'ssid_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa3_enterprise': [{'ssid_name': 'ssid_wpa3_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa3_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}, 'rf': {}, 'radius': True}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "309936b10fc09253",
        "status" : "passed",
        "time" : {
          "start" : 1624565095969,
          "stop" : 1624565296069,
          "duration" : 200100
        }
      }, {
        "uid" : "7d14620fcbebdd75",
        "status" : "passed",
        "time" : {
          "start" : 1624542064211,
          "stop" : 1624542264312,
          "duration" : 200101
        }
      } ]
    },
    "tags" : [ "@pytest.mark.usefixtures('setup_profiles')", "vlan", "suiteA", "enterprise", "setup", "sanity", "sanity_light" ]
  },
  "source" : "331335eacb4526f0.json",
  "parameterValues" : [ "{'mode': 'VLAN', 'ssid_modes': {'wpa_enterprise': [{'ssid_name': 'ssid_wpa_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_enterprise-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa_enterprise-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa2_enterprise': [{'ssid_name': 'ssid_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa2_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}], 'wpa3_enterprise': [{'ssid_name': 'ssid_wpa3_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-0-VLAN', 'mode': 'BRIDGE', 'vlan': 100}, {'ssid_name': 'ssid_wpa3_eap_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-1-VLAN', 'mode': 'BRIDGE', 'vlan': 100}]}, 'rf': {}, 'radius': True}" ]
}
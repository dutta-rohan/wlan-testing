{
  "uid" : "403eb1eb5a532377",
  "name" : "test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]",
  "fullName" : "e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode#test_OpenRoaming_2g_WPA2_EAP",
  "historyId" : "815003a82ea6295c1e3e1ef95e606771",
  "time" : {
    "start" : 1625045731938,
    "stop" : 1625045870578,
    "duration" : 138640
  },
  "description" : "\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        ",
  "descriptionHtml" : "<pre><code>        EAP Passpoint BRIDGE Mode\n        pytest -m &quot;interop_iOS and eap_passpoint and bridge and wpa2_eap and twog&quot;\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3398227430>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n>                   wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/android_lib.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f33b0667310>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1170.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.ErrorHandler.createThrowable (ErrorHandler.java:214)\nE           at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed (ErrorHandler.java:166)\nE           at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue (JsonHttpResponseCodec.java:40)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:80)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:44)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.execute (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElementByXPath (AndroidDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumAndroidDriverWrapper$2.call (AppiumAndroidDriverWrapper.java:78)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode object at 0x7f3398051b50>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [6556, 6557, 6558, 6559], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_android = (<appium.webdriver.webdriver.WebDriver (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3398227430>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_android):\n        \"\"\"\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        report = setup_perfectoMobile_android[1]\n        driver = setup_perfectoMobile_android[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/androidconfig.cfg\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_android, connData)\n    \n        #ForgetWifi\n        #ForgetWifiConnection(request, setup_perfectoMobile_android, profileNameSSID, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_android(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_android, connData)\n\ne2e/interOp/android/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3398227430>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n                    wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n                    wifiSelectionElement.click()\n                except Exception as e:\n                    print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n>                   assert False\nE                   AssertionError\n\n../libs/perfecto_libs/android_lib.py:250: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1625034569406,
      "stop" : 1625034570833,
      "duration" : 1427
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8821346a934a39f8",
      "name" : "added openwrtctl.py to :",
      "source" : "8821346a934a39f8.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "6f0773464c8b1e3b",
      "name" : "APNOS LIbrary: ",
      "source" : "6f0773464c8b1e3b.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "2f0f6d5895487d4d",
      "name" : "openwrt_ctl Setup",
      "source" : "2f0f6d5895487d4d.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1625044339033,
      "stop" : 1625044339033,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info",
    "time" : {
      "start" : 1625045486572,
      "stop" : 1625045486572,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a26512b2fd26b4a2",
      "name" : "Passpoint RADIUS account server Info: ",
      "source" : "a26512b2fd26b4a2.attach",
      "type" : "text/plain",
      "size" : 63
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_APToMobileDevice_data",
    "time" : {
      "start" : 1625045716826,
      "stop" : 1625045716826,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile",
    "time" : {
      "start" : 1625045500042,
      "stop" : 1625045716826,
      "duration" : 216784
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "90e72a4640bad8e",
      "name" : "Equipment AP Profile Updated",
      "source" : "90e72a4640bad8e.attach",
      "type" : "text/plain",
      "size" : 31
    }, {
      "uid" : "cbad2b3844724563",
      "name" : "Pushing profiles on AP  :: ",
      "source" : "cbad2b3844724563.attach",
      "type" : "text/plain",
      "size" : 127
    }, {
      "uid" : "aa3e71800e269fcc",
      "name" : "APNOS LIbrary: ",
      "source" : "aa3e71800e269fcc.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "c6ac0ee74380e19a",
      "name" : "openwrt_ctl Setup",
      "source" : "c6ac0ee74380e19a.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "5c8936b4438f79b7",
      "name" : "vif config Output Msg: ",
      "source" : "5c8936b4438f79b7.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "1fa208546b396281",
      "name" : "vif config Err Msg: ",
      "source" : "1fa208546b396281.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f5c8cdd40fcd76dd",
      "name" : "get_vif_config_ssids ",
      "source" : "f5c8cdd40fcd76dd.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "b7f696440396280",
      "name" : "vif state Output Msg: ",
      "source" : "b7f696440396280.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "dacc1848e62b8168",
      "name" : "vif state Err Msg: ",
      "source" : "dacc1848e62b8168.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "84129379949deced",
      "name" : "get_vif_state_ssids ",
      "source" : "84129379949deced.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "5d75b152301f629f",
      "name" : "vif config Output Msg: ",
      "source" : "5d75b152301f629f.attach",
      "type" : "text/plain",
      "size" : 4096
    }, {
      "uid" : "b8b9bf0dc16129e8",
      "name" : "vif config Err Msg: ",
      "source" : "b8b9bf0dc16129e8.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "df38100f830cb7de",
      "name" : "get_vif_config_ssids ",
      "source" : "df38100f830cb7de.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "9571b66fc132b1cc",
      "name" : "vif state Output Msg: ",
      "source" : "9571b66fc132b1cc.attach",
      "type" : "text/plain",
      "size" : 4543
    }, {
      "uid" : "d38c5611ea30f646",
      "name" : "vif state Err Msg: ",
      "source" : "d38c5611ea30f646.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "addb0dec1ff786d",
      "name" : "get_vif_state_ssids ",
      "source" : "addb0dec1ff786d.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "b4ab0bcf2b581c13",
      "name" : "vifC status on AP :: ",
      "source" : "b4ab0bcf2b581c13.attach",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "3ea76afef9c746aa",
      "name" : "vifS status on AP :: ",
      "source" : "3ea76afef9c746aa.attach",
      "type" : "text/plain",
      "size" : 60
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 18,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_venue_info",
    "time" : {
      "start" : 1625045486571,
      "stop" : 1625045486571,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f74394be1252fb70",
      "name" : "Passpoint venue Info: ",
      "source" : "f74394be1252fb70.attach",
      "type" : "text/plain",
      "size" : 264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1625044338981,
      "stop" : 1625044338982,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b9840d34aaa21f2e",
      "name" : "VLAN Created: ",
      "source" : "b9840d34aaa21f2e.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1625034570833,
      "stop" : 1625034570979,
      "duration" : 146
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2ed9165e55864117",
      "name" : "Controller Instantiated: ",
      "source" : "2ed9165e55864117.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1625034581484,
      "stop" : 1625034581486,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5309f876315020c9",
      "name" : "Test Cases Requires: ",
      "source" : "5309f876315020c9.attach",
      "type" : "text/plain",
      "size" : 376
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1625034569406,
      "stop" : 1625034569406,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info",
    "time" : {
      "start" : 1625045486569,
      "stop" : 1625045486570,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f299bc4f829513f5",
      "name" : "Passpoint profile Info: ",
      "source" : "f299bc4f829513f5.attach",
      "type" : "text/plain",
      "size" : 928
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1625034581483,
      "stop" : 1625034581483,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625034570980,
      "stop" : 1625034571034,
      "duration" : 54
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_android",
    "time" : {
      "start" : 1625045716827,
      "stop" : 1625045731937,
      "duration" : 15110
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info",
    "time" : {
      "start" : 1625045486570,
      "stop" : 1625045486570,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "47dac34ed0f24570",
      "name" : "Passpoint Provider Info: ",
      "source" : "47dac34ed0f24570.attach",
      "type" : "text/plain",
      "size" : 350
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1625034569406,
      "stop" : 1625034569406,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "95a6fe31aec3cda8",
      "name" : "Testbed Selected: ",
      "source" : "95a6fe31aec3cda8.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1625034569405,
      "stop" : 1625034569405,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7b28bf65d9180d1c",
      "name" : "Testbed Selected : ",
      "source" : "7b28bf65d9180d1c.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_radius_server_info",
    "time" : {
      "start" : 1625045486571,
      "stop" : 1625045486572,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "da2064e1a622b7c6",
      "name" : "Passpoint RADIUS server Info: ",
      "source" : "da2064e1a622b7c6.attach",
      "type" : "text/plain",
      "size" : 137
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "passpoint_operator_info",
    "time" : {
      "start" : 1625045486571,
      "stop" : 1625045486571,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dab8825caeecf67b",
      "name" : "Passpoint operator Info: ",
      "source" : "dab8825caeecf67b.attach",
      "type" : "text/plain",
      "size" : 242
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625046767418,
      "stop" : 1625046847853,
      "duration" : 80435
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "65194ed71b759a51",
      "name" : "RF Profile Created : wifi6",
      "source" : "65194ed71b759a51.attach",
      "type" : "text/plain",
      "size" : 41
    }, {
      "uid" : "f82f51d79adf9655",
      "name" : "SSID Profile Created",
      "source" : "f82f51d79adf9655.attach",
      "type" : "text/plain",
      "size" : 2795
    }, {
      "uid" : "a2aa2106d473fba5",
      "name" : "SSID Profile Created",
      "source" : "a2aa2106d473fba5.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "a0f4e88756ea90cf",
      "name" : "SSID Profile Created",
      "source" : "a0f4e88756ea90cf.attach",
      "type" : "text/plain",
      "size" : 2811
    }, {
      "uid" : "5f5b3da200f9a61f",
      "name" : "SSID Profile Created",
      "source" : "5f5b3da200f9a61f.attach",
      "type" : "text/plain",
      "size" : 2829
    }, {
      "uid" : "ff3ccb70882b61ce",
      "name" : "Equipment AP Profile Created",
      "source" : "ff3ccb70882b61ce.attach",
      "type" : "text/plain",
      "size" : 45
    }, {
      "uid" : "3f361c6222b0ef33",
      "name" : "APNOS LIbrary: ",
      "source" : "3f361c6222b0ef33.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "d07082cd3faff595",
      "name" : "openwrt_ctl Setup",
      "source" : "d07082cd3faff595.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "e4879512156d3f34",
      "name" : "vif config Output Msg: ",
      "source" : "e4879512156d3f34.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "42737e01ba48a56b",
      "name" : "vif config Err Msg: ",
      "source" : "42737e01ba48a56b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2ad36317ed6d5d95",
      "name" : "get_vif_config_ssids ",
      "source" : "2ad36317ed6d5d95.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "903273b75849cd4f",
      "name" : "vif config Output Msg: ",
      "source" : "903273b75849cd4f.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "46da1ebaca802b5c",
      "name" : "vif config Err Msg: ",
      "source" : "46da1ebaca802b5c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "c9503d893a0a81d8",
      "name" : "get_vif_config_ssids ",
      "source" : "c9503d893a0a81d8.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "43befb0ec751ae0d",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "43befb0ec751ae0d.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "2d7273e5bbd0e67f",
      "name" : "APNOS LIbrary: ",
      "source" : "2d7273e5bbd0e67f.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "6d61593bb03e75f9",
      "name" : "openwrt_ctl Setup",
      "source" : "6d61593bb03e75f9.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "118a9780e4b17139",
      "name" : "vif state Output Msg: ",
      "source" : "118a9780e4b17139.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e5a1d6f4a1fd2c15",
      "name" : "vif state Err Msg: ",
      "source" : "e5a1d6f4a1fd2c15.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "98eab8b181de08b2",
      "name" : "get_vif_state_ssids ",
      "source" : "98eab8b181de08b2.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "168beb28be0bd008",
      "name" : "vif config Output Msg: ",
      "source" : "168beb28be0bd008.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "7688508855fe9feb",
      "name" : "vif config Err Msg: ",
      "source" : "7688508855fe9feb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1040555b6e3125d3",
      "name" : "get_vif_config_ssids ",
      "source" : "1040555b6e3125d3.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "e4dc7f29a8cac9bd",
      "name" : "vif state Output Msg: ",
      "source" : "e4dc7f29a8cac9bd.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "80a16ee9ad2a3964",
      "name" : "vif state Err Msg: ",
      "source" : "80a16ee9ad2a3964.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e3235e35ef9a5bf8",
      "name" : "get_vif_state_ssids ",
      "source" : "e3235e35ef9a5bf8.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "409311979c2272ab",
      "name" : "vif config Output Msg: ",
      "source" : "409311979c2272ab.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "ae1ea470dfd3d2b2",
      "name" : "vif config Err Msg: ",
      "source" : "ae1ea470dfd3d2b2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f0606b2d5e6595be",
      "name" : "get_vif_config_ssids ",
      "source" : "f0606b2d5e6595be.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "74513833b75bf04d",
      "name" : "vif state Output Msg: ",
      "source" : "74513833b75bf04d.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "aecb6086b0c85102",
      "name" : "vif state Err Msg: ",
      "source" : "aecb6086b0c85102.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "76b9fb7aacde39e1",
      "name" : "get_vif_state_ssids ",
      "source" : "76b9fb7aacde39e1.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "667da77bfc85d671",
      "name" : "vif config Output Msg: ",
      "source" : "667da77bfc85d671.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "b76cb25f5122f28a",
      "name" : "vif config Err Msg: ",
      "source" : "b76cb25f5122f28a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ee19e4fad5e19ef",
      "name" : "get_vif_config_ssids ",
      "source" : "ee19e4fad5e19ef.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "f1c8d72edf79b7ea",
      "name" : "vif state Output Msg: ",
      "source" : "f1c8d72edf79b7ea.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "89951c5269e39461",
      "name" : "vif state Err Msg: ",
      "source" : "89951c5269e39461.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "96766755eeda4125",
      "name" : "get_vif_state_ssids ",
      "source" : "96766755eeda4125.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d80616d9ad44110e",
      "name" : "vif config Output Msg: ",
      "source" : "d80616d9ad44110e.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "8b1c4df60b453efe",
      "name" : "vif config Err Msg: ",
      "source" : "8b1c4df60b453efe.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d609d7d469a34688",
      "name" : "get_vif_config_ssids ",
      "source" : "d609d7d469a34688.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "677e96da77da014b",
      "name" : "vif state Output Msg: ",
      "source" : "677e96da77da014b.attach",
      "type" : "text/plain",
      "size" : 7397
    }, {
      "uid" : "828d3920e0d0549d",
      "name" : "vif state Err Msg: ",
      "source" : "828d3920e0d0549d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d7088c9c31bcbd3a",
      "name" : "get_vif_state_ssids ",
      "source" : "d7088c9c31bcbd3a.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "d4b477b7576a7dc9",
      "name" : "vif config Output Msg: ",
      "source" : "d4b477b7576a7dc9.attach",
      "type" : "text/plain",
      "size" : 6880
    }, {
      "uid" : "11d3f2a78ea37f46",
      "name" : "vif config Err Msg: ",
      "source" : "11d3f2a78ea37f46.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f72dc28fd7900928",
      "name" : "get_vif_config_ssids ",
      "source" : "f72dc28fd7900928.attach",
      "type" : "text/plain",
      "size" : 62
    }, {
      "uid" : "758c7c1bcda2e2bf",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "758c7c1bcda2e2bf.attach",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 48,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1625044338982,
      "stop" : 1625044339033,
      "duration" : 51
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1625045486572,
      "stop" : 1625045500042,
      "duration" : 13470
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1629785750200e93",
      "name" : "RF Profile Created : wifi6",
      "source" : "1629785750200e93.attach",
      "type" : "text/plain",
      "size" : 12280
    }, {
      "uid" : "e4b61cc1a6aca43f",
      "name" : "Radius Profile Created",
      "source" : "e4b61cc1a6aca43f.attach",
      "type" : "text/plain",
      "size" : 183
    }, {
      "uid" : "9a14eededca0f3be",
      "name" : "SSID Profile Created",
      "source" : "9a14eededca0f3be.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "7b93b9923e12c524",
      "name" : "SSID Profile Created",
      "source" : "7b93b9923e12c524.attach",
      "type" : "text/plain",
      "size" : 2836
    }, {
      "uid" : "75b7e7e0be041697",
      "name" : "SSID Profile Created",
      "source" : "75b7e7e0be041697.attach",
      "type" : "text/plain",
      "size" : 2832
    }, {
      "uid" : "6ebf3621a7726e38",
      "name" : "SSID Profile Created",
      "source" : "6ebf3621a7726e38.attach",
      "type" : "text/plain",
      "size" : 2850
    }, {
      "uid" : "61db66c5e6770bc7",
      "name" : "SSID Profile Created",
      "source" : "61db66c5e6770bc7.attach",
      "type" : "text/plain",
      "size" : 2846
    }, {
      "uid" : "2a4827c785acac35",
      "name" : "Passpoint OSU ID provider Profile Created",
      "source" : "2a4827c785acac35.attach",
      "type" : "text/plain",
      "size" : 1527
    }, {
      "uid" : "219e03a140059cef",
      "name" : "Passpoint Operator Profile Created",
      "source" : "219e03a140059cef.attach",
      "type" : "text/plain",
      "size" : 1667
    }, {
      "uid" : "9eee834d0d284106",
      "name" : "Passpoint Venue Profile Created",
      "source" : "9eee834d0d284106.attach",
      "type" : "text/plain",
      "size" : 1488
    }, {
      "uid" : "33251b18e761fbd9",
      "name" : "Passpoint Profile Created",
      "source" : "33251b18e761fbd9.attach",
      "type" : "text/plain",
      "size" : 2617
    }, {
      "uid" : "4baa180663abdff",
      "name" : "Updating SSID profile",
      "source" : "4baa180663abdff.attach",
      "type" : "text/plain",
      "size" : 156
    }, {
      "uid" : "fcef3127a2688081",
      "name" : "Updating SSID profile",
      "source" : "fcef3127a2688081.attach",
      "type" : "text/plain",
      "size" : 152
    }, {
      "uid" : "975430c5de6b523c",
      "name" : "Updating SSID profile",
      "source" : "975430c5de6b523c.attach",
      "type" : "text/plain",
      "size" : 166
    }, {
      "uid" : "d98c5f8065b3035e",
      "name" : "Updating SSID profile",
      "source" : "d98c5f8065b3035e.attach",
      "type" : "text/plain",
      "size" : 162
    }, {
      "uid" : "7b93350fb8736dc6",
      "name" : "Equipment AP Profile Created",
      "source" : "7b93350fb8736dc6.attach",
      "type" : "text/plain",
      "size" : 51
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 16,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "request = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3398227430>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n>                   wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n\n../libs/perfecto_libs/android_lib.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f33b0667310>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE           at sun.reflect.GeneratedConstructorAccessor1170.newInstance (None:-1)\nE           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)\nE           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)\nE           at org.openqa.selenium.remote.ErrorHandler.createThrowable (ErrorHandler.java:214)\nE           at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed (ErrorHandler.java:166)\nE           at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue (JsonHttpResponseCodec.java:40)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:80)\nE           at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode (AbstractHttpResponseCodec.java:44)\nE           at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)\nE           at io.appium.java_client.remote.AppiumCommandExecutor.execute (AppiumCommandExecutor.java:239)\nE           at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:552)\nE           at io.appium.java_client.DefaultGenericMobileDriver.execute (DefaultGenericMobileDriver.java:41)\nE           at io.appium.java_client.AppiumDriver.execute (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.execute (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:323)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:61)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath (RemoteWebDriver.java:428)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath (DefaultGenericMobileDriver.java:151)\nE           at io.appium.java_client.AppiumDriver.findElementByXPath (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElementByXPath (AndroidDriver.java:1)\nE           at org.openqa.selenium.By$ByXPath.findElement (By.java:353)\nE           at org.openqa.selenium.remote.RemoteWebDriver.findElement (RemoteWebDriver.java:315)\nE           at io.appium.java_client.DefaultGenericMobileDriver.findElement (DefaultGenericMobileDriver.java:57)\nE           at io.appium.java_client.AppiumDriver.findElement (AppiumDriver.java:1)\nE           at io.appium.java_client.android.AndroidDriver.findElement (AndroidDriver.java:1)\nE           at com.perfectomobile.selenium.server.appium.AppiumAndroidDriverWrapper$2.call (AppiumAndroidDriverWrapper.java:78)\nE           at com.nexperience.function.execute.ExecuteCallableCommand.process (ExecuteCallableCommand.java:30)\nE           at com.nexperience.engine.script.command.AbstractScriptCommand.doExecute (AbstractScriptCommand.java:173)\nE           at com.nexperience.engine.script.command.ScriptCommandBase.execute (ScriptCommandBase.java:105)\nE           at com.nexperience.engine.script.tcl.event.CommandTclEvent.processEvent (CommandTclEvent.java:43)\nE           at com.nexperience.engine.script.tcl.event.MaseTclEvent.processEvent (MaseTclEvent.java:56)\nE           at tcl.lang.Notifier.serviceEvent (Notifier.java:457)\nE           at tcl.lang.Notifier.doOneEvent (Notifier.java:610)\nE           at tcl.lang.Notifier.processTclEvents (Notifier.java:786)\nE           at com.nexperience.engine.script.tcl.event.TclEventProcessor.start (TclEventProcessor.java:80)\nE           at com.nexperience.engine.script.tcl.TclInterpreter.startEventProcessing (TclInterpreter.java:552)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:85)\nE           at com.nexperience.engine.script.execution.step.StepExecutionEventProcessor.callImpl (StepExecutionEventProcessor.java:21)\nE           at com.nexperience.util.thread.WrappedCallable.call (WrappedCallable.java:31)\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\nE           at java.lang.Thread.run (Thread.java:748)\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode.TestOpenRoamingBridgeMode object at 0x7f3398051b50>\npasspoint_profile_info = {'access_network': {'Access Network Type': 'Free Public Network', 'Authentication Type': 'Acceptance of Terms & Condit...rvice': 'Disabled'}, 'allowed_ssids': [6556, 6557, 6558, 6559], 'hessid': None, 'interworking_hs2dot0': 'Enabled', ...}\npush_ap_profile = {'equipment_ap': {'sdk': True}, 'passpoint_profile_download': {'vif_config': True, 'vif_state': True}, 'ssid_wpa2_eap_passpoint_2g': {'vif_config': True, 'vif_state': True}}\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nget_APToMobileDevice_data = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\nsetup_perfectoMobile_android = (<appium.webdriver.webdriver.WebDriver (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3398227430>)\n\n    @pytest.mark.wpa2_eap\n    @pytest.mark.twog\n    @pytest.mark.parametrize(\n        'push_ap_profile',\n        [{\"ssid_names\": [\"ssid_wpa2_eap_passpoint_2g\", \"passpoint_profile_download\"]}],\n        indirect=True,\n        scope=\"function\"\n    )\n    @pytest.mark.usefixtures(\"push_ap_profile\")\n    def test_OpenRoaming_2g_WPA2_EAP(self, passpoint_profile_info, push_ap_profile, request, get_APToMobileDevice_data, setup_perfectoMobile_android):\n        \"\"\"\n            EAP Passpoint BRIDGE Mode\n            pytest -m \"interop_iOS and eap_passpoint and bridge and wpa2_eap and twog\"\n        \"\"\"\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_config']\n        if result:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config push to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n        result = push_ap_profile['ssid_wpa2_eap_passpoint_2g']['vif_state']\n        if result:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g successful \", body=\"\")\n        else:\n            allure.attach(name=\"Config apply to AP for ssid_wpa2_eap_passpoint_2g failed\", body=\"\")\n        assert result\n    \n        print(\"SSID to download profile :: \", setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"])\n        print(\"SSID to validate connectivity :: \", setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][0][\"ssid_name\"])\n        print(\"Profile download URL :: \", passpoint_profile_info[\"profile_download_url_ios\"])\n        print(\"Profile name to remove :: \", passpoint_profile_info[\"profile_name_on_device\"])\n    \n        #SSID to download profile ::  passpoint_profile_download\n        #SSID to validate connectivity ::  ssid_wpa2_eap_passpoint_5g\n        #Profile download URL ::  https://onboard.almondlabs.net/ios.html\n        #Profile name to remove ::  AmeriBand\n    \n        report = setup_perfectoMobile_android[1]\n        driver = setup_perfectoMobile_android[0]\n        connData = get_APToMobileDevice_data\n    \n        downloadProfileSSID = setup_params_eap[\"ssid_modes\"][\"open\"][0][\"ssid_name\"]\n        downloadProfileSSIDPass = \"\"\n        #profileDownloadURL = passpoint_profile_info[\"profile_download_url_ios\"]\n        profileDownloadURL = \"https://onboard.almondlabs.net/ttls/androidconfig.cfg\"\n        profileName = passpoint_profile_info[\"profile_name_on_device\"]\n        profileNameSSID = setup_params_eap[\"ssid_modes\"][\"wpa2_eap\"][1][\"ssid_name\"]\n    \n    \n        #Delete Profile Under Settings\n        deleteOpenRoamingInstalledProfile(request, profileName, setup_perfectoMobile_android, connData)\n    \n        #ForgetWifi\n        #ForgetWifiConnection(request, setup_perfectoMobile_android, profileNameSSID, connData)\n    \n        #Set Wifi/AP Mode\n>       set_APconnMobileDevice_android(request, downloadProfileSSID, downloadProfileSSIDPass, setup_perfectoMobile_android, connData)\n\ne2e/interOp/android/OpenRoamingPassPoint/test_OpenRoaming_BridgeMode.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_OpenRoaming_2g_WPA2_EAP[push_ap_profile0-setup_profiles0]>>\nWifiName = 'passpoint_profile_download', WifiPass = ''\nsetup_perfectoMobile = (<appium.webdriver.webdriver.WebDriver (session=\"6a86389c-cfa4-423d-a0aa-e0528702e9cf\")>, <perfecto.client.PerfectoReportiumClient.PerfectoReportiumClient object at 0x7f3398227430>)\nconnData = {'BtnRunSpeedTest': \"//*[text()='RUN SPEED TEST']\", 'UploadMbps': \"//*[@id='knowledge-verticals-internetspeedtest__upl...[@class='spiqle']\", 'appPackage-android': 'com.android.settings', 'bundleId-iOS-Safari': 'com.apple.mobilesafari', ...}\n\n    def set_APconnMobileDevice_android(request, WifiName, WifiPass, setup_perfectoMobile, connData):\n        print(\"\\n-------------------------------------\")\n        print(\"Select Wifi/AccessPoint Connection\")\n        print(\"-------------------------------------\")\n        print(\"Verifying Wifi/AP Connection Details....\")\n        report = setup_perfectoMobile[1]\n        driver = setup_perfectoMobile[0]\n    \n        report.step_start(\"Switching Driver Context\")\n        print(\"Switching Context to Native\")\n        contexts = driver.contexts\n        driver.switch_to.context(contexts[0])\n    \n        #Open Settings Application\n        openApp(connData[\"appPackage-android\"], setup_perfectoMobile)\n    \n        deviceModelName = getDeviceModelName(setup_perfectoMobile)\n        print (\"Selected Device Model: \" + deviceModelName)\n    \n        if deviceModelName!=(\"Pixel 4\"):\n    \n            report.step_start(\"Set Wifi Network to \" + WifiName)\n            try:\n                print(\"Verifying Connected Wifi Connection\")\n                report.step_start(\"Click Connections\")\n                connElement = driver.find_element_by_xpath(\"//*[@text='Connections']\")\n                connElement.click()\n            except NoSuchElementException:\n                print(\"Exception: Verify Xpath - Update/check Xpath for Click Connections\")\n    \n            try:\n                print(\"Get Connected Wifi Name if any\")\n                report.step_start(\"Get Connected Wifi Name if any\")\n                try:\n                    driver.implicitly_wait(20)\n                    WifiNameElement = driver.find_element_by_xpath(\"//*[@resource-id='android:id/summary']\")\n                    Wifi_AP_Name = WifiNameElement.text\n                    print(\"Current Wifi Status Name: \" + Wifi_AP_Name)\n                except NoSuchElementException:\n                    report.step_start(\"Checking Wifi Radio Button Status\")\n                    try:\n                        driver.implicitly_wait(5)\n                        WifiRadioBtnConnections = driver.find_element_by_xpath(\"//*[@resource-id='android:id/switch_widget' and @content-desc='Wi-Fi' and @text='Off']\")\n                        report.step_start(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        print(\"Wifi Radio Button Disabled, Enabling Radio Button..\")\n                        WifiRadioBtnConnections.click()\n                    except NoSuchElementException:\n                        Wifi_AP_Name=\"Null\"\n                        driver.implicitly_wait(25)\n                        report.step_start(\"Wifi Radio Button Already Enabled\")\n                        print(\"Wifi Radio Button Already Enabled\")\n    \n            except NoSuchElementException:\n                Wifi_AP_Name=\"Null\"\n                print(\"Device not connected to any Wifi\")\n    \n            report.step_start(\"Clicking Wi-Fi\")\n            wifiElement = driver.find_element_by_xpath(\"//*[@text='Wi-Fi']\")\n            wifiElement.click()\n    \n            if Wifi_AP_Name.__eq__(WifiName):\n                print(\"Wifi Name Matches - Already Connected To: \" + Wifi_AP_Name)\n    \n                try:\n                    report.step_start(\"Verify if Wifi is Connected\")\n                    WifiInternetErrMsg = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/summary' and @text='Connected']/parent::*/android.widget.TextView[@text='\" + WifiName + \"']\")\n                    print(\"Wifi Successfully Connected\")\n    \n                except NoSuchElementException:\n                    print(\"Wifi Connection Error: \" + WifiName)\n    \n            else:\n    \n                #print(\"Set Wifi Radio Button to enabled\")\n                #try:\n                #    report.step_start(\"Set Wifi Radio Button to enabled\")\n                #    wifiRadioBtn = driver.find_element_by_xpath(\"//*[@resource-id='com.android.settings:id/switch_widget' and @text='Wi-Fi, Off']\")\n                #    wifiRadioBtn.click()\n               # except NoSuchElementException:\n               #     report.step_start(\"Set Wifi Radio Button Already enabled\")\n                 #   print(\"Radio button Already Enabled\")\n    \n                print(\"Selecting Wifi: \" + WifiName)\n                try:\n                    report.step_start(\"Selecting Wifi: \" + WifiName)\n                    wifiSelectionElement = WebDriverWait(driver, 35).until(EC.presence_of_element_located((MobileBy.XPATH, \"//*[@text='\"+ WifiName + \"']\")))\n                    wifiSelectionElement.click()\n                except Exception as e:\n                    print(\"Exception on Selecting Wifi Network.  Please check wifi Name or signal\")\n                    request.config.cache.set(key=\"SelectingWifiFailed\", value=str(e))\n>                   assert False\nE                   AssertionError\n\n../libs/perfecto_libs/android_lib.py:250: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c4ed2f5c83caf7f0",
      "name" : "Config push to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "c4ed2f5c83caf7f0.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "e61bd9842c1a622c",
      "name" : "Config apply to AP for ssid_wpa2_eap_passpoint_2g successful ",
      "source" : "e61bd9842c1a622c.attach",
      "type" : "application/octet-stream",
      "size" : 0
    }, {
      "uid" : "b8d47a7f329dc0cb",
      "name" : "log",
      "source" : "b8d47a7f329dc0cb.txt",
      "type" : "text/plain",
      "size" : 659
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1625055314593,
      "stop" : 1625055314593,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1625055314453,
      "stop" : 1625055314453,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_accounting_server_info::0",
    "time" : {
      "start" : 1625055314807,
      "stop" : 1625055314807,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_APToMobileDevice_data::0",
    "time" : {
      "start" : 1625045897814,
      "stop" : 1625045897814,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "push_ap_profile::0",
    "time" : {
      "start" : 1625045897814,
      "stop" : 1625045897814,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_venue_info::0",
    "time" : {
      "start" : 1625055314809,
      "stop" : 1625055314809,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1625055314459,
      "stop" : 1625055314459,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1625055314580,
      "stop" : 1625055314580,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1625055314581,
      "stop" : 1625055314583,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "840fada062a2ea07",
      "name" : "Controller Teardown: ",
      "source" : "840fada062a2ea07.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1625055314435,
      "stop" : 1625055314435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1625055314628,
      "stop" : 1625055314628,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_profile_info::0",
    "time" : {
      "start" : 1625055314811,
      "stop" : 1625055314812,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1625055314450,
      "stop" : 1625055314450,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625055314500,
      "stop" : 1625055314500,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_android::1",
    "time" : {
      "start" : 1625045870621,
      "stop" : 1625045870621,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_perfectoMobile_android::teardown",
    "time" : {
      "start" : 1625045870621,
      "stop" : 1625045897813,
      "duration" : 27192
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_provider_info::0",
    "time" : {
      "start" : 1625055314811,
      "stop" : 1625055314811,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1625055314738,
      "stop" : 1625055314738,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1625055314783,
      "stop" : 1625055314783,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_radius_server_info::0",
    "time" : {
      "start" : 1625055314809,
      "stop" : 1625055314809,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "passpoint_operator_info::0",
    "time" : {
      "start" : 1625055314810,
      "stop" : 1625055314810,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625047355587,
      "stop" : 1625047355587,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625047355587,
      "stop" : 1625047379705,
      "duration" : 24118
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eeb009b8b4045e39",
      "name" : "Tear Down in Profiles ",
      "source" : "eeb009b8b4045e39.attach",
      "type" : "text/plain",
      "size" : 26
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1625055314456,
      "stop" : 1625055314456,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1625046742416,
      "stop" : 1625046742416,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1625046742416,
      "stop" : 1625046767413,
      "duration" : 24997
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eae61b5c43d042a3",
      "name" : "Tear Down in Profiles ",
      "source" : "eae61b5c43d042a3.attach",
      "type" : "text/plain",
      "size" : 32
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BRIDGE MODE EAP PASSPOINT SETUP"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('push_ap_profile')"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "android"
  }, {
    "name" : "tag",
    "value" : "interop"
  }, {
    "name" : "tag",
    "value" : "openRoaming"
  }, {
    "name" : "tag",
    "value" : "interop_and"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "wpa2_eap"
  }, {
    "name" : "tag",
    "value" : "twog"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.interOp.android.OpenRoamingPassPoint"
  }, {
    "name" : "suite",
    "value" : "test_OpenRoaming_BridgeMode"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenRoamingBridgeMode"
  }, {
    "name" : "host",
    "value" : "testing-59-6rpv8"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.interOp.android.OpenRoamingPassPoint.test_OpenRoaming_BridgeMode"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "push_ap_profile",
    "value" : "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}"
  }, {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "bb49b91efaeb3530",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1624678858951,
          "stop" : 1624678998288,
          "duration" : 139337
        }
      } ]
    },
    "tags" : [ "openRoaming", "wpa2_eap", "android", "interop", "sanity", "interop_and", "@pytest.mark.usefixtures('push_ap_profile')", "bridge", "twog" ]
  },
  "source" : "403eb1eb5a532377.json",
  "parameterValues" : [ "{'ssid_names': ['passpoint_profile_download', 'ssid_wpa2_eap_passpoint_2g']}", "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'passpoint_profile_download', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_eap': [{'ssid_name': 'ssid_wpa2_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_only_eap': [{'ssid_name': 'ssid_wpa2_only_eap_passpoint_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_only_eap_passpoint_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_only_eap-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}}" ]
}